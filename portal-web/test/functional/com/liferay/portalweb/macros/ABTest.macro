definition {

	macro changeExperienceABTest {
		WaitForElementPresent(locator1 = "ABTest#CHANGE_EXPERIENCE");

		Select(
			locator1 = "ABTest#CHANGE_EXPERIENCE",
			value1 = "${experience}");
	}

	macro checkAnalyticsCloudInfo {
		if (IsElementPresent(locator1 = "ABTest#REVIEW_AND_RUN_TEST_BUTTON")) {
			ABTest.runTest();
		}

		Click(locator1 = "ABTest#VIEW_DATA_ANALYTICS_CLOUD_BUTTON");

		SelectWindow(locator1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");
		}

		AssertTextEquals(
			abTestTitle = "${abTestTitle}",
			locator1 = "ABTest#AB_TEST_TITLE_AC_SIDE",
			value1 = "${abTestTitle}");

		Close(locator1 = "title=Tests - Analytics Cloud");
	}

	macro checkVariantAnalyticsCloud {
		var index = "1";

		if (IsElementPresent(locator1 = "ABTest#REVIEW_AND_RUN_TEST_BUTTON")) {
			ABTest.runTest();
		}

		Click(locator1 = "ABTest#VIEW_DATA_ANALYTICS_CLOUD_BUTTON");

		SelectWindow(locator1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");
		}

		for (var variantNames : list "${variantNames}") {
			var index = ${index} + 1;

			AssertElementPresent(
				key_index = "${index}",
				locator1 = "ABTest#REVIEW_VARIANTS_ANALYTICS_CLOUD",
				name = "${variantNames}");
		}

		Close(locator1 = "title=Tests - Analytics Cloud");
	}

	macro createABTest {
		while (IsElementNotPresent(locator1 = "ABTest#CREATE_TEST_BUTTON")) {
			Click(locator1 = "ABTest#AB_TEST_BUTTON");
		}

		Click(locator1 = "ABTest#CREATE_TEST_BUTTON");

		Click(locator1 = "ABTest#AB_TEST_TITLE_FIELD");

		Type(
			locator1 = "ABTest#AB_TEST_TITLE_FIELD",
			value1 = "${testTitle}");

		Select(
			locator1 = "ABTest#CHANGE_SELECT_GOAL",
			value1 = "${goal}");

		Click(locator1 = "ABTest#SAVE_AB_TEST_BUTTON");
	}

	macro createVariant {
		Click(locator1 = "ABTest#CREATE_VARIANT_BUTTON");

		Click(locator1 = "ABTest#VARIANT_NAME_FIELD");

		Type(
			locator1 = "ABTest#VARIANT_NAME_FIELD",
			value1 = "${variantName}");

		Click(locator1 = "ABTest#SAVE_VARIANT_NAME_BUTTON");
	}

	macro deleteABTestInAC {
		Click(
			key_text = "ellipsis-v",
			locator1 = "Icon#ANY");

		MenuItem.clickNoError(menuItem = "Delete Test");

		Button.clickDelete();
	}

	macro deleteVariant {
		if (!(isSet(key_index))) {
			var key_index = "1";
		}

		Click(locator1 = "ABTest#VARIANT_DROPDOWN");

		ClickNoError(locator1 = "ABTest#DELETE_VARIANT_BUTTON");

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro editOrDeleteABTest {
		Click(locator1 = "ABTest#KEBAB_AB_TEST");

		ClickNoError(
			locator1 = "ABTest#KEBAB_OPTIONS_AB_TEST",
			value = "${value}");

		if ("${value}" == "Delete") {
			AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}
	}

	macro editVariantName {
		if (!(isSet(key_index))) {
			var key_index = "1";
		}

		Click(locator1 = "ABTest#VARIANT_DROPDOWN");

		Click(locator1 = "ABTest#EDIT_VARIANT_BUTTON");
	}

	macro openABTestInAC {
		Click(locator1 = "ABTest#VIEW_DATA_ANALYTICS_CLOUD_BUTTON");

		SelectWindow(locator1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");
		}
	}

	macro openABTestPanel {
		if (IsNotVisible(locator1 = "ABTest#AB_TEST_SIDE_BAR")) {
			Click(locator1 = "ABTest#AB_TEST_BUTTON");
		}

		while (IsNotVisible(locator1 = "ABTest#AB_TEST_SIDE_BAR")) {
			WaitForElementPresent(locator1 = "ABTest#AB_TEST_SIDE_BAR");
		}
	}

	macro runTest {
		Click(locator1 = "ABTest#REVIEW_AND_RUN_TEST_BUTTON");

		if (IsElementPresent(locator1 = "ABTest#RUN_TEST_BUTTON")) {
			ClickNoError(locator1 = "ABTest#RUN_TEST_BUTTON");

			Click(locator1 = "ABTest#OK_BUTTON");
		}
	}

	macro selectElementID {
		if (!(isSet(key_index))) {
			var key_index = "1";
		}

		Click(
			key_value = "Select Clickable Element",
			locator1 = "ABTest#SECONDARY_BUTTON");

		Click(locator1 = "ABTest#SELECT_CLICKABLE_ELEMENT");

		Click(locator1 = "ABTest#SET_ELEMENT_AS_CLICK_TARGET_BUTTON");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "ABTest#TARGET_LABEL",
			value1 = "Target");
	}

	macro statusABTestInAC {
		AssertTextEquals(
			locator1 = "ABTest#LABEL_ITEM_STATUS",
			value1 = "${status}");
	}

	macro takeElementID {
		if (!(isSet(key_index))) {
			var key_index = "1";
		}

		Click(
			key_value = "Select Clickable Element",
			locator1 = "ABTest#SECONDARY_BUTTON");

		Click(locator1 = "ABTest#SELECT_CLICKABLE_ELEMENT");

		var idelement = selenium.getAttribute("//div[contains(@class,'text-truncate')]@title");
		var idelement = StringUtil.substring("${idelement}", "1", "19");

		Click(locator1 = "ABTest#X_BUTTON_TARGET_ID_ELEMENT");

		return "${idelement}";
	}

	macro terminateTest {
		if (IsElementPresent(locator1 = "ABTest#TERMINATE_TEST_BUTTON")) {
			ClickNoError(locator1 = "ABTest#TERMINATE_TEST_BUTTON");
		}
		else {
			Refresh();

			ClickNoError(locator1 = "ABTest#TERMINATE_TEST_BUTTON");
		}

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to terminate this test?");

		Alert.viewSuccessMessage();
	}

	macro viewInfoItems {
		var index = "0";

		for (var values : list "${values}") {
			var index = ${index} + 1;

			AssertElementPresent(
				key_index = "${index}",
				key_value = "${values}",
				locator1 = "ABTest#VIEW_INFO_ITEMS",
				value1 = "${values}");
		}
	}

	macro viewVariantName {
		var index = "1";

		for (var variantNames : list "${variantNames}") {
			var index = ${index} + 1;

			AssertElementPresent(
				key_index = "${index}",
				key_name = "${variantNames}",
				locator1 = "ABTest#VALUES_IN_LIST");
		}
	}

	macro writeId {
		Click(locator1 = "ABTest#ELEMENT_ID_INPUT");

		Type(
			locator1 = "ABTest#ELEMENT_ID_INPUT",
			value1 = "${elementId}");
	}

}