definition {

	macro adaptAllImages {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Adapt All Images");

		Alert.viewSuccessMessage();
	}

	macro adaptRemainingImages {
		var key_imageName = "${imageName}";

		if (IsElementNotPresent(locator1 = "AdaptiveMediaTable#PROGRESS_SUCCESS")) {
			Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

			MenuItem.click(menuItem = "Adapt Remaining");
		}

		AssertVisible(locator1 = "AdaptiveMediaTable#PROGRESS");

		AssertElementPresent(locator1 = "AdaptiveMediaTable#PROGRESS_SUCCESS");
	}

	macro addImageResolution {
		if (IsTextNotEqual(locator1 = "ControlMenu#HEADING", value1 = "New Image Resolution")) {
			LexiconEntry.gotoAdd();
		}

		PortletEntry.inputName(name = "${imageName}");

		if (isSet(description)) {
			PortletEntry.inputDescription(description = "${description}");
		}

		if (isSet(maxWidth)) {
			Type(
				locator1 = "TextInput#MAX_WIDTH",
				value1 = "${maxWidth}");
		}

		if (isSet(maxHeight)) {
			Type(
				locator1 = "TextInput#MAX_HEIGHT",
				value1 = "${maxHeight}");
		}

		if (isSet(addHighDensityDisplay)) {
			Check.checkNotVisible(locator1 = "Checkbox#ADD_HIGH_DENSITY_DISPLAY");
		}

		if (isSet(customId)) {
			Click.clickAtNotVisible(locator1 = "Radio#CUSTOM_URL");

			Type(
				locator1 = "TextInput#IMAGE_ID",
				value1 = "${customId}");
		}

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		if (isSet(duplicate)) {
			Alert.viewErrorMessage(errorMessage = "A configuration with this ID already exists. Enter a unique ID.");
		}
		else if (isSet(zero)) {
			AssertTextEquals(
				locator1 = "Message#ERROR_FORM_FIELD_REQUIRED",
				value1 = "Please enter a max width or max height value larger than 0.");
		}
		else if (isSet(noDimensions)) {
			AssertTextEquals(
				locator1 = "Message#ERROR_FORM_FIELD_REQUIRED",
				value1 = "At least one value is required.");
		}
		else {
			AssertElementNotPresent(locator1 = "Message#ERROR");
		}
	}

	macro addNonNumericImageResolution {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${imageName}");

		Type(
			locator1 = "TextInput#MAX_WIDTH",
			value1 = "${maxWidth}");

		Type(
			locator1 = "TextInput#MAX_HEIGHT",
			value1 = "${maxHeight}");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		AssertElementNotPresent(locator1 = "Message#SUCCESS");

		AssertTextEquals.assertPartialText(
			locator1 = "TextInput#REQUIRED_ALERT",
			value1 = "At least one value is required.");
	}

	macro deleteImageResolution {
		var key_imageName = "${imageName}";

		Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();

		AssertElementNotPresent(locator1 = "AdaptiveMediaTable#NAME");
	}

	macro disableImageResolution {
		var key_imageName = "${imageName}";

		Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

		MenuItem.click(menuItem = "Disable");

		var key_imageState = "${imageState}";

		AssertTextEquals(
			locator1 = "AdaptiveMediaTable#STATE",
			value1 = "Disabled");

		AssertElementPresent(locator1 = "AdaptiveMediaTable#PROGRESS_DISABLED");
	}

	macro editImageResolution {
		var key_imageName = "${imageName}";

		Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

		MenuItem.click(menuItem = "Edit");

		if (isSet(imageNameEdit)) {
			PortletEntry.inputName(name = "${imageNameEdit}");
		}

		AssertElementNotPresent(locator1 = "Checkbox#ADD_HIGH_DENSITY_DISPLAY");

		if (IsElementPresent(locator1 = "Message#INFO")) {
			AssertNotEditable(locator1 = "TextInput#IMAGE_ID");

			AssertNotEditable(locator1 = "TextInput#MAX_HEIGHT");

			AssertNotEditable(locator1 = "TextInput#MAX_WIDTH");

			AssertElementPresent(locator1 = "Radio#AUTOMATIC_URL_DISABLED");

			AssertElementPresent(locator1 = "Radio#CUSTOM_URL_DISABLED");
		}
		else {
			if (isSet(maxHeightEdit)) {
				TripleClick(locator1 = "TextInput#MAX_HEIGHT");

				Type.sendKeys(
					locator1 = "TextInput#MAX_HEIGHT",
					value1 = "${maxHeightEdit}");
			}

			if (isSet(maxWidthEdit)) {
				TripleClick(locator1 = "TextInput#MAX_WIDTH");

				Type.sendKeys(
					locator1 = "TextInput#MAX_WIDTH",
					value1 = "${maxWidthEdit}");
			}

			if (isSet(imageIdEdit)) {
				Click.clickAtNotVisible(locator1 = "Radio#CUSTOM_URL");

				Type(
					locator1 = "TextInput#IMAGE_ID",
					value1 = "${imageIdEdit}");
			}
		}

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		if (isSet(noDimensions)) {
			AssertTextEquals(
				locator1 = "Message#ERROR_FORM_FIELD_REQUIRED",
				value1 = "At least one value is required.");
		}
		else if (isSet(zero)) {
			AssertTextEquals(
				locator1 = "Message#ERROR_FORM_FIELD_REQUIRED",
				value1 = "Please enter a max width or max height value larger than 0.");
		}
		else {
			AssertElementNotPresent(locator1 = "Message#ERROR");
		}
	}

	macro enableImageResolution {
		var key_imageName = "${imageName}";

		Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

		MenuItem.click(menuItem = "Enable");

		var key_imageState = "${imageState}";

		AssertTextEquals(
			locator1 = "AdaptiveMediaTable#STATE",
			value1 = "Enabled");
	}

	macro gotoImageVariantEntry {
		var key_imageName = "${imageName}";

		AssertClick(
			locator1 = "AdaptiveMediaTable#NAME",
			value1 = "${imageName}");
	}

	macro openAdaptiveMediaAdmin {
		Navigator.openWithAppendToBaseURL(
			baseURL = "${baseURL}",
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_adaptive_media_web_portlet_AMPortlet&p_p_lifecycle=0&p_p_state=maximized&p_p_mode=view");
	}

	macro openToAddImageResolution {
		var baseURL = "${baseURL}";

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		Open(locator1 = "${baseURL}/group/control_panel/manage?p_p_id=com_liferay_adaptive_media_web_portlet_AMPortlet&_com_liferay_adaptive_media_web_portlet_AMPortlet_mvcRenderCommandName=%2Fadaptive_media%2Fedit_image_configuration_entry&_com_liferay_adaptive_media_web_portlet_AMPortlet_redirect=${baseURL}/group/control_panel/manage?p_p_id=com_liferay_adaptive_media_web_portlet_AMPortlet&_com_liferay_adaptive_media_web_portlet_AMPortlet_mvcRenderCommandName=%2Fadaptive_media%2Fedit_image_configuration_entry");
	}

	macro selectAdaptiveMediaImage {
		var key_imageName = "${imageName}";

		Check(locator1 = "Checkbox#ADAPTIVE_MEDIA_IMAGE");
	}

	macro viewImageResolutionTableEntry {
		var key_imageName = "${imageName}";

		AssertTextEquals.assertPartialText(
			locator1 = "AdaptiveMediaTable#NAME",
			value1 = "${imageName}");

		var key_imageState = "${imageState}";

		if (isSet(imageState)) {
			AssertTextEquals(
				locator1 = "AdaptiveMediaTable#STATE",
				value1 = "${imageState}");
		}

		if (isSet(percentAdapted)) {
			AssertTextEquals.assertPartialText(
				locator1 = "AdaptiveMediaTable#PROGRESS",
				value1 = "${percentAdapted}");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "AdaptiveMediaTable#MAX_WIDTH",
			value1 = "${maxWidth}");

		AssertTextEquals.assertPartialText(
			locator1 = "AdaptiveMediaTable#MAX_HEIGHT",
			value1 = "${maxHeight}");
	}

	macro viewImageVariantDescription {
		AssertTextEquals(
			locator1 = "TextArea#DESCRIPTION",
			value1 = "${description}");
	}

	macro viewImageVariantID {
		AssertTextEquals(
			locator1 = "TextInput#IMAGE_ID",
			value1 = "${imageVariantId}");
	}

	macro viewImageVariantURL {
		var key_imageName = "${imageName}";

		AssertElementPresent(locator1 = "AdaptiveMedia#IMAGE_VARIANT_SOURCE_URL");
	}

	macro viewNoImageResolution {
		var key_imageName = "${imageName}";

		AssertElementNotPresent(locator1 = "AdaptiveMediaTable#NAME");
	}

	macro viewNumberOfAdaptedImages {
		AssertElementPresent(locator1 = "AdaptiveMediaTable#INFO_ICON");

		Click(locator1 = "AdaptiveMediaTable#INFO_ICON");

		var key_numberOfAdaptedImages = "${numberOfAdaptedImages}";

		AssertTextEquals(
			locator1 = "AdaptiveMediaTable#IMAGE_INFO_DETAILS_ADAPTED_IMAGES",
			value1 = "${numberOfAdaptedImages}");

		Click(locator1 = "AdaptiveMediaTable#INFO_ICON");
	}

}