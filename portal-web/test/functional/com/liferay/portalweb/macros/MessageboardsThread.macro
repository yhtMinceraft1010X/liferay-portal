definition {

	var assetType = "Message Boards Thread";
	var userName = "Test Test";

	macro addCP {
		if (isSet(siteURLKey)) {
			MessageboardsThread.openToAddThread(siteURLKey = "${siteURLKey}");
		}
		else {
			LexiconEntry.gotoAdd();

			MenuItem.click(menuItem = "Thread");
		}

		AssertElementPresent(locator1 = "TextInput#SUBJECT");

		AssertVisible(locator1 = "TextInput#SUBJECT");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		if (isSet(displayTextWithLink)) {
			CKEditor.addTextWithLink(
				displayText = "${displayText}",
				dmDocumentTitle = "${dmDocumentTitle}",
				fieldLabel = "${fieldLabel}",
				pageName = "${pageName}");
		}
		else {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "${threadBody}");

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(categoryName)) {
			Panel.expandPanel(panel = "Categorization");

			AssetCategorization.addCategory(
				categoryName = "${categoryName}",
				vocabularyName = "${vocabularyName}");
		}

		if (isSet(mbAttachmentFile)) {
			Panel.expandPanel(panel = "Attachments");

			AssertElementPresent(locator1 = "Button#SELECT_FILES");

			var key_attachmentFileName = "${mbAttachmentFile}";

			UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${mbAttachmentFile}");

			Pause(locator1 = "3000");

			if (IsNotChecked.isNotCheckedNotVisible(key_fileName = "${mbAttachmentFile}", locator1 = "Checkbox#UPLOAD_FILE_ENTRY")) {
				Check.checkNotVisible(
					key_fileName = "${mbAttachmentFile}",
					locator1 = "Checkbox#UPLOAD_FILE_ENTRY");
			}
		}

		PortletEntry.publish();
	}

	macro addInvalidAttachmentPG {
		AssertClick(
			locator1 = "Button#NEW_THREAD",
			value1 = "New Thread");

		Pause(locator1 = "3000");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		Panel.expandPanel(panel = "Attachments");

		AssertElementPresent(locator1 = "Button#SELECT_FILES");

		var key_attachmentFileName = "${mbThreadAttachment}";

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "${mbThreadAttachment}");

		if ("${invalidSize}" == "true") {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_INVALID_SIZE_ERROR",
				value1 = "Please enter a file with a valid file size no larger than ${maxAttachmentFileSize}KB.");
		}
	}

	macro addPG {
		if (isSet(siteURLKey)) {
			MessageboardsThread.openToAddThread(
				categoryName = "${categoryName}",
				groupName = "${groupName}",
				layoutName = "${layoutName}",
				siteURLKey = "${siteURLKey}");
		}
		else {
			AssertClick(
				locator1 = "Button#NEW_THREAD",
				value1 = "New Thread");
		}

		AssertElementPresent(locator1 = "TextInput#SUBJECT");

		AssertVisible(locator1 = "TextInput#SUBJECT");

		Click(locator1 = "TextInput#SUBJECT");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		if (isSet(source)) {
			Click(locator1 = "CKEditor#TOOLBAR_SOURCE_BUTTON");

			if (IsVisible(locator1 = "CKEditor#BODY_FIELD_SOURCE_ON_2")) {
				Type(
					locator1 = "CKEditor#BODY_FIELD_SOURCE_ON_2",
					value1 = "${threadBody}");
			}

			if (IsElementPresent(locator1 = "CKEditor#BODY_FIELD_SOURCE_ON")) {
				Type.typeCodeMirrorEditorNoError(
					locator1 = "CKEditor#BODY_FIELD_SOURCE_ON",
					value1 = "${threadBody}");
			}
		}
		else {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "${threadBody}");

			if ("${bold}" == "true") {
				SelectFrame();

				FormFields.toggleCKEditorContentStyle(optionTool = "Bold");
			}
		}

		SelectFrame(value1 = "relative=top");

		if (isSet(threadBodyImageName)) {
			var key_imageFileName = "${threadBodyImageName}";

			ItemSelector.gotoItemSelectorViaCKEditor();

			SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

			Click(locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");
		}

		if (isSet(tagName)) {
			Panel.expandPanel(panel = "Categorization");

			AssetCategorization.addTag(tagName = "${tagName}");
		}

		if (isSet(priority)) {
			Panel.expandPanel(panel = "More Settings");

			Select(
				locator1 = "MessageBoardsThread#THREAD_PRIORITY_SELECT",
				value1 = "${priority}");

			AssertSelectedLabel(
				locator1 = "Select#SELECT_ID",
				selectFieldId = "priority",
				value1 = "${priority}");
		}

		if (isSet(mbAttachmentFileList)) {
			Panel.expandPanel(panel = "Attachments");

			AssertElementPresent(locator1 = "Button#SELECT_FILES");

			for (var mbAttachmentFile : list "${mbAttachmentFileList}") {
				UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
					locator1 = "TextInput#FILE",
					value1 = "${mbAttachmentFile}");
			}
		}

		Button.clickPublish();

		if ("${invalidCharacters}" == "true") {
			AssertTextEquals.assertPartialText(
				key_alertMessage = "One or more tags contains invalid characters.",
				locator1 = "Message#ERROR_ENTER_A_VALID_VALUE",
				value1 = "One or more tags contains invalid characters.");
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro addPGAsQuestion {
		AssertClick(
			locator1 = "Button#NEW_THREAD",
			value1 = "New Thread");

		AssertElementPresent(locator1 = "TextInput#SUBJECT");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBody}");

		SelectFrame(value1 = "relative=top");

		Panel.expandPanel(panel = "More Settings");

		Check(locator1 = "Checkbox#MARK_AS_A_QUESTION");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "${pageName}");

		if (isSet(categoryName)) {
			MessageboardsCategory.gotoPG(categoryName = "${categoryName}");
		}

		MessageboardsThread.gotoPG(
			lastPostUserName = "${lastPostUserName}",
			replyCount = "${replyCount}",
			threadBody = "${threadBody}",
			threadSubject = "${threadSubject}");

		AssertClick(
			key_breadcrumbName = "${breadcrumbName}",
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK",
			value1 = "${breadcrumbName}");

		MessageboardsThread.viewMarkedAsQuestionPG(threadSubject = "${threadSubject}");
	}

	macro addPGWithAttachment {
		AssertClick(
			locator1 = "Button#NEW_THREAD",
			value1 = "New Thread");

		AssertElementPresent.assertElementPresent(locator1 = "TextInput#SUBJECT");

		Click(locator1 = "TextInput#SUBJECT");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBody}");

		SelectFrame(value1 = "relative=top");

		Panel.expandPanel(panel = "Attachments");

		AssertElementPresent(locator1 = "Button#SELECT_FILES");

		var key_attachmentFileName = "${mbThreadAttachment}";

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "${mbThreadAttachment}");

		AssertElementPresent(locator1 = "MessageBoardsEditMessage#ATTACHMENTS_SAVED_STATUS");

		Button.clickPublish();

		Alert.viewSuccessMessage();
	}

	macro addPGWithPermissions {
		if (!(isSet(skipNavigation))) {
			AssertClick(
				locator1 = "Button#NEW_THREAD",
				value1 = "New Thread");
		}

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBody}");

		SelectFrame(value1 = "relative=top");

		Panel.expandPanel(panel = "Permissions");

		Select(
			locator1 = "AssetPermissions#VIEWABLE_AS_SELECT",
			value1 = "${viewableBySelection}");

		SelectFrameTop();

		PortletEntry.publish();
	}

	macro addWithWorkflowCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		AssertElementPresent(locator1 = "TextInput#SUBJECT");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBody}");

		SelectFrameTop();

		Click(locator1 = "Button#SUBMIT_FOR_PUBLICATION");

		Alert.viewSuccessMessage();
	}

	macro addWithWorkflowPG {
		AssertClick(
			locator1 = "Button#NEW_THREAD",
			value1 = "New Thread");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBody}");

		SelectFrameTop();

		Click(locator1 = "Button#SUBMIT_FOR_PUBLICATION");

		Alert.viewSuccessMessage();
	}

	macro assertAlertNotPresent {
		AssertAlertNotPresent();
	}

	macro assertDownloadedFileNameFromTempFolder {
		if (isSet(exportedFileName)) {
			var downloadedFileName = TestCase.getDownloadedTempFileName(fileNamePattern = "${exportedFileName}.lar");
		}
		else {
			var downloadedFileName = TestCase.getDownloadedTempFileName(fileNamePattern = "${attachmentFileName}.jpg");
		}

		echo("## downloadedFileName: ${downloadedFileName}");

		if (contains("${downloadedFileName}", "${attachmentFileName}")) {
			echo("This is a correct file.");
		}
		else if (contains("${downloadedFileName}", "${exportedFileName}")) {
			echo("This is a downloaded lar file.");
		}
		else {
			fail("FAIL!");
		}
	}

	macro banUser {
		Click.waitForMenuToggleJSClick(
			key_threadReplyBody = "${threadReplyBody}",
			locator1 = "MessageBoards#THREAD_REPLY_ACTIONS");

		MenuItem.click(menuItem = "Ban This User");

		Alert.viewSuccessMessage();
	}

	macro cancelAdd {
		AssertClick(
			locator1 = "Button#NEW_THREAD",
			value1 = "New Thread");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBody}");

		SelectFrameTop();

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");
	}

	macro cancelEdit {
		Click(
			key_threadSubject = "${threadSubject}",
			locator1 = "MessageBoards#VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubjectEdit}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBodyEdit}");

		SelectFrameTop();

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");
	}

	macro deletePG {
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		LexiconEntry.openEntryMenu(rowEntry = "${threadSubject}");

		MenuItem.click(menuItem = "Delete");

		VerifyElementPresent(locator1 = "Message#SUCCESS");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD");
	}

	macro downloadAttachmentPG {
		if (isSet(attachmentsList)) {
			Click(
				index = "${index}",
				locator1 = "MessageBoardsThread#MESSAGE_BODY_ATTACHMENT_LIST");
		}
		else {
			Click(locator1 = "MessageBoardsThread#MESSAGE_BODY_ATTACHMENT_1");
		}

		DownloadTempFile();
	}

	macro editCP {
		if (!(isSet(skipNavigation))) {
			LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");
		}

		if (isSet(threadBody)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			AssertTextEquals.assertPartialText(
				locator1 = "CKEditor#BODY",
				value1 = "${threadBody}");

			SelectFrameTop();
		}

		if ("${threadAttachmentRemove}" == "true") {
			Panel.expandPanel(panel = "Attachments");

			AssertTextEquals.assertPartialText(
				key_rowEntry = "${mbAttachmentFile}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK",
				value1 = "${mbAttachmentFile}");

			AssertClick(
				key_attachmentName = "${mbAttachmentFile}",
				locator1 = "MessageBoardsEditMessage#ATTACHMENTS_REMOVE_LINK",
				value1 = "Delete");

			AssertElementNotPresent(
				key_rowEntry = "${mbAttachmentFile}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK");
		}

		if (isSet(threadSubjectEdit)) {
			Type(
				locator1 = "TextInput#SUBJECT",
				value1 = "${threadSubjectEdit}");
		}

		if (isSet(threadBodyEdit)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "${threadBodyEdit}");

			SelectFrameTop();
		}
	}

	macro editPG {
		if (isSet(siteURLKey)) {
			MessageboardsThread.openToEditThread(
				categoryName = "${categoryName}",
				groupName = "${groupName}",
				layoutName = "${layoutName}",
				siteURLKey = "${siteURLKey}",
				threadSubject = "${threadSubject}");
		}
		else {
			Click(
				key_threadSubject = "${threadSubject}",
				locator1 = "MessageBoards#VERTICAL_ELLIPSIS");

			MenuItem.click(menuItem = "Edit");
		}

		if (isSet(threadSubjectEdit)) {
			Type(
				locator1 = "TextInput#SUBJECT",
				value1 = "${threadSubjectEdit}");
		}

		if (isSet(threadBodyEdit)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "${threadBodyEdit}");

			SelectFrameTop();
		}

		if ("${saveAsDraft}" == "true") {
			AssertClick(
				locator1 = "Button#SAVE_AS_DRAFT",
				value1 = "Save as Draft");
		}
		else if ("${preview}" == "true") {
			AssertClickNoError(
				locator1 = "Button#PREVIEW",
				value1 = "Preview");

			AssertConfirm(value1 = "In order to preview your changes, the message will be saved as a draft and other users may not be able to see it. Are you sure you want to do this?");

			var key_threadSubject = "${threadSubject}";
			var key_userName = "${userName}";

			AssertTextEquals(
				locator1 = "MessageBoardsThread#TITLE_HEADER",
				value1 = "Edit ${threadSubject}");

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${threadSubject}");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_WORKFLOW_STATUS_1",
				value1 = "Draft");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_BODY_1",
				value1 = "${threadBodyEdit}");
		}
		else {
			AssertClick(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");
		}

		Alert.viewSuccessMessage();
	}

	macro editReplyViaAP {
		MouseOver(locator1 = "Portlet#PORTLET_CONTENT");

		Click(
			key_threadReplySubject = "${threadReplySubject}",
			locator1 = "MessageBoards#EDIT_THREAD_REPLY_VIA_AP",
			value1 = "${threadReplySubject}");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBody}");

		SelectFrame(value1 = "relative=top");

		if (isSet(mbAttachmentFile)) {
			Panel.expandPanel(panel = "Attachments");

			AssertElementPresent(locator1 = "Button#SELECT_FILES");

			var key_attachmentFileName = "${mbAttachmentFile}";

			UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${mbAttachmentFile}");

			Pause(locator1 = "3000");

			if (IsNotChecked.isNotCheckedNotVisible(key_fileName = "${mbAttachmentFile}", locator1 = "Checkbox#UPLOAD_FILE_ENTRY")) {
				Check.checkNotVisible(
					key_fileName = "${mbAttachmentFile}",
					locator1 = "Checkbox#UPLOAD_FILE_ENTRY");
			}
		}

		PortletEntry.publish();
	}

	macro editViaMyPosts {
		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_MY_POSTS",
			value1 = "My Posts");

		var key_threadSubject = "${threadSubject}";

		if ("threadSubjectEdit" == "true") {
			var key_threadSubject = "${threadSubjectEdit}";
		}

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		Click(locator1 = "MessageBoards#VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		PortletEntry.publish();
	}

	macro flagThread {
		Click(locator1 = "ReportContent#FLAG_LINK");

		AssertElementPresent.assertVisible(locator1 = "ReportContent#FLAG_MODAL");

		Select(
			locator1 = "ReportContent#REASON_SELECT",
			value1 = "${flagReason}");

		SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_MODAL_FOOTER");

		AssertClick(
			locator1 = "ReportContent#REPORT_BUTTON",
			value1 = "Report");

		AssertTextEquals.assertPartialText(
			locator1 = "ReportContent#SUCCESS_MESSAGE",
			value1 = "Although we cannot disclose our final decision, we do review every report and appreciate your effort to make sure ${siteName} is a safe environment for everyone.");

		Click(locator1 = "Button#CLOSE");
	}

	macro gotoCP {
		AssertClick.assertPartialTextClickAt(
			key_threadSubject = "${threadSubject}",
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");
	}

	macro gotoPG {
		var key_repliesCount = "${replyCount}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${lastPostUserName}";

		if (isSet(messageBoardsThreadURL)) {
			AssertLocation(value1 = "${messageBoardsThreadURL}");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}");

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
				value1 = "${lastPostUserName}");

			if ("${replyCount}" == "1") {
				AssertTextEquals.assertPartialText(
					locator1 = "MessageBoards#THREAD_LIST_REPLIES",
					value1 = "${replyCount}");
			}
			else {
				AssertTextEquals.assertPartialText(
					locator1 = "MessageBoards#THREAD_LIST_REPLIES",
					value1 = "${replyCount}");
			}

			AssertClick.assertPartialTextClickAt(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}");
		}
	}

	macro gotoViewInContext {
		AssertClick(
			locator1 = "Link#VIEW_IN_CONTEXT",
			value1 = "View in Context »");
	}

	macro lockPG {
		MessageboardsThread.openToThread(
			groupName = "${groupName}",
			layoutName = "${layoutName}",
			siteURLKey = "${siteURLKey}",
			threadSubject = "${threadSubject}");

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Lock");

		Alert.viewSuccessMessage();
	}

	macro markAsAnswerCP {
		LexiconEntry.openEntryMenu(rowEntry = "${threadReplyBody}");

		MenuItem.click(menuItem = "Mark as an Answer");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#MESSAGE_ANSWER_1",
			value1 = "Answer");
	}

	macro markAsAnswerPG {
		Click.waitForMenuToggleJSClick(
			key_threadReplyBody = "${threadReplyBody}",
			locator1 = "MessageBoards#THREAD_REPLY_ACTIONS");

		MenuItem.click(menuItem = "Mark as an Answer");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#MESSAGE_ANSWER_1",
			value1 = "Answer");
	}

	macro movePG {
		AssertClick(
			key_categoryName = "${categoryName1}",
			locator1 = "MessageBoards#CATEGORY_LIST_CATEGORY",
			value1 = "${categoryName1}");

		LexiconEntry.openEntryMenu(rowEntry = "${threadSubject}");

		MenuItem.click(menuItem = "Move");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		Pause(locator1 = "3000");

		SelectFrame(locator1 = "MessageBoardsSelectCategory#IFRAME");

		AssertClick(
			locator1 = "MessageBoardsSelectCategory#CATEGORY_TABLE_SELECT_BUTTON_2",
			value1 = "Select");

		if ("${explanationPost}" == "true") {
			SelectFrame(value1 = "relative=top");

			AssertElementPresent(locator1 = "MessageBoardsMoveThread#CATEGORY_FIELD");

			Check(locator1 = "Checkbox#ADD_EXPLANATION_POST");

			Type(
				locator1 = "TextInput#SUBJECT",
				value1 = "${explanationSubject}");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "${explanationBody}");
		}

		SelectFrame(value1 = "relative=top");

		AssertElementPresent(locator1 = "MessageBoardsMoveThread#CATEGORY_FIELD");

		AssertClick(
			locator1 = "Button#MOVE",
			value1 = "Move");

		Alert.viewSuccessMessage();
	}

	macro moveToRecycleBinCP {
		AssertTextEquals.assertPartialText(
			key_threadSubject = "${threadSubject}",
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Delete");

		VerifyElementPresent(locator1 = "Message#SUCCESS");

		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no threads or categories.");
	}

	// You can use this navigation when you need to access the configuration quickly without checking the UI.

	macro openToAddThread {
		var baseURL = "${baseURL}";

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		// Threads accessed in site pages will be redirected back to the page after publishing. Those accessed in admin will stay in admin after publishing.

		if (isSet(layoutName)) {
			if (isSet(categoryName)) {
				var categoryId = JSONMBMessage.getCategoryIdByName(
					categoryName = "${categoryName}",
					groupName = "${groupName}");

				Open(locator1 = "${baseURL}/web/${siteURLKey}/${layoutName}?p_p_id=com_liferay_message_boards_web_portlet_MBPortlet&_com_liferay_message_boards_web_portlet_MBPortlet_mvcRenderCommandName=%2Fmessage_boards%2Fedit_message&_com_liferay_message_boards_web_portlet_MBPortlet_redirect=http%3A%2F%2F${baseURL}%3A8080%2Fweb%2F${siteURLKey}%2F${layoutName}%2F-%2Fmessage_boards%2Fcategory%2F${categoryId}&_com_liferay_message_boards_web_portlet_MBPortlet_mbCategoryId=${categoryId}");
			}
			else {
				Open(locator1 = "${baseURL}/web/${siteURLKey}/${layoutName}?p_p_id=com_liferay_message_boards_web_portlet_MBPortlet&_com_liferay_message_boards_web_portlet_MBPortlet_mvcRenderCommandName=%2Fmessage_boards%2Fedit_message&_com_liferay_message_boards_web_portlet_MBPortlet_redirect=http%3A%2F%2F${baseURL}%3A8080%2Fweb%2F${siteURLKey}%2F${layoutName}");
			}
		}
		else {
			Open(locator1 = "${baseURL}/group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_message_boards_web_portlet_MBAdminPortlet&_com_liferay_message_boards_web_portlet_MBAdminPortlet_mvcRenderCommandName=%2Fmessage_boards%2Fedit_message");
		}
	}

	macro openToEditThread {
		var messageId = JSONMBMessage.getMessageIdByName(
			categoryName = "${categoryName}",
			groupName = "${groupName}",
			threadSubject = "${threadSubject}");

		if (isSet(layoutName)) {
			var baseURL = "${baseURL}";

			if (!(isSet(baseURL))) {
				var baseURL = PropsUtil.get("portal.url");
			}

			Open(locator1 = "${baseURL}/web/${siteURLKey}/${layoutName}?p_p_id=com_liferay_message_boards_web_portlet_MBPortlet&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&_com_liferay_message_boards_web_portlet_MBPortlet_mvcRenderCommandName=%2Fmessage_boards%2Fedit_message&_com_liferay_message_boards_web_portlet_MBPortlet_redirect=http%3A%2F%2F${baseURL}%3A8080%2Fweb%2F${siteURLKey}%2F${layoutName}%2F-%2Fmessage_boards%2Fmessage%2F${messageId}&_com_liferay_message_boards_web_portlet_MBPortlet_messageId=${messageId}");
		}
		else {
			Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_message_boards_web_portlet_MBAdminPortlet&_com_liferay_message_boards_web_portlet_MBAdminPortlet_mvcRenderCommandName=%2Fmessage_boards%2Fedit_message&_com_liferay_message_boards_web_portlet_MBAdminPortlet_messageId=${messageId}");
		}
	}

	macro openToStatistics {
		Navigator.openWithAppendToBaseURL(urlAppend = "web/${siteURLKey}/${layoutName}/-/message_boards/statistics");
	}

	macro openToThread {
		var messageId = JSONMBMessage.getMessageIdByName(
			categoryName = "${categoryName}",
			groupName = "${groupName}",
			threadSubject = "${threadSubject}");

		if (isSet(layoutName)) {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/${siteURLKey}/${layoutName}/-/message_boards/message/${messageId}");
		}
		else {
			Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_message_boards_web_portlet_MBAdminPortlet&_com_liferay_message_boards_web_portlet_MBAdminPortlet_mvcRenderCommandName=%2Fmessage_boards%2Fview_message&_com_liferay_message_boards_web_portlet_MBAdminPortlet_messageId=${messageId}");
		}
	}

	macro replyCP {
		if ("${markAsQuestion}" == "true") {
			AssertClick(
				key_threadSubject = "${threadSubject}",
				locator1 = "MessageBoards#THREAD_TABLE_STARTED_BY",
				value1 = "Waiting for an Answer");
		}

		Click(
			key_threadSubject = "${threadSubject}",
			locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadReplyBody}");

		SelectFrame.selectFrameTop();
	}

	macro replyNotPresent {
		AssertElementNotPresent(locator1 = "Button#REPLY");
	}

	macro replyPG {
		if ("${displayStyle}" == "Question") {
			AssertClick.assertPartialTextClickAt(
				key_threadSubject = "${threadSubject}",
				locator1 = "MessageBoards#QUESTION_CATEGORY_THREAD_TABLE_QUESTION",
				value1 = "${threadSubject}");
		}
		else {
			var key_threadSubject = "${threadSubject}";

			if (!(isSet(skipNavigation))) {
				AssertClick.assertPartialTextClickAt(
					locator1 = "MessageBoards#THREAD_LIST_THREAD",
					value1 = "${threadSubject}");
			}
		}

		if (isSet(threadReplySpecific)) {
			AssertClick(
				key_threadBody = "${threadBody}",
				locator1 = "MessageBoardsThread#MESSAGE_REPLY_SPECIFIC",
				value1 = "Reply");
		}
		else {
			AssertElementPresent.pauseAssertVisible(
				key_threadSubject = "${threadSubject}",
				locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON");

			AssertClick(
				key_threadSubject = "${threadSubject}",
				locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON",
				value1 = "Reply");
		}

		AssertElementPresent(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadReplyBody}");

		SelectFrameTop();

		if ("${anonymous}" == "true") {
			Check(locator1 = "Checkbox#ANONYMOUS");
		}

		Click(locator1 = "MessageBoardsThread#THREAD_PUBLISH_BUTTON");

		Alert.viewSuccessMessage();

		if ("${markAsAnswer}" == "true") {
			MessageboardsThread.markAsAnswerPG(threadReplyBody = "${threadReplyBody}");
		}
	}

	macro replyWithAttachmentPG {
		var key_threadSubject = "${threadSubject}";

		AssertClick.assertPartialTextClickAt(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertClick(
			locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON",
			value1 = "Reply");

		AssertElementPresent(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadReplyBody}");

		SelectFrameTop();

		AssertClick(
			locator1 = "Button#ADVANCED_REPLY",
			value1 = "Advanced Reply");

		if (IsNotVisible(locator1 = "Button#SELECT_FILES")) {
			AssertClick(
				locator1 = "Panel#ENTRY_ATTACHMENTS",
				value1 = "Attachments");
		}

		AssertElementPresent(locator1 = "Button#SELECT_FILES");

		var key_attachmentFileName = "${mbThreadAttachment}";

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "${mbThreadAttachment}");

		AssertClick(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		Alert.viewSuccessMessage();
	}

	macro restoreMBAttachmentCP {
		Click(locator1 = "MessageBoardsEditMessage#ATTACHMENTS_RECENTLY_REMOVED");

		IFrame.selectModalFrame();

		AssertElementPresent(
			key_mbAttachmentFile = "${mbAttachmentFile}",
			locator1 = "MessageBoardsRemovedAttachments#ATTACHMENT_FILE_NAME");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Restore",
			rowEntry = "${mbAttachmentFile}");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "This message does not have file attachments in the Recycle Bin.");

		IFrame.closeFrame();

		SelectFrameTop();
	}

	macro saveNewThreadAsDraft {
		if (!(isSet(skipNavigation))) {
			AssertClick(
				locator1 = "Button#NEW_THREAD",
				value1 = "New Thread");
		}

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadBody}");

		SelectFrameTop();

		AssertClick(
			locator1 = "Button#SAVE_AS_DRAFT",
			value1 = "Save as Draft");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "Edit");

		Alert.viewSuccessMessage();
	}

	macro splitThreadPG {
		Click(locator1 = "MessageBoards#VERTICAL_ELLIPSIS_REPLY_CARD");

		MenuItem.click(menuItem = "Split Thread");

		AssertTextEquals(
			locator1 = "MessageBoardsSplitThread#SPLIT_THREAD_INFO",
			value1 = "Click OK to create a new thread with the following messages.");

		AssertTextEquals.assertPartialText(
			key_threadSubject = "${threadSubject}",
			locator1 = "MessageBoardsSplitThread#THREAD_TABLE_SUBJECT",
			value1 = "${threadSubject}");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "${threadSplitSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsSplitThread#ADD_EXPLANATION_POST_LABEL",
			value1 = "Add explanation post to the source thread.");

		Check(locator1 = "MessageBoardsSplitThread#ADD_EXPLANATION_POST_CHECKBOX");

		AssertTextEquals(
			locator1 = "Message#INFO_EXPLANATION_POST",
			value1 = "The following post will be added in place of the moved message.");

		Type(
			locator1 = "MessageBoardsSplitThread#ADD_EXPLANATION_SUBJECT_FIELD",
			value1 = "${threadSplitReplySubject}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		Type(
			locator1 = "CKEditor#BODY",
			value1 = "${threadSplitReplyBody}");

		SelectFrameTop();

		AssertClick(
			locator1 = "Button#OK",
			value1 = "OK");

		var key_threadBody = "${threadReplyBody}";

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSplitSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadReplyBody}");

		var key_threadBody = "${threadSplitReplyBody}";

		AssertElementNotPresent(locator1 = "MessageBoardsThread#THREAD_BODY_2");
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Message Boards");

		if (IsElementPresent.isVisible(locator1 = "MessageBoards#THREAD_TABLE_ALL_CHECKBOX")) {
			Check(locator1 = "MessageBoards#THREAD_TABLE_ALL_CHECKBOX");

			AssertClick(
				locator1 = "MessageBoardsAdmin#THREADS_RECYCLE_BIN_BUTTON",
				value1 = "Delete");

			VerifyElementPresent(locator1 = "Message#SUCCESS");
		}

		JSONRecycleBin.emptyRecycleBin();
	}

	macro unbanUser {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_BANNED_USERS",
			value1 = "Banned Users");

		LexiconEntry.openEntryMenu(rowEntry = "${userScreenName}");

		MenuItem.click(menuItem = "Unban This User");

		Alert.viewSuccessMessage();
	}

	macro unlockPG {
		MessageboardsThread.openToThread(
			groupName = "${groupName}",
			layoutName = "${layoutName}",
			siteURLKey = "${siteURLKey}",
			threadSubject = "${threadSubject}");

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Unlock");

		Alert.viewSuccessMessage();
	}

	macro updateCheckInterval {
		var baseURL = PropsUtil.get("portal.url");

		Open(locator1 = "${baseURL}/group/control_panel/manage?p_p_id=com_liferay_configuration_admin_web_portlet_SystemSettingsPortlet&_com_liferay_configuration_admin_web_portlet_SystemSettingsPortlet_factoryPid=com.liferay.message.boards.configuration.MBConfiguration&_com_liferay_configuration_admin_web_portlet_SystemSettingsPortlet_mvcRenderCommandName=%2Fconfiguration_admin%2Fedit_configuration");

		Type(
			key_text = "Expire Ban Job Interval",
			locator1 = "TextInput#ANY",
			value1 = "${fieldValue}");

		SystemSettings.saveConfiguration();
	}

	macro viewAnonymousPostingCheckboxCP {
		if (isSet(siteURLKey)) {
			MessageboardsThread.openToAddThread(siteURLKey = "${siteURLKey}");
		}
		else {
			LexiconEntry.gotoAdd();

			MenuItem.click(menuItem = "Thread");
		}

		AssertElementPresent(locator1 = "Checkbox#ANONYMOUS");
	}

	macro viewAnswerPG {
		var key_answerCount = "${answerCount}";
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_ANSWER",
			value1 = "${answerCount} Answer");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#MESSAGE_ANSWER_1",
			value1 = "Answer");

		Click(
			key_breadcrumbName = "Home",
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK");
	}

	macro viewAsWorkflowAsset {
		SiteAdmin.viewPortletTitle(portletTitle = "${threadSubject}");

		AssertTextEquals(
			key_threadBody = "${threadBody}",
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}");
	}

	macro viewBannedUserAuthenticationMessage {
		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_DISMISSIBLE",
			value1 = "You have been banned by the moderator.");
	}

	macro viewBBCodeNoXSS {
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		MessageboardsThread.assertAlertNotPresent();

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME",
			value1 = "${userName}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_REPLY_SUBJECT",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}");
	}

	macro viewCP {
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
			value1 = "${userName}");

		var key_repliesCount = "${replyCount}";

		if ("${replyCount}" == "1") {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_REPLIES",
				value1 = "${replyCount}");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_REPLIES",
				value1 = "${replyCount}");
		}

		AssertElementPresent(locator1 = "MessageBoards#THREAD_LIST_VIEWS");

		AssertElementPresent(locator1 = "MessageBoards#THREAD_LIST_ACTIONS");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME",
			value1 = "${userName}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}");

		if (isSet(mbAttachmentFile)) {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#MESSAGE_BODY_ATTACHMENT_1",
				value1 = "${mbAttachmentFile}");
		}
	}

	macro viewDefaultCP {
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no threads or categories.");

		AssertTextNotPresent(value1 = "${threadSubject}");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_CHECKBOX");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_LAST_POST");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_REPLIES");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_VIEWS");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_ACTIONS");
	}

	macro viewDoNotHaveRequiredPermissionsPG {
		var key_repliesCount = "0";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "You do not have the required permissions.");

		AssertTextNotPresent(value1 = "${threadSubject}");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_TABLE_STARTED_BY");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_TABLE_REPLIES");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_LAST_POST");
	}

	macro viewDraftThread {
		var key_threadStatus = "Draft";
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_WORKFLOW_STATUS",
			value1 = "Draft");

		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_MY_POSTS",
			value1 = "My Posts");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_WORKFLOW_STATUS",
			value1 = "Draft");
	}

	macro viewLinkedEntry {
		Click(
			key_text = "${linkedEntry}",
			locator1 = "Link#ANY");

		if (isSet(imageFileName)) {
			AssertElementPresent(
				key_imageSourceURL = "${imageFileName}",
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_VIEWPORT_PREVIEW");
		}

		if (isSet(pageName)) {
			AssertVisible(
				key_pageName = "${pageName}",
				locator1 = "Home#PAGE_ACTIVE");
		}
	}

	macro viewLockedPG {
		var key_threadStatus = "Locked";
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_STATUS",
			value1 = "Locked");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertElementNotPresent(locator1 = "MessageBoardsThread#MESSAGE_REPLY_1");

		AssertElementNotPresent(locator1 = "MessageBoardsThread#MESSAGE_QUICK_REPLY_1");

		AssertElementNotPresent(locator1 = "MessageBoardsThread#MESSAGE_REPLY_WITH_QUOTE_1");

		AssertElementNotPresent(locator1 = "MessageBoardsThread#MESSAGE_EDIT_1");

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		AssertTextEquals(
			key_menuItem = "Unlock",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Unlock");
	}

	macro viewMarkAsQuestionChecked {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		Panel.expandPanel(panel = "More Settings");

		AssertChecked(locator1 = "Checkbox#MARK_AS_A_QUESTION");

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");
	}

	macro viewMarkAsQuestionNotChecked {
		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "${siteURLKey}");

		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		Panel.expandPanel(panel = "More Settings");

		AssertNotChecked(locator1 = "Checkbox#MARK_AS_A_QUESTION");

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");
	}

	macro viewMarkedAsQuestionPG {
		AssertElementPresent(
			key_threadSubject = "${threadSubject}",
			locator1 = "MessageBoards#THREAD_LIST_QUESTION_MARK_ICON");
	}

	macro viewMBThreadVisualStatePG {
		var key_threadSubject = "${threadSubject}";

		if (isSet(unReadMBthread)) {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_THREAD_UNREAD",
				value1 = "${threadSubject}");
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}");

			AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD_UNREAD");
		}
	}

	macro viewNoAnonymousPostingCheckboxCP {
		if (isSet(siteURLKey)) {
			MessageboardsThread.openToAddThread(siteURLKey = "${siteURLKey}");
		}
		else {
			LexiconEntry.gotoAdd();

			MenuItem.click(menuItem = "Thread");
		}

		AssertElementNotPresent(locator1 = "Checkbox#ANONYMOUS");
	}

	macro viewNoBannedUsers {
		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no banned users.");
	}

	macro viewNoPG {
		var key_repliesCount = "0";
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no threads or categories.");

		AssertTextNotPresent(value1 = "${threadSubject}");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_TABLE_STARTED_BY");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_TABLE_REPLIES");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_LAST_POST");
	}

	macro viewNoXSSPG {
		var key_threadSubject = "${threadSubject}";
		var key_title = "${threadBody}";
		var key_userName = "${userName}";

		AssertAlertNotPresent();

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME",
			value1 = "${userName}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}");

		if ("${sourceContent}" == "true") {
			AssertElementNotPresent(locator1 = "Header#H3_TITLE");
		}
		else {
			AssertTextEquals(
				locator1 = "Header#H3_TITLE",
				value1 = "${threadBody}");
		}
	}

	macro viewPG {
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		if (isSet(position)) {
			LexiconList.viewListEntryTitleLinkSpecific(
				listEntry = "${threadSubject}",
				position = "${position}");
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoardsThread#TITLE_HEADER",
				value1 = "${threadSubject}");

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_SUBJECT",
				value1 = "${threadSubject}");

			if ("${bold}" == "true") {
				AssertTextEquals(
					locator1 = "MessageBoardsThread#THREAD_BODY_BOLD",
					value1 = "${threadBody}");
			}
			else {
				AssertTextEquals(
					locator1 = "MessageBoardsThread#THREAD_BODY",
					value1 = "${threadBody}");
			}

			if (isSet(threadBodyImageName)) {
				AssertVisible(
					key_imageFileName = "${threadBodyImageName}",
					key_threadBody = "${threadBody}",
					locator1 = "MessageBoardsThread#THREAD_BODY_IMAGE");
			}

			if (isSet(fontSize)) {
				AssertTextEquals(
					key_fontSize = "${fontSize}",
					locator1 = "MessageBoardsThread#MESSAGE_BODY_STYLE_1",
					value1 = "${threadBody}");
			}

			if (isSet(threadSubject2)) {
				var key_threadSubject = "${threadSubject2}";

				AssertTextEquals(
					locator1 = "MessageBoardsThread#TITLE_HEADER",
					value1 = "${threadSubject}");

				AssertTextEquals.assertPartialText(
					locator1 = "MessageBoardsThread#THREAD_USERNAME",
					value1 = "${userName}");

				AssertTextEquals(
					locator1 = "MessageBoardsThread#THREAD_SUBJECT",
					value1 = "${threadSubject2}");

				AssertTextEquals.assertPartialText(
					key_threadBody = "${threadBody2}",
					locator1 = "MessageBoardsThread#THREAD_BODY",
					value1 = "${threadBody2}");
			}

			if (isSet(workflowTask)) {
				AssertTextEquals(
					locator1 = "MessageBoardsThread#MESSAGE_WORKFLOW_STATUS_1",
					value1 = "Pending (${workflowTask})");
			}
		}
	}

	macro viewPGViaAP {
		var key_assetTitle = "${threadSubject}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${threadBody}");

		AssetPublisherPortlet.clickAssetTitle(assetTitle = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "AssetRelatedAssets#MESSAGE_BOARDS_THREAD_TITLE",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "AssetRelatedAssets#MESSAGE_BOARDS_THREAD_CONTENT",
			value1 = "${threadBody}");
	}

	macro viewReplyCP {
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		if (isSet(mbAttachmentFile)) {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#MESSAGE_BODY_ATTACHMENT_1",
				value1 = "${mbAttachmentFile}");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME_2",
			value1 = "${userName}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}");
	}

	macro viewReplyPG {
		var key_repliesCount = "${replyCount}";
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
			value1 = "${userName}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_REPLIES",
			value1 = "${replyCount}");

		if ("${guestReply}" == "true") {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
				value1 = "Anonymous");

			AssertClick.assertPartialTextClickAt(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}");
		}
		else {
			AssertClick.assertPartialTextClickAt(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}");
		}

		if ("${loggedOut}" == "true") {
			var key_threadBody = "${threadReplyBody}";

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_SUBJECT_2",
				value1 = "RE: ${threadSubject}");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "${threadReplyBody}");

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}");
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_SUBJECT",
				value1 = "${threadSubject}");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "${threadBody}");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_SUBJECT_2",
				value1 = "RE: ${threadSubject}");

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_RATING_THUMBS_UP",
				value1 = "0");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_RATING_THUMBS_DOWN",
				value1 = "0");

			var key_threadBody = "${threadReplyBody}";

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "${threadReplyBody}");

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_RATING_THUMBS_UP",
				value1 = "0");

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_RATING_THUMBS_DOWN",
				value1 = "0");
		}

		if ("${guestReply}" == "false") {
			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_USERNAME_2",
				value1 = "${userName}");
		}

		if (isSet(mbThreadAttachment)) {
			AssertElementPresent(
				key_mbThreadAttachment = "${mbThreadAttachment}",
				locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_IMAGE");
		}
	}

	macro viewSplitThreadPG {
		var key_repliesCount = "1";
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_REPLIES",
			value1 = "1");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}");

		var key_threadBody = "${threadSplitReplyBody}";
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadSplitReplyBody}");

		if (isSet(siteName)) {
			Navigator.openSitePage(
				pageName = "${pageName}",
				siteName = "${siteName}");
		}
		else {
			Navigator.gotoPage(pageName = "${pageName}");
		}

		var key_repliesCount = "0";
		var key_threadBody = "${threadReplyBody}";
		var key_threadSubject = "${threadSplitSubject}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSplitSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_REPLIES",
			value1 = "0");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSplitSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSplitSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSplitSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadReplyBody}");

		var key_threadBody = "${threadSplitReplyBody}";
		var key_threadSubject = "${threadSplitReplySubject}";

		AssertElementNotPresent(locator1 = "MessageBoardsThread#THREAD_SUBJECT_2");

		AssertElementNotPresent(locator1 = "MessageBoardsThread#THREAD_BODY_2");
	}

	macro viewStatisticsPostsCountDefaultPG {
		if (isSet(siteURLKey)) {
			MessageboardsThread.openToStatistics(
				layoutName = "${layoutName}",
				siteURLKey = "${siteURLKey}");
		}
		else {
			AssertClick(
				locator1 = "MessageBoards#NAVIGATION_STATISTICS",
				value1 = "Statistics");
		}

		if (IsElementPresent(locator1 = "MessageBoardsStatistics#GENERAL_DROPDOWN_COLLAPSED")) {
			AssertClick(
				locator1 = "MessageBoardsStatistics#GENERAL_DROPDOWN",
				value1 = "General");
		}

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#GENERAL_NUMBER_OF_CATEGORIES",
			value1 = "0");

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#GENERAL_NUMBER_OF_POSTS",
			value1 = "0");

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#GENERAL_NUMBER_OF_PARTICIPANTS",
			value1 = "0");

		PortletEntry.viewEmptyMessage(entity = "Top Posters");
	}

	macro viewStatisticsPostsCountPG {
		if (isSet(siteURLKey)) {
			MessageboardsThread.openToStatistics(
				layoutName = "${layoutName}",
				siteURLKey = "${siteURLKey}");
		}
		else {
			AssertClick(
				locator1 = "MessageBoards#NAVIGATION_STATISTICS",
				value1 = "Statistics");
		}

		if (IsElementPresent(locator1 = "MessageBoardsStatistics#GENERAL_DROPDOWN_COLLAPSED")) {
			AssertClick(
				locator1 = "MessageBoardsStatistics#GENERAL_DROPDOWN",
				value1 = "General");
		}

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#GENERAL_NUMBER_OF_POSTS",
			value1 = "${threadPostNumber}");

		if (isSet(userPostNumber)) {
			MessageboardsThread.viewStatisticsTopPoster();
		}
		else {
			MessageboardsThread.viewStatisticsTopPoster(
				userMessageboardsRank = "${userMessageboardsRank}",
				userName = "${userName}",
				userPostNumber = "${threadPostNumber}");
		}
	}

	macro viewStatisticsTopPoster {
		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_STATISTICS",
			value1 = "Statistics");

		if (IsElementPresent(locator1 = "MessageBoardsStatistics#TOP_POSTERS_DROPDOWN_COLLAPSED")) {
			AssertClick(
				locator1 = "MessageBoardsStatistics#TOP_POSTERS_DROPDOWN",
				value1 = "Top Posters");
		}

		var key_userName = "${userName}";

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_NAME",
			value1 = "${userName}");

		if (isSet(userMessageboardsRank)) {
			AssertTextEquals(
				locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_RANK",
				value1 = "Rank: ${userMessageboardsRank}");
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_RANK",
				value1 = "Rank: Youngling");
		}

		var key_userPostNumber = "${userPostNumber}";

		if ("${userPostNumber}" == "1") {
			AssertTextEquals(
				locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_POSTS",
				value1 = "Post: ${userPostNumber}");
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_POSTS",
				value1 = "Posts: ${userPostNumber}");
		}

		AssertElementPresent(locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_JOIN_DATE");

		AssertElementPresent(locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_LAST_POST_DATE");
	}

	macro viewThreadAttachment {
		for (var mbThreadAttachment : list "${mbAttachmentFileList}") {
			AssertTextEquals.assertPartialText(
				key_mbThreadAttachment = "${mbThreadAttachment}",
				locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_IMAGE",
				value1 = "${mbThreadAttachment}");
		}
	}

	macro viewThreadInRecycleBin {
		LexiconEntry.gotoEntry(rowEntry = "${threadSubject}");

		AssertTextEquals(
			locator1 = "Message#WORKFLOW_STATUS",
			value1 = "In Recycle Bin");

		AssertTextEquals(
			key_threadSubject = "${threadSubject}",
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}");

		AssertTextEquals(
			key_threadBody = "${threadBody}",
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}");
	}

	macro viewThreadSubscribeLink {
		var key_threadSubject = "${threadSubject}";

		if (isSet(disabledEmailConfiguration)) {
			Click(locator1 = "MessageBoards#VERTICAL_ELLIPSIS");

			MenuItem.viewNotPresent(menuItem = "Unsubscribe");

			AssertClick(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}");

			Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

			MenuItem.viewNotPresent(menuItem = "Unsubscribe");
		}
		else {
			Click(locator1 = "MessageBoards#VERTICAL_ELLIPSIS");

			MenuItem.viewPresent(menuItem = "Unsubscribe");

			AssertClick(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}");

			Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

			MenuItem.viewPresent(menuItem = "Unsubscribe");
		}
	}

	macro viewWithWorkflowPG {
		var key_threadBody = "threadBody";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertElementPresent(
			key_replyCount = "0",
			locator1 = "MessageBoards#THREAD_TABLE_REPLIES");

		AssertElementPresent(locator1 = "MessageBoards#THREAD_LIST_LAST_POST");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		var key_threadStatus = "Pending (${workflowTask})";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_WORKFLOW_STATUS",
			value1 = "Pending (${workflowTask})");

		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_MY_POSTS",
			value1 = "My Posts");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#MESSAGE_WORKFLOW_STATUS_1",
			value1 = "Pending (${workflowTask})");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME",
			value1 = "${userName}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#MESSAGE_WORKFLOW_STATUS_1",
			value1 = "Pending");

		AssertTextEquals(
			key_threadBody = "${threadBody}",
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}");
	}

	macro viewWithWorkflowPGViaAP {
		AssertElementNotPresent(
			key_assetTitle = "${threadSubject}",
			locator1 = "AP#ASSET_ABSTRACT_TITLE");
	}

}