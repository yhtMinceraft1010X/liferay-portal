definition {

	macro addComment {
		PageEditor.assertFragmentSidebarLoaded();

		PageEditor.gotoTab(tabName = "Comments");

		if (IsElementNotPresent(key_fragmentName = "${fragmentName}", locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_SECTION_NAME")) {
			PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");
		}

		AssertElementPresent(
			key_fragmentName = "${fragmentName}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_SECTION_NAME");

		Click.clickAt(locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS");

		if (isSet(mentionsUserScreenName)) {
			var key_mentionsUserScreenName = "${mentionsUserScreenName}";

			Type.sendKeys(
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS",
				value1 = "${fragmentComment} @${mentionsUserScreenName}");

			Click.clickNoMouseOver(locator1 = "Mentions#MENTIONS_USER_DISPLAY_OPTION");
		}
		else {
			Type(
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS",
				value1 = "${fragmentComment}");
		}

		Button.clickComment();

		AssertElementNotPresent(
			key_fragmentComment = "${fragmentComment}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_ENTRY_INPUT");
	}

	macro addCommentViaFragment {
		PageEditor.gotoCommentViaFragment(
			fragmentName = "${fragmentName}",
			key_position = "${position}");

		AssertElementPresent(
			key_fragmentName = "${fragmentName}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_SECTION_NAME");

		Click.clickAt(locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS");

		Type(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS",
			value1 = "${fragmentComment}");

		Button.clickComment();

		AssertElementNotPresent(
			key_fragmentComment = "${fragmentComment}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_ENTRY_INPUT");
	}

	macro addElementToColumn {
		if (!(isSet(position))) {
			var position = "1";
		}

		PageEditor.gotoTab(tabName = "Fragments and Widgets");

		if (!(isSet(displayStyle))) {
			var displayStyle = "list";
		}

		if ("${displayStyle}" == "list") {
			var switchTo = "card";
		}
		else {
			var switchTo = "list";
		}

		if (IsElementNotPresent(key_switchTo = "${switchTo}", locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON")) {
			Click(
				key_switchTo = "",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");
		}

		AssertVisible(
			key_switchTo = "${switchTo}",
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");

		Navigator.gotoNavTab(navTab = "${navTab}");

		if (("${navTab}" == "Fragments") && ("${displayStyle}" == "card")) {
			PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

			if (isSet(targetFragmentName) && ("${height}" == "Short")) {
				DragAndDrop.javaScriptDragAndDropObjectBelowShortNestedObject(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#ANY_NESTED_FRAGMENT_DROP_TARGET",
					value1 = "");
			}

			if (isSet(targetFragmentName) && ("${height}" == "Tall")) {
				DragAndDrop.javaScriptDragAndDropObjectBelowTallNestedObject(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#ANY_NESTED_FRAGMENT_DROP_TARGET",
					value1 = "");
			}
			else {
				DragAndDrop.javaScriptDragAndDropToObject(
					key_collectionName = "${collectionName}",
					key_columnNumber = "${columnNumber}",
					key_fragmentName = "${fragmentName}",
					key_position = "${position}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#GRID_COLUMN",
					value1 = "");
			}
		}

		if (("${navTab}" == "Fragments") && ("${displayStyle}" == "list")) {
			PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

			if (isSet(targetFragmentName) && ("${height}" == "Short")) {
				DragAndDrop.javaScriptDragAndDropObjectBelowShortNestedObject(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#ANY_NESTED_FRAGMENT_DROP_TARGET",
					value1 = "");
			}

			if (isSet(targetFragmentName) && ("${height}" == "Tall")) {
				DragAndDrop.javaScriptDragAndDropObjectBelowTallNestedObject(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#ANY_NESTED_FRAGMENT_DROP_TARGET",
					value1 = "");
			}
			else {
				DragAndDrop.javaScriptDragAndDropToObject(
					key_collectionName = "${collectionName}",
					key_columnNumber = "${columnNumber}",
					key_fragmentName = "${fragmentName}",
					key_position = "${position}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#GRID_COLUMN",
					value1 = "");
			}
		}

		if ("${navTab}" == "Widgets") {
			Type.sendKeysApplicationSearch(
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_FIELD",
				value1 = "${portletName}");

			var key_indexItem = "${position}";

			if (isSet(targetFragmentName) && ("${height}" == "Short")) {
				DragAndDrop.javaScriptDragAndDropObjectBelowShortNestedObject(
					key_portletName = "${portletName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
					locator2 = "PageEditor#ANY_NESTED_FRAGMENT_DROP_TARGET",
					value1 = "${portletName}");
			}

			if (isSet(targetFragmentName) && ("${height}" == "Tall")) {
				DragAndDrop.javaScriptDragAndDropObjectBelowTallNestedObject(
					key_portletName = "${portletName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
					locator2 = "PageEditor#ANY_NESTED_FRAGMENT_DROP_TARGET",
					value1 = "${portletName}");
			}
			else {
				DragAndDrop.javaScriptDragAndDropToObject(
					key_columnNumber = "${columnNumber}",
					key_portletName = "${portletName}",
					key_position = "${position}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
					locator2 = "PageEditor#GRID_COLUMN",
					value1 = "${portletName}");
			}
		}

		PageEditor.waitForAutoSave();

		if ("${navTab}" == "Fragments") {
			AssertElementPresent(
				key_columnNumber = "${columnNumber}",
				key_elementHeader = "//div[@aria-label='${fragmentName}']",
				key_position = "${position}",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");
		}

		if ("${navTab}" == "Widgets") {
			AssertElementPresent(
				key_columnNumber = "${columnNumber}",
				key_elementHeader = "//div[@aria-label='${portletName}']",
				key_position = "${position}",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");

			Click(locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_CLEAR_BUTTON");
		}
	}

	macro addElementToContainer {
		if (!(isSet(targetElementName))) {
			if (!(isSet(position))) {
				var position = "1";
			}

			PageEditor.gotoTab(tabName = "Fragments and Widgets");

			if (!(isSet(displayStyle))) {
				var displayStyle = "list";
			}

			if ("${displayStyle}" == "list") {
				var switchTo = "card";
			}
			else {
				var switchTo = "list";
			}

			if (IsElementNotPresent(key_switchTo = "${switchTo}", locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON")) {
				Click(
					key_switchTo = "",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");
			}

			AssertVisible(
				key_switchTo = "${switchTo}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");

			Navigator.gotoNavTab(navTab = "${navTab}");

			if (("${navTab}" == "Fragments") && ("${displayStyle}" == "card")) {
				PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

				DragAndDrop.javaScriptDragAndDropToObject(
					key_collectionName = "${collectionName}",
					key_elementType = "Container",
					key_fragmentName = "${fragmentName}",
					key_position = "${position}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#CONTAINER_CONTAINER",
					value1 = "");
			}

			if (("${navTab}" == "Fragments") && ("${displayStyle}" == "list")) {
				PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

				DragAndDrop.javaScriptDragAndDropToObject(
					key_collectionName = "${collectionName}",
					key_elementType = "Container",
					key_fragmentName = "${fragmentName}",
					key_position = "${position}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#CONTAINER_CONTAINER",
					value1 = "");
			}

			if ("${navTab}" == "Widgets") {
				Type.sendKeysApplicationSearch(
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_FIELD",
					value1 = "${portletName}");

				DragAndDrop.javaScriptDragAndDropToObject(
					key_elementType = "Container",
					key_indexItem = "${position}",
					key_portletName = "${portletName}",
					key_position = "${position}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
					locator2 = "PageEditor#CONTAINER_CONTAINER",
					value1 = "${portletName}");
			}

			PageEditor.waitForAutoSave();

			if ("${navTab}" == "Fragments") {
				AssertElementPresent(
					key_elementHeader = "//div[@aria-label='${fragmentName}']",
					key_elementType = "Container",
					key_position = "${position}",
					locator1 = "PageEditor#CONTAINER_CONTAINER_NESTED_ELEMENT");
			}

			if ("${navTab}" == "Widgets") {
				AssertElementPresent(
					key_elementHeader = "//div[@aria-label='${portletName}']",
					key_elementType = "Container",
					key_position = "${position}",
					locator1 = "PageEditor#CONTAINER_CONTAINER_NESTED_ELEMENT");

				Click(locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_CLEAR_BUTTON");
			}
		}
		else {
			if ("${navTab}" == "Fragments") {
				PageEditor.addFragment(
					collectionName = "${collectionName}",
					composition = "${composition}",
					fragmentName = "${fragmentName}",
					targetFragmentName = "Container");

				PageEditor.moveElementToContainerViaPageStructure(
					composition = "${composition}",
					dropTarget = "${dropTarget}",
					elementName = "${fragmentName}",
					index = "${index}",
					layoutElementName = "${layoutElementName}",
					targetElementName = "${targetElementName}");
			}
			else {
				PageEditor.addWidget(
					portletName = "${portletName}",
					targetFragmentName = "Container");

				PageEditor.moveElementToContainerViaPageStructure(
					dropTarget = "${dropTarget}",
					elementName = "${portletName}",
					index = "${index}",
					targetElementName = "${targetElementName}");
			}
		}
	}

	macro addElementToDropdownPanel {
		PageEditor.gotoTab(tabName = "Fragments and Widgets");

		if (!(isSet(displayStyle))) {
			var displayStyle = "list";
		}

		if (!(isSet(indexItem))) {
			var indexItem = "1";
		}

		if ("${displayStyle}" == "list") {
			var switchTo = "card";
		}
		else {
			var switchTo = "list";
		}

		if (IsElementNotPresent(key_switchTo = "${switchTo}", locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON")) {
			Click(
				key_switchTo = "",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");
		}

		AssertVisible(
			key_switchTo = "${switchTo}",
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");

		Navigator.gotoNavTab(navTab = "${navTab}");

		if (("${navTab}" == "Fragments") && ("${displayStyle}" == "card")) {
			PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

			DragAndDrop.javaScriptDragAndDropToObject(
				key_collectionName = "${collectionName}",
				key_element = "//div[contains(@class,'page-editor__root page-editor__topper')]",
				key_fragmentName = "${fragmentName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
				locator2 = "Fragment#DROPDOWN_FRAGMENT_MENU_CONTENT");
		}

		if (("${navTab}" == "Fragments") && ("${displayStyle}" == "list")) {
			PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

			DragAndDrop.javaScriptDragAndDropToObject(
				key_collectionName = "${collectionName}",
				key_element = "//div[contains(@class,'page-editor__root page-editor__topper')]",
				key_fragmentName = "${fragmentName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
				locator2 = "Fragment#DROPDOWN_FRAGMENT_MENU_CONTENT");
		}

		if ("${navTab}" == "Widgets") {
			Type.sendKeysApplicationSearch(
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_FIELD",
				value1 = "${portletName}");

			DragAndDrop.javaScriptDragAndDropToObject(
				key_element = "//div[contains(@class,'page-editor__root page-editor__topper')]",
				key_indexItem = "${indexItem}",
				key_portletName = "${portletName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
				locator2 = "Fragment#DROPDOWN_FRAGMENT_MENU_CONTENT");
		}

		PageEditor.waitForAutoSave();

		if ("${navTab}" == "Fragments") {
			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_inFragmentName = "Dropdown",
				locator1 = "Fragment#FRAGMENT_BODY_IN_FRAGMENT");
		}

		if ("${navTab}" == "Widgets") {
			AssertElementPresent(
				key_fragmentName = "${portletName}",
				key_inFragmentName = "Dropdown",
				locator1 = "Fragment#FRAGMENT_BODY_IN_FRAGMENT");

			Click(locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_CLEAR_BUTTON");
		}
	}

	macro addElementToTab {
		PageEditor.gotoTabsFragmentNavItem(navItem = "${navItem}");

		AssertVisible(
			key_content = "Place fragments here.",
			key_fragmentClass = "content",
			key_position = "${position}",
			locator1 = "Fragment#NO_FRAGMENTS_MESSAGE");

		PageEditor.gotoTab(tabName = "Fragments and Widgets");

		if (!(isSet(displayStyle))) {
			var displayStyle = "list";
		}

		if (!(isSet(indexItem))) {
			var indexItem = "1";
		}

		if ("${displayStyle}" == "list") {
			var switchTo = "card";
		}
		else {
			var switchTo = "list";
		}

		if (IsElementNotPresent(key_switchTo = "${switchTo}", locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON")) {
			Click(
				key_switchTo = "",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");
		}

		AssertVisible(
			key_switchTo = "${switchTo}",
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");

		Navigator.gotoNavTab(navTab = "${navTab}");

		if (("${navTab}" == "Fragments") && ("${displayStyle}" == "card")) {
			PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

			DragAndDrop.javaScriptDragAndDropToObject(
				key_collectionName = "${collectionName}",
				key_fragmentName = "${fragmentName}",
				key_index = "${index}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
				locator2 = "PageEditor#FRAGMENT_WITH_DROP_TARGET",
				value1 = "");
		}

		if (("${navTab}" == "Fragments") && ("${displayStyle}" == "list")) {
			PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

			DragAndDrop.javaScriptDragAndDropToObject(
				key_collectionName = "${collectionName}",
				key_fragmentName = "${fragmentName}",
				key_index = "${index}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
				locator2 = "PageEditor#FRAGMENT_WITH_DROP_TARGET",
				value1 = "");
		}

		if ("${navTab}" == "Widgets") {
			Type.sendKeysApplicationSearch(
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_FIELD",
				value1 = "${portletName}");

			DragAndDrop.javaScriptDragAndDropToObject(
				key_index = "${index}",
				key_indexItem = "${indexItem}",
				key_portletName = "${portletName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
				locator2 = "PageEditor#FRAGMENT_WITH_DROP_TARGET",
				value1 = "${portletName}");
		}

		PageEditor.waitForAutoSave();

		if ("${navTab}" == "Fragments") {
			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_inFragmentName = "Tabs",
				locator1 = "Fragment#FRAGMENT_BODY_IN_FRAGMENT");
		}

		if ("${navTab}" == "Widgets") {
			AssertElementPresent(
				key_fragmentName = "${portletName}",
				key_inFragmentName = "Tabs",
				locator1 = "Fragment#FRAGMENT_BODY_IN_FRAGMENT");

			Click(locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_CLEAR_BUTTON");
		}
	}

	macro addEntryWithLink {
		PageEditor.gotoEditableFieldEdit(
			contributed = "${contributed}",
			fragmentName = "${fragmentName}",
			id = "${id}");

		SelectFieldText(
			key_editor = "content",
			locator1 = "AlloyEditor#EDITOR");

		Click(locator1 = "AlloyEditor#TEXT_FORMATTING_LINK");

		Type(
			locator1 = "AlloyEditor#TEXT_FORMATTING_LINK_INPUT",
			value1 = "${entryExternalURL}");

		Click(locator1 = "AlloyEditor#TEXT_FORMATTING_LINK_INPUT_CONFIRM");

		Click(locator1 = "PageEditor#CONTENT_PAGE_DISABLED_HEADER");

		PageEditor.waitForAutoSave();
	}

	macro addExperience {
		var key_experienceName = "${experienceName}";
		var key_segmentName = "${segmentName}";

		AssertTextEquals(
			locator1 = "PageEditor#EXPERIENCE_LABEL",
			value1 = "Experience");

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		Click(
			key_text = "New Experience",
			locator1 = "Button#ANY");

		Type(
			locator1 = "PageEditor#EXPERIENCE_NAME",
			value1 = "${experienceName}");

		Select(
			locator1 = "PageEditor#EXPERIENCE_SELECT_SEGMENT",
			value1 = "${segmentName}");

		Click(locator1 = "Button#SAVE");

		if ("${experienceName}" != "") {
			AssertClick(
				locator1 = "PageEditor#EXPERIENCE_BUTTON_NAME",
				value1 = "${experienceName}");

			AssertElementPresent(
				key_experienceName = "${experienceName}",
				locator1 = "PageEditor#EXPERIENCE_SELECT_ITEM");
		}
	}

	macro addFragment {
		PageEditor.assertFragmentSidebarLoaded();

		PageEditor.gotoTab(tabName = "Fragments and Widgets");

		if (!(isSet(displayStyle))) {
			var displayStyle = "list";
		}

		if ("${displayStyle}" == "list") {
			var switchTo = "card";
		}
		else {
			var switchTo = "list";
		}

		if (IsElementNotPresent(key_switchTo = "${switchTo}", locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON")) {
			Click(
				key_switchTo = "",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");
		}

		AssertVisible(
			key_switchTo = "${switchTo}",
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");

		Navigator.gotoNavTab(navTab = "Fragments");

		PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

		if ("${displayStyle}" == "card") {
			if (("${scope}" == "Master") && ("${dropTarget}" == "Header")) {
				DragAndDrop.javaScriptDragAndDropToUp(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#HEADER_DROP_TARGET",
					value1 = "");
			}

			if (("${scope}" == "Master") && ("${dropTarget}" == "Footer")) {
				DragAndDrop.javaScriptDragAndDropToBottom(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "Drop Zone",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET",
					value1 = "");
			}

			if (isSet(targetFragmentName) && ("${dropTarget}" == "Header")) {
				DragAndDrop.javaScriptDragAndDropToUp(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET");
			}

			if (isSet(targetFragmentName) && !(isSet(dropTarget))) {
				DragAndDrop.javaScriptDragAndDropToBottom(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET",
					value1 = "");
			}
			else {
				DragAndDrop.javaScriptDragAndDropToObject(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
					locator2 = "PageEditor#FRAGMENT_DROP_TARGET",
					value1 = "");
			}
		}

		if ("${displayStyle}" == "list") {
			if (("${scope}" == "Master") && ("${dropTarget}" == "Header")) {
				DragAndDrop.javaScriptDragAndDropToUp(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#HEADER_DROP_TARGET",
					value1 = "");
			}

			if (("${scope}" == "Master") && ("${dropTarget}" == "Footer")) {
				DragAndDrop.javaScriptDragAndDropToBottom(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "Drop Zone",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET",
					value1 = "");
			}

			if (isSet(targetFragmentName) && ("${dropTarget}" == "Header")) {
				DragAndDrop.javaScriptDragAndDropToUp(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET");
			}

			if (isSet(targetFragmentName) && !(isSet(dropTarget))) {
				DragAndDrop.javaScriptDragAndDropToBottom(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					key_targetFragmentName = "${targetFragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET",
					value1 = "");
			}
			else {
				DragAndDrop.javaScriptDragAndDropToObject(
					key_collectionName = "${collectionName}",
					key_fragmentName = "${fragmentName}",
					locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
					locator2 = "PageEditor#FRAGMENT_DROP_TARGET",
					value1 = "");
			}
		}

		PageEditor.waitForAutoSave();

		if (!(isSet(position))) {
			var key_position = "1";
		}

		if (("${fragmentName}" == "Grid") || ("${fragmentName}" == "Container")) {
			PageEditor.viewFragment(
				fragmentName = "${fragmentName}",
				position = "${position}");
		}

		if (("${fragmentName}" == "Content Display") || ("${fragmentName}" == "Collection Display") || ("${fragmentName}" == "Display Page Content")) {
			PageEditor.viewFragmentMessageInfo(fragmentName = "${fragmentName}");
		}

		if (isSet(composition)) {
			echo("## Adding a composition of fragments");
		}
		else {
			PageEditor.viewFragment(
				fragmentName = "${fragmentName}",
				position = "${position}");
		}
	}

	macro addFragmentToCollectionDisplay {
		PageEditor.assertFragmentSidebarLoaded();

		PageEditor.gotoTab(tabName = "Fragments and Widgets");

		if (!(isSet(displayStyle))) {
			var displayStyle = "list";
		}

		if ("${displayStyle}" == "list") {
			var switchTo = "card";
		}
		else {
			var switchTo = "list";
		}

		if (IsElementNotPresent(key_switchTo = "${switchTo}", locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON")) {
			Click(
				key_switchTo = "",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");
		}

		AssertVisible(
			key_switchTo = "${switchTo}",
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_DISPLAY_STYLE_BUTTON");

		Navigator.gotoNavTab(navTab = "Fragments");

		PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

		if (isSet(targetFragmentName) && ("${displayStyle}" == "card")) {
			DragAndDrop.javaScriptDragAndDropToBottom(
				key_collectionName = "${collectionName}",
				key_fragmentName = "${fragmentName}",
				key_targetFragmentName = "${targetFragmentName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
				locator2 = "PageEditor#ANY_NESTED_FRAGMENT_DROP_TARGET",
				value1 = "");
		}

		if (isSet(targetFragmentName) && ("${displayStyle}" == "list")) {
			DragAndDrop.javaScriptDragAndDropToBottom(
				key_collectionName = "${collectionName}",
				key_fragmentName = "${fragmentName}",
				key_targetFragmentName = "${targetFragmentName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
				locator2 = "PageEditor#ANY_NESTED_FRAGMENT_DROP_TARGET",
				value1 = "");
		}

		if (!(isSet(targetFragmentName)) && ("${displayStyle}" == "card")) {
			DragAndDrop.javaScriptDragAndDropToObject(
				key_collectionName = "${collectionName}",
				key_entryTitle = "${entryTitle}",
				key_fragmentName = "${fragmentName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT_CARD_ITEM",
				locator2 = "PageEditor#COLLECTION_CELL",
				value1 = "");
		}

		if (!(isSet(targetFragmentName)) && ("${displayStyle}" == "list")) {
			DragAndDrop.javaScriptDragAndDropToObject(
				key_collectionName = "${collectionName}",
				key_entryTitle = "${entryTitle}",
				key_fragmentName = "${fragmentName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
				locator2 = "PageEditor#COLLECTION_CELL",
				value1 = "");
		}

		PageEditor.waitForAutoSave();
	}

	macro addVideoFragmentURL {
		FormFields.editText(
			fieldName = "url",
			fieldValue = "${videoLink}");

		Click(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		PageEditor.waitForAutoSave();
	}

	macro addWidget {
		PageEditor.assertFragmentSidebarLoaded();

		PageEditor.gotoTab(tabName = "Fragments and Widgets");

		Navigator.gotoNavTab(navTab = "Widgets");

		Type.sendKeysApplicationSearch(
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_FIELD",
			value1 = "${portletName}");

		if (!(isSet(indexItem))) {
			var indexItem = "1";
		}

		var key_portletName = "${portletName}";
		var key_indexItem = "${indexItem}";

		if (isSet(scope) && ("${dropTarget}" == "Header")) {
			DragAndDrop.javaScriptDragAndDropToUp(
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
				locator2 = "PageEditor#HEADER_DROP_TARGET",
				value1 = "");
		}

		if (isSet(scope) && ("${dropTarget}" == "Footer")) {
			DragAndDrop.javaScriptDragAndDropToBottom(
				key_targetFragmentName = "Drop Zone",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
				locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET",
				value1 = "");
		}

		if (isSet(targetFragmentName) && isSet(collectionName)) {
			DragAndDrop.javaScriptDragAndDropToBottom(
				key_collectionName = "${collectionName}",
				key_fragmentName = "${portletName}",
				key_targetFragmentName = "${targetFragmentName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
				locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET",
				value1 = "");
		}

		if (isSet(targetFragmentName) && !(isSet(collectionName))) {
			DragAndDrop.javaScriptDragAndDropToBottom(
				key_targetFragmentName = "${targetFragmentName}",
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
				locator2 = "PageEditor#ANY_FRAGMENT_DROP_TARGET",
				value1 = "${portletName}");
		}
		else {
			DragAndDrop.javaScriptDragAndDropToObject(
				locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_WIDGET",
				locator2 = "PageEditor#FRAGMENT_DROP_TARGET",
				value1 = "${portletName}");
		}

		PageEditor.waitForAutoSave();

		PageEditor.viewFragment(
			fragmentName = "${portletName}",
			position = "${position}");

		Click(locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_CLEAR_BUTTON");
	}

	macro assertAutoImageResolution {
		if ("${type}" == "backgroundImage") {
			var backgroundImage = Css.getCssValue(
				attribute = "background-image",
				element = "${element}");

			if (contains("${backgroundImage}", "${adaptiveMediaName}")) {
				echo("The auto image resolution is right.");
			}
			else {
				fail("The auto image resolution is wrong.");
			}
		}
		else {
			var currentSrc = selenium.getAttribute("${element}@currentSrc");

			if (contains("${currentSrc}", "${adaptiveMediaName}")) {
				echo("The auto image resolution is right.");
			}
			else {
				fail("The auto image resolution is wrong.");
			}
		}
	}

	macro assertFalseEntryIsNotPresent {
		AssertElementNotPresent(locator1 = "PageEditor#COLLECTION_ITEM_FALSE_ENTRY");
	}

	macro assertFragmentSidebarLoaded {
		WaitForPageLoad();

		AssertVisible(locator1 = "PageEditor#FRAGMENT_SIDEBAR_LOADED");
	}

	macro assertPaginationNumericTypeIsDisplayed {
		AssertElementPresent(locator1 = "PageEditor#COLLECTION_ITEM_PAGINATION_NEXT_BUTTON_NUMERIC");

		for (var pageNumber : list "${pageNumberList}") {
			var key_pageNumber = "${pageNumber}";

			AssertElementPresent(locator1 = "PageEditor#COLLECTION_ITEM_PAGINATION_NUMBER_BUTTON");
		}

		AssertElementPresent(locator1 = "PageEditor#COLLECTION_ITEM_PAGINATION_PREVIOUS_BUTTON_NUMERIC");
	}

	macro assertPaginationSimpleTypeIsDisplayed {
		AssertElementPresent(locator1 = "PageEditor#COLLECTION_ITEM_PREVIOUS_BUTTON");

		AssertElementPresent(locator1 = "PageEditor#COLLECTION_ITEM_NEXT_BUTTON");
	}

	macro assertTrueEntryIsPresent {
		AssertVisible(locator1 = "PageEditor#COLLECTION_ITEM_TRUE_ENTRY");
	}

	macro changeExperience {
		var key_experienceName = "${newExperience}";

		Click(locator1 = "PageEditor#EXPERIENCE_LABEL");

		Click(locator1 = "PageEditor#EXPERIENCE_SELECT_ITEM");

		PageEditor.clickManagementBar();

		AssertElementPresent(locator1 = "PageEditor#EXPERIENCE_BUTTON_NAME");
	}

	macro changeLocale {
		Click(
			key_currentLocale = StringUtil.lowerCase("${currentLocale}"),
			locator1 = "Button#TRANSLATIONS_LOCALIZATION");

		Click(
			key_locale = "${locale}",
			locator1 = "Translation#DROPDOWN_MENU_ITEM");

		AssertVisible(
			key_currentLocale = StringUtil.lowerCase("${locale}"),
			locator1 = "Button#TRANSLATIONS_LOCALIZATION");
	}

	macro clearSelection {
		Click.clickNoWaitForVisible(
			key_fieldLabel = "${fieldLabel}",
			key_text = "times-circle",
			locator1 = "Icon#ANY_ITEM_SELECTOR");

		PageEditor.waitForAutoSave();
	}

	macro clickBack {
		Click(locator1 = "Icon#ANGLE_LEFT_BACK");
	}

	macro clickConfigurableField {
		if (!(isSet(index))) {
			var index = "1";
		}

		Click.javaScriptClick(
			index = "${index}",
			key_fragmentName = "${fragmentName}",
			locator1 = "Fragment#FRAGMENT_LABEL");
	}

	macro clickDiscardDraft {
		WaitForPageLoad();

		PagesAdmin.openPageEllipsisMenu(pageName = "${pageName}");

		MenuItem.clickNoError(menuItem = "Discard Draft");

		AssertConfirm(value1 = "Are you sure you want to discard current draft and apply latest published changes?");

		if (isSet(failure)) {
			if (IsElementPresent(locator1 = "Message#ERROR_2")) {
				Alert.viewRequestFailedToComplete();

				AssertTextEquals(
					locator1 = "Message#ERROR_2",
					value1 = "${failure}");
			}
			else {
				AssertTextEquals(
					locator1 = "Message#ERROR",
					value1 = "${failure}");
			}
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro clickEditableField {
		if (!(isSet(index))) {
			var index = "1";
		}

		if ("${contributed}" == "false") {
			PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");
		}
		else {
			PageEditor.clickConfigurableField(
				fragmentName = "${fragmentName}",
				index = "${index}");
		}

		if (isSet(className)) {
			var fragmentName = "${className}";
		}
		else {
			var fragmentName = StringUtil.replace("${fragmentName}", " ", "-");
			var fragmentName = StringUtil.lowerCase("${fragmentName}");
		}

		if ("${contributed}" == "false") {
			Click(locator1 = "Fragment#EDITABLE_FIELD_ANY");
		}
		else {
			Click(locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT");
		}
	}

	macro clickManagementBar {
		var elementHeight = selenium.getElementHeight("PageEditor#FRAGMENT_SIDEBAR_BODY");
		var offSetY = 25 * ${elementHeight};
		var offSetY = ${offSetY} / 100;
		var elementWidth = selenium.getElementWidth("PageEditor#FRAGMENT_SIDEBAR_BODY");
		var offSetX = 0 * ${elementWidth};
		var offSetX = ${offSetX} / 100;

		Click.clickAt(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_BODY",
			value1 = "${offSetX},${offSetY}");
	}

	macro clickPublish {
		Button.click(button = "Publish");

		if (IsElementPresent(locator1 = "Modal#BODY")) {
			AssertTextEquals(
				locator1 = "Modal#BODY",
				value1 = "Some of the fields have invalid values. If you continue publishing, the latest valid values will display.");

			if ("${publishing}" == "Cancel") {
				Click(
					key_text = "Cancel",
					locator1 = "Modal#MODAL_FOOTER_BUTTON");
			}
			else {
				Click(
					key_text = "Continue",
					locator1 = "Modal#MODAL_FOOTER_BUTTON");

				Alert.viewSuccessMessage();
			}
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro closeSidebar {
		var key_tabName = "${tabName}";

		Click.clickNoMouseOver(locator1 = "PageEditor#FRAGMENT_SIDEBAR_TAB_BUTTON");

		AssertElementNotPresent(locator1 = "PageEditor#FRAGMENT_SIDEBAR_TAB_BUTTON_ACTIVE");
	}

	macro configureFragment {
		if (isSet(alignment)) {
			Select(
				key_fieldLabel = "Text Align",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${alignment}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(backgroundColor)) {
			PageEditor.selectColorSwatchItem(
				colorSwatchItem = "${backgroundColor}",
				fieldLabel = "Background Color");

			PageEditor.waitForAutoSave();
		}

		if (isSet(borderColor)) {
			PageEditor.selectColorSwatchItem(
				colorSwatchItem = "${borderColor}",
				fieldLabel = "Border Color");

			PageEditor.waitForAutoSave();
		}

		if (isSet(borderRadius)) {
			Select(
				key_fieldLabel = "Border Radius",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${borderRadius}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(bottomSpacing)) {
			Select(
				key_fieldLabel = "Bottom Spacing",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${bottomSpacing}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(boxShadow)) {
			Select(
				key_fieldLabel = "Shadow",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${boxShadow}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(headingLevel)) {
			Select(
				key_fieldLabel = "Heading Level",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${headingLevel}");

			PageEditor.waitForAutoSave();
		}

		if ("${hideFragment}" == "true") {
			Check.checkNotVisible(
				checkboxName = "Hide Fragment",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if ("${hideFragment}" == "false") {
			Uncheck.uncheckToggleSwitch(
				checkboxName = "Hide Fragment",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if ("${hideFromSiteSearchResults}" == "true") {
			Check.checkNotVisible(
				checkboxName = "Hide from Site Search Results",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if (isSet(height)) {
			Select(
				key_fieldLabel = "Height",
				locator1 = "PageEditor#CUSTOM_STYLES_SELECT_FIELD",
				value1 = "${height}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(imageSize)) {
			Select(
				key_fieldLabel = "Image Size",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${imageSize}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(marginBottom)) {
			Click(
				ariaLabel = "Margin Bottom",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			DropdownMenuItem.click(menuItem = "${marginBottom}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(marginLeft)) {
			Click(
				ariaLabel = "Margin Left",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			DropdownMenuItem.click(menuItem = "${marginLeft}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(marginRight)) {
			Click(
				ariaLabel = "Margin Right",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			DropdownMenuItem.click(menuItem = "${marginRight}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(marginTop)) {
			Click(
				ariaLabel = "Margin Top",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			DropdownMenuItem.click(menuItem = "${marginTop}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(numberOfSlides)) {
			Type(
				key_fieldLabel = "Number of Slides",
				locator1 = "FormFields#NUMBER_FIELD",
				value1 = "${numberOfSlides}");

			Click(
				key_sidebarButton = "Browser",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

			PageEditor.waitForAutoSave();

			AssertTextEquals(
				key_fieldLabel = "Number of Slides",
				locator1 = "FormFields#NUMBER_FIELD",
				value1 = "${numberOfSlides}");
		}

		if (isSet(numberOfTabs)) {
			Type(
				key_fieldLabel = "Number Of Tabs",
				locator1 = "FormFields#NUMBER_FIELD",
				value1 = "${numberOfTabs}");

			Click(
				key_sidebarButton = "Browser",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

			PageEditor.waitForAutoSave();

			AssertTextEquals(
				key_fieldLabel = "Number Of Tabs",
				locator1 = "FormFields#NUMBER_FIELD",
				value1 = "${numberOfTabs}");
		}

		if (isSet(paddingBottom)) {
			Click(
				ariaLabel = "Padding Bottom",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			DropdownMenuItem.click(menuItem = "${paddingBottom}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(paddingLeft)) {
			Click(
				ariaLabel = "Padding Left",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			DropdownMenuItem.click(menuItem = "${paddingLeft}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(paddingRight)) {
			Click(
				ariaLabel = "Padding Right",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			DropdownMenuItem.click(menuItem = "${paddingRight}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(paddingTop)) {
			Click(
				ariaLabel = "Padding Top",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			DropdownMenuItem.click(menuItem = "${paddingTop}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(separatorColor)) {
			Click(
				key_borderBottom = "Separator Color",
				key_paletteItem = "${separatorColor}",
				locator1 = "Button#BORDER_BOTTOM_PALETTE_ITEM");

			PageEditor.waitForAutoSave();
		}

		if (isSet(size)) {
			Select(
				key_fieldLabel = "Size",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${size}");

			PageEditor.waitForAutoSave();
		}

		if (isSet(textColor)) {
			PageEditor.selectColorSwatchItem(
				colorSwatchItem = "${textColor}",
				fieldLabel = "Text Color");

			PageEditor.waitForAutoSave();
		}

		if (isSet(type)) {
			Select(
				key_fieldLabel = "Type",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${type}");

			PageEditor.waitForAutoSave();
		}
	}

	macro createPageTemplate {
		Click(
			key_text = "page-template",
			locator1 = "Icon#ANY");

		if (isSet(experienceName)) {
			AssertTextEquals(
				locator1 = "Message#WARNING_FEEDBACK",
				value1 = "The page template is based on the current experience.");
		}

		PortletEntry.inputName(name = "${pageTemplateName}");

		Select(
			key_fieldLabel = "Page Template Set",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "${collectionName}");

		Button.click(button = "Create");

		if (IsElementPresent(locator1 = "Message#ERROR_DISMISSIBLE")) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_DISMISSIBLE",
				value1 = "${alertMessage}");
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro deleteComment {
		MouseOver(locator1 = "PageEditor#FRAGMENT_SIDEBAR_ELLIPSIS");

		Click(locator1 = "PageEditor#FRAGMENT_SIDEBAR_ELLIPSIS");

		AssertClickNoError(
			key_menuItem = "Delete",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Delete");

		Click(locator1 = "Button#DELETE_FRAGMENT_COMMENT");

		AssertTextNotPresent(value1 = "${fragmentComment}");
	}

	macro deleteExperience {
		var key_experienceName = "${newExperience}";

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		ClickNoError(locator1 = "PageEditor#EXPERIENCE_DELETE_BUTTON");

		AssertConfirm(value1 = "Do you want to delete this experience? Its content will be deleted.");

		Alert.viewSuccessMessage();

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		AssertElementNotPresent(
			key_experienceName = "${newExperience}",
			locator1 = "PageEditor#EXPERIENCE_SELECT_ITEM");

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");
	}

	macro deprioritizeExperience {
		var key_experienceName = "${experienceName}";

		if (IsElementPresent(locator1 = "PageEditor#EXPERIENCE_DROPDOWN")) {
			Click(locator1 = "PageEditor#EXPERIENCE_LABEL");
		}

		AssertTextEquals(
			locator1 = "PageEditor#EXPERIENCE_LABEL",
			value1 = "Experience");

		AssertClick(
			locator1 = "PageEditor#EXPERIENCE_BUTTON_NAME",
			value1 = "${experienceName}");

		Click(locator1 = "PageEditor#EXPERIENCE_DEPRIORITIZE_BUTTON");
	}

	macro detachToken {
		Click.clickNoWaitForVisible(
			key_fieldLabel = "${fieldLabel}",
			key_text = "chain-broken",
			locator1 = "Icon#ANY_ITEM_SELECTOR");

		PageEditor.waitForAutoSave();

		AssertElementPresent(
			key_fieldLabel = "${fieldLabel}",
			key_text = "theme",
			locator1 = "Icon#ANY_ITEM_SELECTOR");
	}

	macro duplicateExperience {
		var key_experienceName = "${experienceName}";

		AssertTextEquals(
			locator1 = "PageEditor#EXPERIENCE_LABEL",
			value1 = "Experience");

		AssertClick(
			locator1 = "PageEditor#EXPERIENCE_BUTTON_NAME",
			value1 = "${experienceName}");

		Click(locator1 = "PageEditor#EXPERIENCE_DUPLICATE_BUTTON");

		AssertElementPresent(
			key_experienceName = "Copy of ${experienceName}",
			locator1 = "PageEditor#EXPERIENCE_SELECT_ITEM");
	}

	macro editAppliedFilters {
		var key_fragmentName = "Applied Filters";

		if (isSet(columnNumber)) {
			Click.clickNoWaitForVisible(
				key_columnNumber = "${columnNumber}",
				key_elementHeader = "//div[@aria-label='${key_fragmentName}']",
				key_position = "1",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");
		}
		else {
			PageEditor.clickConfigurableField(fragmentName = "Applied Filters");
		}

		WaitForVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		Navigator.gotoNavTab(navTab = "General");

		if (isSet(targetCollection)) {
			Click(
				key_fieldLabel = "Target Collection",
				key_text = "Select",
				locator1 = "Button#ANY_WITH_LABEL");

			Check.checkNotVisible(
				key_checkboxName = "${targetCollection}",
				locator1 = "MenuItem#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if (isSet(includeClearFiltersOption)) {
			Check.checkNotVisible(
				checkboxName = "Include Clear Filters Option",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}
	}

	macro editCDLayoutAndMaxNumber {
		Click.clickNoWaitForVisible(locator1 = "Masterclass#COLLECTION_DISPLAY");

		Navigator.gotoNavTab(navTab = "General");

		Select(
			locator1 = "Masterclass#LAYOUT_SELECT",
			value1 = "${layoutColumns}");

		Type(
			locator1 = "Masterclass#MAX_NUMBER_OF_ITEMS",
			value1 = "${maxNumber}");
	}

	macro editCollectionDisplay {
		if (!(isSet(index))) {
			var index = "1";
		}

		var key_fragmentName = "${fragmentName}";
		var key_index = "${index}";

		if (isSet(deviceType) && ("${deviceType}" != "Desktop")) {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#PAGE_EDITOR_GLOBAL_CONTEXT_IFRAME");
		}

		if (isSet(columnNumber)) {
			Click.clickNoWaitForVisible(
				key_columnNumber = "${columnNumber}",
				key_elementHeader = "//div[@aria-label='${key_fragmentName}']",
				key_position = "1",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");
		}
		else {
			PageEditor.clickConfigurableField(
				fragmentName = "${fragmentName}",
				index = "${index}");
		}

		if (isSet(deviceType) && ("${deviceType}" != "Desktop")) {
			SelectFrame(value1 = "relative=top");
		}

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		Navigator.gotoNavTab(navTab = "General");

		if (isSet(selectedName)) {
			PageEditor.viewItemSelectorText(
				fieldLabel = "Collection",
				text = "${selectedName}");

			if (isSet(filterCollection)) {
				PageEditor.gotoEllipsisMenuItemInItemSelector(
					fieldLabel = "Collection",
					menuItem = "Prefilter Collection");

				if (isSet(clearFilter)) {
					Click(
						key_text = "Clear",
						locator1 = "Button#ANY");
				}

				if (isSet(tagNameList)) {
					Click(
						key_text = "Select",
						locator1 = "Button#ANY");

					for (var tagName : list "${tagNameList}") {
						Check.checkNotVisible(
							checkboxName = "${tagName}",
							locator1 = "Checkbox#ANY_CHECKBOX");
					}
				}

				if (isSet(assetTitle)) {
					Type(
						key_text = "Title",
						locator1 = "TextInput#ANY",
						value1 = "${assetTitle}");

					Click(locator1 = "Modal#HEADER");
				}

				if (isSet(filterResults)) {
					AssertTextEquals(
						locator1 = "Modal#SEARCH_INFO",
						value1 = "${filterResults}");
				}

				if (isSet(fieldLabel)) {
					Select(
						key_fieldLabel = "${fieldLabel}",
						locator1 = "Select#GENERIC_SELECT_FIELD",
						value1 = "${option}");
				}

				Button.clickApply();
			}
		}
		else if (!(isSet(deviceType)) || ("${deviceType}" == "Desktop")) {
			if (IsTextEqual(key_fieldLabel = "Collection", locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT", value1 = "")) {
				Click(
					key_fieldLabel = "Collection",
					key_text = "plus",
					locator1 = "Icon#ANY_ITEM_SELECTOR");
			}
			else {
				Click(
					key_fieldLabel = "Collection",
					key_text = "change",
					locator1 = "Icon#ANY_ITEM_SELECTOR");
			}

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			if (isSet(assetListName)) {
				NavItem.click(navItem = "Collections");

				LexiconCard.clickCard(card = "${assetListName}");

				PageEditor.viewItemSelectorText(
					fieldLabel = "Collection",
					text = "${assetListName}");
			}
			else if (isSet(infoListProviderName)) {
				NavItem.click(navItem = "Collection Providers");

				LexiconCard.clickCard(card = "${infoListProviderName}");

				Refresh();

				PageEditor.clickConfigurableField(
					fragmentName = "${fragmentName}",
					index = "${index}");

				PageEditor.viewItemSelectorText(
					fieldLabel = "Collection",
					text = "${infoListProviderName}");
			}
			else if (isSet(infoItemRelatedListProviderName)) {
				NavItem.click(navItem = "Related Items Collection Providers");

				LexiconCard.clickCard(card = "${infoItemRelatedListProviderName}");

				PageEditor.viewItemSelectorText(
					fieldLabel = "Collection",
					text = "${infoItemRelatedListProviderName}");
			}
		}

		if (isSet(styleDisplay)) {
			AssertElementPresent(
				key_fieldLabel = "Style Display",
				key_groupLabel = "Templates",
				key_value = "${styleDisplay}",
				locator1 = "Select#GROUPED_SELECT_VALUE");

			Select(
				key_fieldLabel = "Style Display",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${styleDisplay}");

			PageEditor.waitForAutoSave();

			AssertSelectedLabel(
				key_fieldLabel = "Style Display",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${styleDisplay}");

			if (isSet(listItemStyle)) {
				Select(
					key_fieldLabel = "List Item Style",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${listItemStyle}");

				PageEditor.waitForAutoSave();

				AssertSelectedLabel(
					key_fieldLabel = "List Item Style",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${listItemStyle}");
			}
		}

		if (isSet(layout)) {
			Select(
				key_fieldLabel = "Layout",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${layout}");

			PageEditor.waitForAutoSave();

			AssertSelectedLabel(
				key_fieldLabel = "Layout",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${layout}");
		}

		if ("${spaceBetweenColumns}" == "true") {
			Check.checkNotVisible(
				checkboxName = "Show Gutter",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if ("${spaceBetweenColumns}" == "false") {
			Uncheck.uncheckToggleSwitch(
				checkboxName = "Show Gutter",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if (isSet(pagination)) {
			Select(
				key_fieldLabel = "Pagination",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${pagination}");

			PageEditor.waitForAutoSave();

			AssertSelectedLabel(
				key_fieldLabel = "Pagination",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${pagination}");
		}

		if ("${displayAllPages}" == "true") {
			Check.checkNotVisible(
				checkboxName = "Display All Pages",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else if ("${displayAllPages}" == "false") {
			Uncheck.uncheckNotVisible(
				checkboxName = "Display All Pages",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		if ("${displayAllCollectionItems}" == "true") {
			Check.checkNotVisible(
				checkboxName = "Display All Collection Items",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else if ("${displayAllCollectionItems}" == "false") {
			Uncheck.uncheckNotVisible(
				checkboxName = "Display All Collection Items",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		if (isSet(maxNumberOfItemsToDisplay)) {
			Type(
				key_fieldLabel = "Maximum Number of Items to Display",
				locator1 = "FormFields#NUMBER_FIELD",
				value1 = "${maxNumberOfItemsToDisplay}");

			Click(
				key_sidebarButton = "Browser",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

			PageEditor.waitForAutoSave();

			AssertTextEquals(
				key_fieldLabel = "Maximum Number of Items to Display",
				locator1 = "FormFields#NUMBER_FIELD",
				value1 = "${maxNumberOfItemsToDisplay}");
		}

		if (isSet(maxNumberOfPagesToDisplay)) {
			Type(
				key_fieldLabel = "Maximum Number of Pages to Display",
				locator1 = "FormFields#NUMBER_FIELD",
				value1 = "${maxNumberOfPagesToDisplay}");

			Click(
				key_sidebarButton = "Browser",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

			PageEditor.waitForAutoSave();

			AssertTextEquals(
				key_fieldLabel = "Maximum Number of Pages to Display",
				locator1 = "FormFields#NUMBER_FIELD",
				value1 = "${maxNumberOfPagesToDisplay}");
		}

		if (isSet(maxNumberOfItemsPerPage)) {
			Type(
				key_text = "Maximum Number of Items per Page",
				locator1 = "TextInput#ANY",
				value1 = "${maxNumberOfItemsPerPage}");

			Click(
				key_sidebarButton = "Browser",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

			PageEditor.waitForAutoSave();

			AssertTextEquals(
				key_text = "Maximum Number of Items per Page",
				locator1 = "TextInput#ANY",
				value1 = "${maxNumberOfItemsPerPage}");
		}
	}

	macro editCollectionFilter {
		var key_fragmentName = "${fragmentName}";

		if (isSet(columnNumber)) {
			Click.clickNoWaitForVisible(
				key_columnNumber = "${columnNumber}",
				key_elementHeader = "//div[@aria-label='${key_fragmentName}']",
				key_position = "1",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");
		}
		else {
			PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");
		}

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		Navigator.gotoNavTab(navTab = "General");

		if (isSet(targetCollection)) {
			Click(
				key_fieldLabel = "Target Collection",
				key_text = "Select",
				locator1 = "Button#ANY_WITH_LABEL");

			Check.checkNotVisible(
				key_checkboxName = "${targetCollection}",
				locator1 = "MenuItem#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if (isSet(filter)) {
			Select(
				key_fieldLabel = "Filter",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${filter}");

			PageEditor.waitForAutoSave();

			AssertSelectedLabel(
				key_fieldLabel = "Filter",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${filter}");
		}

		if (isSet(selectedName)) {
			PageEditor.viewItemSelectorText(
				fieldLabel = "Source",
				text = "${selectedName}");
		}
		else if (isSet(vocabularyName)) {
			if (IsTextEqual(key_fieldLabel = "Source", locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT", value1 = "")) {
				Click(
					key_fieldLabel = "Source",
					key_text = "plus",
					locator1 = "Icon#ANY_ITEM_SELECTOR");
			}
			else {
				Click(
					key_fieldLabel = "Source",
					key_text = "change",
					locator1 = "Icon#ANY_ITEM_SELECTOR");
			}

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			LexiconTable.clickTableEntryColumnLink(
				columnName = "name",
				tableEntry = "${vocabularyName}");

			for (var category : list "${categoryNameList}") {
				AssertVisible(
					key_columnName = "name",
					key_tableEntry = "${category}",
					locator1 = "LexiconTable#TABLE_ENTRY_COLUMN_LINK");
			}

			if (isSet(categoryName)) {
				LexiconTable.clickTableEntryColumnLink(
					columnName = "name",
					tableEntry = "${categoryName}");

				for (var subcategory : list "${subcategoryNameList}") {
					AssertVisible(
						key_columnName = "name",
						key_tableEntry = "${subcategory}",
						locator1 = "LexiconTable#TABLE_ENTRY_COLUMN_LINK");
				}

				Button.click(button = "Select This Level");

				PageEditor.waitForAutoSave();

				PageEditor.viewItemSelectorText(
					fieldLabel = "Source",
					text = "${categoryName}");
			}
			else {
				Button.click(button = "Select This Level");

				PageEditor.waitForAutoSave();

				PageEditor.viewItemSelectorText(
					fieldLabel = "Source",
					text = "${vocabularyName}");
			}
		}

		if (isSet(includeSearchField)) {
			Check.checkNotVisible(
				checkboxName = "Include Search Field",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if (isSet(singleSelection)) {
			Check.checkNotVisible(
				checkboxName = "Single Selection",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if (isSet(showLabel)) {
			Check.checkNotVisible(
				checkboxName = "Show Label",
				locator1 = "Checkbox#ANY_CHECKBOX");

			PageEditor.waitForAutoSave();
		}

		if (isSet(label)) {
			Type(
				key_text = "Label",
				locator1 = "TextInput#ANY",
				value1 = "${label}");

			Click(
				key_sidebarButton = "Browser",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

			PageEditor.waitForAutoSave();
		}
	}

	macro editComment {
		MouseOver(locator1 = "PageEditor#FRAGMENT_SIDEBAR_ELLIPSIS");

		Click(locator1 = "PageEditor#FRAGMENT_SIDEBAR_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Click.clickAt(locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS_EDITOR");

		Type(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS_EDITOR",
			value1 = "${fragmentCommentEdit}");

		Click(locator1 = "Button#UPDATE");
	}

	macro editContentDisplay {
		var key_fragmentName = "${fragmentName}";

		PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		Navigator.gotoNavTab(navTab = "General");

		if (isSet(inCollectionDisplay)) {
			Select(
				key_fieldLabel = "Template",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${template}");

			PageEditor.waitForAutoSave();

			AssertSelectedLabel(
				key_fieldLabel = "Template",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${template}");
		}
		else {
			if (IsTextEqual(key_fieldLabel = "Item", locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT", value1 = "")) {
				Click(
					key_fieldLabel = "Item",
					key_text = "plus",
					locator1 = "Icon#ANY_ITEM_SELECTOR");
			}
			else {
				Click(
					key_fieldLabel = "Item",
					key_text = "change",
					locator1 = "Icon#ANY_ITEM_SELECTOR");
			}

			if (IsElementPresent(key_menuItem = "Select Item...", locator1 = "MenuItem#ANY_MENU_ITEM")) {
				MenuItem.click(menuItem = "Select Item...");
			}

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			if (isSet(documentandmedia)) {
				NavItem.click(navItem = "Documents and Media");

				LexiconCard.clickCard(card = "${imageFileName}");

				PageEditor.viewItemSelectorText(
					fieldLabel = "Item",
					text = "${imageFileName}");

				if (isSet(sourceFileName)) {
					PageEditor.viewFragment(fragmentName = "${fragmentName}");

					ContentPages.viewFragmentBackgroundImage(image = "${sourceFileName}");
				}
			}

			if (isSet(blogs)) {
				NavItem.click(navItem = "Blogs");

				LexiconCard.clickCard(card = "${entryTitle}");

				PageEditor.viewItemSelectorText(
					fieldLabel = "Item",
					text = "${entryTitle}");

				if (isSet(entryContent)) {
					ContentPages.viewFragmentText(
						assetType = "widget-content",
						fragmentName = "Content Display",
						text = "${entryContent}");
				}
			}

			if (isSet(categories)) {
				NavItem.click(navItem = "Categories");

				Portlet.expandTree();

				AssertVisible(
					key_nodeName = "${assetTitle}",
					locator1 = "Treeview#NODE_ITEM");

				Click(
					key_nodeName = "${assetTitle}",
					locator1 = "Treeview#NODE_UNSELECTED");

				PageEditor.viewItemSelectorText(
					fieldLabel = "Item",
					text = "${assetTitle}");
			}

			if (isSet(webcontent)) {
				NavItem.click(navItem = "Web Content");

				if (isSet(depotName)) {
					var key_contentName = "${webContentTitle}";

					AssertClick(
						key_breadcrumbName = "Sites and Libraries",
						locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
						value1 = "Sites and Libraries");

					AssertClick(
						key_groupTab = "Asset Library",
						locator1 = "ItemSelector#NAVIGATION_GROUP_TAB",
						value1 = "Asset Library");

					LexiconCard.clickCard(card = "${depotName}");

					Click(locator1 = "ItemSelector#SELECT_FILE_WEB_CONTENT");
				}
				else {
					LexiconEntry.changeDisplayStyle(displayStyle = "cards");

					LexiconCard.clickCard(card = "${webContentTitle}");
				}

				PageEditor.viewItemSelectorText(
					fieldLabel = "Item",
					text = "${webContentTitle}");

				if (isSet(webContentContent)) {
					ContentPages.viewFragmentText(
						assetType = "journal",
						fragmentName = "Content Display",
						text = "${webContentContent}");
				}
			}

			if (isSet(template)) {
				Select(
					key_fieldLabel = "Template",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${template}");

				PageEditor.waitForAutoSave();

				AssertSelectedLabel(
					key_fieldLabel = "Template",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${template}");
			}
		}
	}

	macro editDropdown {
		var key_fragmentName = "Dropdown";

		PageEditor.clickConfigurableField(fragmentName = "Dropdown");

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		if ("${panel}" == "General") {
			Navigator.gotoNavTab(navTab = "General");

			if (isSet(displayedBehavior)) {
				Check.checkNotVisible(
					checkboxName = "${displayedBehavior}",
					locator1 = "Checkbox#ANY_CHECKBOX");

				PageEditor.waitForAutoSave();
			}

			if (isSet(panelType)) {
				Select(
					key_fieldLabel = "Panel Type",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${panelType}");

				PageEditor.waitForAutoSave();

				AssertSelectedLabel(
					key_fieldLabel = "Panel Type",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${panelType}");
			}
		}
	}

	macro editExperience {
		var key_experienceName = "${newExperience}";

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		Click(locator1 = "PageEditor#EXPERIENCE_EDIT_BUTTON");

		Click(locator1 = "PageEditor#EXPERIENCE_CREATE_SEGMENT");

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "AddSegmentUserEmailAddressContains Test 2");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "liferay2");

		Button.clickSave();

		Type(
			locator1 = "PageEditor#EXPERIENCE_NAME",
			value1 = "${key_experienceName}");

		Click(locator1 = "Button#SAVE");

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		AssertElementPresent(
			key_experienceName = "${newExperience}",
			locator1 = "PageEditor#EXPERIENCE_SELECT_ITEM");

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");
	}

	macro editFragmentHTML {
		PageEditor.gotoEditableFieldEdit(
			contributed = "${contributed}",
			fragmentName = "${fragmentName}",
			id = "${id}");

		if (isSet(fileName)) {
			var content = TestCase.getFileContent(fileName = "${fileName}");
		}

		Type.typeAceEditorNoError(
			locator1 = "Fragment#EDITABLE_HTML_FRAGMENT_FIELD",
			value1 = "${content}");

		Click(locator1 = "Modal#SAVE_BUTTON");

		PageEditor.waitForAutoSave();
	}

	macro editFragmentImage {
		PageEditor.clickEditableField(
			contributed = "${contributed}",
			fragmentName = "${fragmentName}",
			id = "${id}");

		Navigator.gotoNavTab(navTab = "Image Source");

		if (!(IsSelectedLabel(key_fieldLabel = "Source Selection", locator1 = "Select#GENERIC_SELECT_FIELD", value1 = "Direct"))) {
			Select(
				key_fieldLabel = "Source Selection",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "Direct");

			AssertSelectedLabel(
				key_fieldLabel = "Source Selection",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "Direct");
		}

		if (IsTextEqual(key_fieldLabel = "Image", locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT", value1 = "")) {
			Click(
				key_fieldLabel = "Image",
				key_text = "plus",
				locator1 = "Icon#ANY_ITEM_SELECTOR");
		}
		else {
			Click(
				key_fieldLabel = "Image",
				key_text = "change",
				locator1 = "Icon#ANY_ITEM_SELECTOR");
		}

		if (isSet(imageFileName)) {
			ItemSelector.selectDMImage(
				imageFileName = "${imageFileName}",
				navTab = "Documents and Media");
		}
		else if (isSet(imageSourceURL)) {
			ItemSelector.addImageFromURL(
				imageSourceURL = "${imageSourceURL}",
				navTab = "URL");
		}
		else {
			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			AssertElementPresent.assertVisible(locator1 = "Button#SELECT_FILE");

			UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${fileName}");

			Pause(locator1 = "3000");

			Button.clickAdd();
		}

		PageEditor.waitForAutoSave();

		if (isSet(imageDescription)) {
			Type(
				key_text = "Image Description",
				locator1 = "TextInput#ANY",
				value1 = "${imageDescription}");

			Click(
				key_sidebarButton = "Browser",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

			PageEditor.waitForAutoSave();

			AssertTextEquals(
				key_text = "Image Description",
				locator1 = "TextInput#ANY",
				value1 = "${imageDescription}");
		}
	}

	macro editFragmentText {
		if (!(isSet(index))) {
			var index = "1";
		}

		PageEditor.gotoEditableFieldEdit(
			className = "${className}",
			contributed = "${contributed}",
			fragmentName = "${fragmentName}",
			id = "${id}",
			index = "${index}");

		if (isSet(text)) {
			Type(
				key_editor = "content",
				locator1 = "AlloyEditor#EDITOR",
				value1 = "${text}");
		}

		if (isSet(style)) {
			SelectFieldText(
				key_editor = "content",
				locator1 = "AlloyEditor#EDITOR");

			Click(locator1 = "AlloyEditor#TEXT_FORMATTING_STYLE");

			Click(
				key_styleFormat = "${style}",
				locator1 = "AlloyEditor#TEXT_FORMATTING_STYLE_DROPDOWN");
		}

		PageEditor.clickManagementBar();

		PageEditor.waitForAutoSave();
	}

	macro editFragmentTextViaPageContentPanel {
		Click.clickAtNotVisible(
			key_itemName = "${itemName}",
			locator1 = "PageEditor#PAGE_CONTENTS_ITEM_EDIT_PENCIL");

		AssertElementPresent(
			key_text = "Edit Inline Text",
			locator1 = "Button#ANY_DISABLED");

		if (isSet(text)) {
			Type(
				key_editor = "content",
				locator1 = "AlloyEditor#EDITOR",
				value1 = "${text}");
		}

		if (isSet(style)) {
			SelectFieldText(
				key_editor = "content",
				locator1 = "AlloyEditor#EDITOR");

			Click(locator1 = "AlloyEditor#TEXT_FORMATTING_STYLE");

			Click(
				key_styleFormat = "${style}",
				locator1 = "AlloyEditor#TEXT_FORMATTING_STYLE_DROPDOWN");
		}

		PageEditor.clickManagementBar();

		PageEditor.waitForAutoSave();
	}

	macro editLayoutContainer {
		if (isSet(position)) {
			var index = "${position}";
		}
		else {
			var index = "1";
		}

		PageEditor.clickConfigurableField(
			fragmentName = "Container",
			index = "${index}");

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		if ("${panel}" == "Styles") {
			Navigator.gotoNavTab(navTab = "Styles");

			if (isSet(backgroundColor)) {
				PageEditor.selectColorSwatchItem(
					colorSwatchItem = "${backgroundColor}",
					fieldLabel = "Background Color");

				PageEditor.waitForAutoSave();
			}

			if (isSet(backgroundImage)) {
				Select(
					key_fieldLabel = "Image Source",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${backgroundImage}");

				if ("${backgroundImage}" == "Mapping") {
					if (isSet(entryTitle)) {
						PageEditorMapping.mapEditableFieldToAsset(
							entryTitle = "${entryTitle}",
							navItem = "${navItem}",
							uploadFileName = "${uploadFileName}");

						if ("${navItem}" == "Documents and Media") {
							Select(
								locator1 = "PageEditorEditableLink#LAYOUT_BACKGROUND_IMAGE_FIELD",
								value1 = "${fieldName}");
						}
						else {
							Select(
								locator1 = "PageEditorEditableLink#LAYOUT_BACKGROUND_IMAGE_FIELD",
								value1 = "Image");
						}

						PageEditor.waitForAutoSave();
					}
					else {
						if (isSet(source)) {
							Select(
								key_fieldLabel = "Source",
								locator1 = "Select#GENERIC_SELECT_FIELD",
								value1 = "${source}");
						}

						Pause(locator1 = "3000");

						Select(
							key_fieldLabel = "Field",
							locator1 = "Select#GENERIC_SELECT_FIELD",
							value1 = "${fieldName}");

						PageEditor.waitForAutoSave();
					}
				}

				if ("${backgroundImage}" == "Direct") {
					if (IsTextEqual(key_fieldLabel = "Background Image", locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT", value1 = "")) {
						Click(
							key_fieldLabel = "Background Image",
							key_text = "plus",
							locator1 = "Icon#ANY_ITEM_SELECTOR");
					}
					else {
						Click(
							key_fieldLabel = "Background Image",
							key_text = "change",
							locator1 = "Icon#ANY_ITEM_SELECTOR");
					}

					if (isSet(depotName)) {
						ItemSelector.selectRepositoryImage(
							depotName = "${depotName}",
							imageFileName = "${imageFileName}",
							navTab = "Documents and Media");
					}
					else {
						if (isSet(uploadFileName)) {
							ItemSelector.uploadFile(
								navTab = "Documents and Media",
								uploadFileName = "${uploadFileName}");
						}
						else if (isSet(imageSourceURL)) {
							ItemSelector.addImageFromURL(
								imageSourceURL = "${imageSourceURL}",
								navTab = "URL");
						}
						else {
							SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

							Click(
								key_card = "${entryTitle}",
								locator1 = "Card#CARD_TITLE");
						}
					}

					SelectFrame(value1 = "relative=top");
				}

				PageEditor.waitForAutoSave();
			}

			if (isSet(borderColor)) {
				PageEditor.selectColorSwatchItem(
					colorSwatchItem = "${borderColor}",
					fieldLabel = "Border Color");

				PageEditor.waitForAutoSave();
			}

			if (isSet(borderRadius)) {
				Select(
					key_fieldLabel = "Border Radius",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${borderRadius}");

				PageEditor.waitForAutoSave();
			}

			if (isSet(borderWidth)) {
				Type(
					key_fieldLabel = "Border Width",
					locator1 = "FormFields#NUMBER_FIELD",
					value1 = "${borderWidth}");

				Click(
					key_sidebarButton = "Browser",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

				PageEditor.waitForAutoSave();

				AssertTextEquals(
					key_fieldLabel = "Border Width",
					locator1 = "FormFields#NUMBER_FIELD",
					value1 = "${borderWidth}");
			}

			if (isSet(boxShadow)) {
				Select(
					key_fieldLabel = "Shadow",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${boxShadow}");

				PageEditor.waitForAutoSave();
			}

			PageEditor.configureFragment(
				marginBottom = "${marginBottom}",
				marginLeft = "${marginLeft}",
				marginRight = "${marginRight}",
				marginTop = "${marginTop}",
				paddingBottom = "${paddingBottom}",
				paddingLeft = "${paddingLeft}",
				paddingRight = "${paddingRight}",
				paddingTop = "${paddingTop}");

			if (isSet(opacity)) {
				Type(
					key_fieldLabel = "Opacity",
					locator1 = "FormFields#NUMBER_FIELD",
					value1 = "${opacity}");

				Click(
					key_sidebarButton = "Browser",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

				PageEditor.waitForAutoSave();

				AssertTextEquals(
					key_fieldLabel = "Opacity",
					locator1 = "FormFields#NUMBER_FIELD",
					value1 = "${opacity}");
			}
		}

		if ("${panel}" == "General") {
			Navigator.gotoNavTab(navTab = "General");

			if (isSet(containerWidth)) {
				Select(
					key_fieldLabel = "Container Width",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${containerWidth}");

				PageEditor.waitForAutoSave();
			}

			if (isSet(contentDisplay)) {
				Select(
					key_fieldLabel = "Content Display",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${contentDisplay}");

				PageEditor.waitForAutoSave();

				if ("${contentDisplay}" != "Block") {
					if (isSet(alignItems)) {
						Select(
							key_fieldLabel = "Align Items",
							locator1 = "Select#GENERIC_SELECT_FIELD",
							value1 = "${alignItems}");

						PageEditor.waitForAutoSave();
					}

					if (isSet(justifyContent)) {
						Select(
							key_fieldLabel = "Justify Content",
							locator1 = "Select#GENERIC_SELECT_FIELD",
							value1 = "${justifyContent}");

						PageEditor.waitForAutoSave();
					}
				}
			}

			if (isSet(height)) {
				Type(
					key_borderBottom = "Frame",
					key_fieldLabel = "Height",
					locator1 = "TextInput#BORDER_BOTTOM_INPUT_FIELD",
					value1 = "${height}");

				Click(
					key_sidebarButton = "Browser",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

				PageEditor.waitForAutoSave();
			}

			if ("${link}" == "Mapped URL") {
				Select(
					key_fieldLabel = "Link",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${link}");

				PageEditor.waitForAutoSave();

				PageEditorMapping.mapEditableFieldToAsset(
					entryTitle = "${entryTitle}",
					navItem = "${navItem}");

				Select(
					key_fieldLabel = "Field",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${field}");

				PageEditor.waitForAutoSave();

				AssertSelectedLabel(
					key_fieldLabel = "Field",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${field}");
			}
			else if (isSet(url)) {
				Type(
					key_text = "URL",
					locator1 = "TextInput#ANY",
					value1 = "${url}");

				Click(
					key_sidebarButton = "Browser",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

				PageEditor.waitForAutoSave();
			}

			if ("${target}" == "Blank") {
				Check.checkNotVisible(
					checkboxName = "Open in a new tab.",
					locator1 = "Checkbox#ANY_CHECKBOX");

				PageEditor.waitForAutoSave();
			}
			else if ("${target}" == "Self") {
				Uncheck.uncheckToggleSwitch(
					checkboxName = "Open in a new tab.",
					locator1 = "Checkbox#ANY_CHECKBOX");

				PageEditor.waitForAutoSave();
			}
		}

		if ("${panel}" == "Advanced") {
			Navigator.gotoNavTab(navTab = "Advanced");

			if (isSet(htmlTag)) {
				Select(
					key_fieldLabel = "HTML Tag",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${htmlTag}");

				PageEditor.waitForAutoSave();
			}

			if ("${hideFromSiteSearchResults}" == "true") {
				Check.checkNotVisible(
					checkboxName = "Hide from Site Search Results",
					locator1 = "Checkbox#ANY_CHECKBOX");

				PageEditor.waitForAutoSave();
			}
		}
	}

	macro editLayoutGrid {
		if (isSet(position)) {
			var index = "${position}";
		}
		else {
			var index = "1";
		}

		PageEditor.clickConfigurableField(
			fragmentName = "Grid",
			index = "${index}");

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		if ("${panel}" == "Styles") {
			Navigator.gotoNavTab(navTab = "Styles");

			if (isSet(backgroundColor)) {
				PageEditor.selectColorSwatchItem(
					colorSwatchItem = "${backgroundColor}",
					fieldLabel = "Background Color");

				PageEditor.waitForAutoSave();
			}

			if (isSet(backgroundImage)) {
				Select(
					key_fieldLabel = "Image Source",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${backgroundImage}");

				if ("${backgroundImage}" == "Mapping") {
					if (isSet(entryTitle)) {
						PageEditorMapping.mapEditableFieldToAsset(
							entryTitle = "${entryTitle}",
							navItem = "${navItem}",
							uploadFileName = "${uploadFileName}");

						if ("${navItem}" == "Documents and Media") {
							Select(
								locator1 = "PageEditorEditableLink#LAYOUT_BACKGROUND_IMAGE_FIELD",
								value1 = "${fieldName}");
						}
						else {
							Select(
								locator1 = "PageEditorEditableLink#LAYOUT_BACKGROUND_IMAGE_FIELD",
								value1 = "Image");
						}

						PageEditor.waitForAutoSave();
					}
					else {
						if (isSet(source)) {
							Select(
								key_fieldLabel = "Source",
								locator1 = "Select#GENERIC_SELECT_FIELD",
								value1 = "${source}");
						}

						Pause(locator1 = "3000");

						Select(
							key_fieldLabel = "Field",
							locator1 = "Select#GENERIC_SELECT_FIELD",
							value1 = "${fieldName}");

						PageEditor.waitForAutoSave();
					}
				}

				if ("${backgroundImage}" == "Direct") {
					if (IsTextEqual(key_fieldLabel = "Background Image", locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT", value1 = "")) {
						Click(
							key_fieldLabel = "Background Image",
							key_text = "plus",
							locator1 = "Icon#ANY_ITEM_SELECTOR");
					}
					else {
						Click(
							key_fieldLabel = "Background Image",
							key_text = "change",
							locator1 = "Icon#ANY_ITEM_SELECTOR");
					}

					if (isSet(depotName)) {
						ItemSelector.selectRepositoryImage(
							depotName = "${depotName}",
							imageFileName = "${imageFileName}",
							navTab = "Documents and Media");
					}
					else {
						if (isSet(uploadFileName)) {
							ItemSelector.uploadFile(
								navTab = "Documents and Media",
								uploadFileName = "${uploadFileName}");
						}
						else if (isSet(imageSourceURL)) {
							ItemSelector.addImageFromURL(
								imageSourceURL = "${imageSourceURL}",
								navTab = "URL");
						}
						else {
							SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

							Click(
								key_card = "${entryTitle}",
								locator1 = "Card#CARD_TITLE");
						}
					}

					SelectFrame(value1 = "relative=top");
				}

				PageEditor.waitForAutoSave();
			}

			if (isSet(borderColor)) {
				PageEditor.selectColorSwatchItem(
					colorSwatchItem = "${borderColor}",
					fieldLabel = "Border Color");

				PageEditor.waitForAutoSave();
			}

			if (isSet(borderRadius)) {
				Select(
					key_fieldLabel = "Border Radius",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${borderRadius}");

				PageEditor.waitForAutoSave();
			}

			if (isSet(borderWidth)) {
				Type(
					key_fieldLabel = "Border Width",
					locator1 = "FormFields#NUMBER_FIELD",
					value1 = "${borderWidth}");

				Click(
					key_sidebarButton = "Browser",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

				PageEditor.waitForAutoSave();

				AssertTextEquals(
					key_fieldLabel = "Border Width",
					locator1 = "FormFields#NUMBER_FIELD",
					value1 = "${borderWidth}");
			}

			if (isSet(boxShadow)) {
				Select(
					key_fieldLabel = "Shadow",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${boxShadow}");

				PageEditor.waitForAutoSave();
			}

			PageEditor.configureFragment(
				marginBottom = "${marginBottom}",
				marginLeft = "${marginLeft}",
				marginRight = "${marginRight}",
				marginTop = "${marginTop}",
				paddingBottom = "${paddingBottom}",
				paddingLeft = "${paddingLeft}",
				paddingRight = "${paddingRight}",
				paddingTop = "${paddingTop}");

			if (isSet(opacity)) {
				Type(
					key_fieldLabel = "Opacity",
					locator1 = "FormFields#NUMBER_FIELD",
					value1 = "${opacity}");

				Click(
					key_sidebarButton = "Browser",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

				PageEditor.waitForAutoSave();

				AssertTextEquals(
					key_fieldLabel = "Opacity",
					locator1 = "FormFields#NUMBER_FIELD",
					value1 = "${opacity}");
			}
		}

		if ("${panel}" == "General") {
			Navigator.gotoNavTab(navTab = "General");

			if (isSet(columnCount)) {
				Select(
					key_fieldLabel = "Number of Modules",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${columnCount}");

				PageEditor.waitForAutoSave();
			}

			if ("${spaceBetweenColumns}" == "true") {
				Check.checkNotVisible(
					checkboxName = "Show Gutter",
					locator1 = "Checkbox#ANY_CHECKBOX");

				PageEditor.waitForAutoSave();
			}

			if ("${spaceBetweenColumns}" == "false") {
				Uncheck.uncheckToggleSwitch(
					checkboxName = "Show Gutter",
					locator1 = "Checkbox#ANY_CHECKBOX");

				PageEditor.waitForAutoSave();
			}

			if (isSet(height)) {
				Type(
					key_borderBottom = "Frame",
					key_fieldLabel = "Height",
					locator1 = "TextInput#BORDER_BOTTOM_INPUT_FIELD",
					value1 = "${height}");

				Click(
					key_sidebarButton = "Browser",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

				PageEditor.waitForAutoSave();
			}

			if (isSet(layout)) {
				Select(
					key_fieldLabel = "Layout",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${layout}");

				PageEditor.waitForAutoSave();
			}

			if (isSet(verticalAlignment)) {
				Select(
					key_fieldLabel = "Vertical Alignment",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${verticalAlignment}");

				PageEditor.waitForAutoSave();
			}

			if ("${inverseOrder}" == "true") {
				Check.checkNotVisible(
					checkboxName = "Inverse order",
					locator1 = "Checkbox#ANY_CHECKBOX");

				PageEditor.waitForAutoSave();
			}

			if ("${inverseOrder}" == "false") {
				Uncheck.uncheckToggleSwitch(
					checkboxName = "Inverse order",
					locator1 = "Checkbox#ANY_CHECKBOX");

				PageEditor.waitForAutoSave();
			}
		}
	}

	macro editMenuDisplay {
		var key_fragmentName = "Menu Display";

		PageEditor.clickConfigurableField(fragmentName = "Menu Display");

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		if ("${panel}" == "General") {
			Navigator.gotoNavTab(navTab = "General");

			if (isSet(siteMenus)) {
				Click(
					key_fieldLabel = "Source",
					key_text = "change",
					locator1 = "Icon#ANY_ITEM_SELECTOR");

				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				NavItem.click(navItem = "Site Menus");

				LexiconTable.clickTableEntryColumnLink(
					columnName = "name",
					tableEntry = "${siteMenus}");

				Button.click(button = "Select This Level");

				PageEditor.waitForAutoSave();

				PageEditor.viewItemSelectorText(
					fieldLabel = "Source",
					text = "${siteMenus}");
			}

			if (isSet(displayStyle)) {
				Select(
					key_fieldLabel = "Display Style",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${displayStyle}");

				PageEditor.waitForAutoSave();

				AssertSelectedLabel(
					key_fieldLabel = "Display Style",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${displayStyle}");
			}

			if (isSet(sublevels)) {
				Select(
					key_fieldLabel = "Sublevels",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${sublevels}");

				PageEditor.waitForAutoSave();

				AssertSelectedLabel(
					key_fieldLabel = "Sublevels",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "${sublevels}");
			}
		}
		else if ("${panel}" == "Styles") {
			Navigator.gotoNavTab(navTab = "Styles");

			if (isSet(hoveredItemColor)) {
				PageEditor.selectColorSwatchItem(
					colorSwatchItem = "${hoveredItemColor}",
					fieldLabel = "Hovered Item Color");

				PageEditor.waitForAutoSave();
			}

			if (isSet(selectedItemColor)) {
				PageEditor.selectColorSwatchItem(
					colorSwatchItem = "${selectedItemColor}",
					fieldLabel = "Selected Item Color");

				PageEditor.waitForAutoSave();
			}
		}
	}

	macro expandFragmentCollection {
		PageEditor.gotoTab(tabName = "Fragments and Widgets");

		Navigator.gotoNavTab(navTab = "Fragments");

		AssertVisible(
			key_collectionName = "${collectionName}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL");

		if (IsElementPresent(key_collectionName = "${collectionName}", locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL_COLLAPSED")) {
			AssertClick(
				key_collectionName = "${collectionName}",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL_COLLAPSED",
				value1 = "${collectionName}");
		}

		AssertElementPresent(
			key_collectionName = "${collectionName}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL_EXPANDED");
	}

	macro getCommonStylesClass {
		if (!(isSet(index))) {
			var index = "1";
		}

		var class = selenium.getAttribute("xpath=(//div[@aria-label='${fragmentName}'])[${index}]@class");
		var class = StringUtil.extractFirst("${class}", " page-editor__topper");
		var class = StringUtil.extractLast("${class}", "lfr-layout-structure-item-topper-");
		var commonStylesClass = StringUtil.add("lfr-layout-structure-item-", "${class}", "");

		return "${commonStylesClass}";
	}

	macro getFileSizeOfSelectedImageResolution {
		var key_resolutionLabel = "File Size";

		WaitForElementPresent(locator1 = "PageEditor#IMAGE_RESOLUTION_LABEL");

		var fileSize = selenium.getText("PageEditor#IMAGE_RESOLUTION_LABEL");
		var fileSize = StringUtil.extractFirst("${fileSize}", ".");
		var fileSize = StringUtil.extractDigits("${fileSize}");

		return "${fileSize}";
	}

	macro getWidthOfSelectedImageResolution {
		var key_resolutionLabel = "Width";

		WaitForElementPresent(locator1 = "PageEditor#IMAGE_RESOLUTION_LABEL");

		var width = selenium.getText("PageEditor#IMAGE_RESOLUTION_LABEL");
		var width = StringUtil.extractDigits("${width}");

		return "${width}";
	}

	macro gotoAdvanced {
		PageEditor.clickConfigurableField(
			fragmentName = "${fragmentName}",
			index = "${index}");

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		Navigator.gotoNavTab(navTab = "Advanced");
	}

	macro gotoCommentList {
		Click.pauseClickAt(locator1 = "PageEditor#FRAGMENT_SIDEBAR_BACK");

		AssertTextEquals(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_LIST_TITLE",
			value1 = "Comments");
	}

	macro gotoCommentViaFragment {
		var key_fragmentName = "${fragmentName}";

		if (IsElementNotPresent(locator1 = "Fragment#FRAGMENT_COMMENT_ICON")) {
			PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");
		}

		Click(locator1 = "Fragment#FRAGMENT_COMMENT_ICON");

		if (IsElementNotPresent(locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_SECTION_NAME")) {
			PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");
		}
	}

	macro gotoConfiguration {
		PageEditor.clickConfigurableField(
			fragmentName = "${fragmentName}",
			index = "${index}");

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		AssertElementPresent(
			key_nodeName = "${fragmentName}",
			locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_ACTIVE");

		Navigator.gotoNavTab(navTab = "General");
	}

	macro gotoDuplicate {
		var key_fragmentName = "${fragmentName}";

		PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

		Click.waitForMenuToggleJSClick(locator1 = "Fragment#FRAGMENT_HEADER_ELLIPSIS");

		MenuItem.click(menuItem = "Duplicate");
	}

	macro gotoEditableFieldEdit {
		if (!(isSet(index))) {
			var index = "1";
		}

		PageEditor.clickEditableField(
			className = "${className}",
			contributed = "${contributed}",
			fragmentName = "${fragmentName}",
			id = "${id}",
			index = "${index}");

		if (isSet(className)) {
			var fragmentName = "${className}";
		}
		else {
			var fragmentName = StringUtil.replace("${fragmentName}", " ", "-");
			var fragmentName = StringUtil.lowerCase("${fragmentName}");
		}

		if ("${contributed}" == "false") {
			DoubleClick(locator1 = "Fragment#EDITABLE_FIELD_ANY");
		}
		else {
			DoubleClick(locator1 = "Fragment#CONTRIBUTED_FRAGMENT_TEXT");
		}
	}

	macro gotoEllipsisMenuItemInItemSelector {
		Click(
			key_fieldLabel = "${fieldLabel}",
			key_text = "ellipsis-v",
			locator1 = "Icon#ANY_ITEM_SELECTOR");

		MenuItem.click(menuItem = "${menuItem}");
	}

	macro gotoEllipsisMenuItemInPageContentPanel {
		PageEditor.gotoTab(tabName = "Browser");

		Navigator.gotoNavTab(navTab = "Page Content");

		LexiconEntry.gotoFragmentPageContentEllipsisMenuItem(
			menuItem = "${menuItem}",
			rowEntry = "${itemName}");
	}

	macro gotoSaveAsFragment {
		var key_fragmentName = "${fragmentName}";

		PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

		Click.waitForMenuToggleJSClick(locator1 = "Fragment#FRAGMENT_HEADER_ELLIPSIS");

		MenuItem.click(menuItem = "Save Composition");
	}

	macro gotoSelectPanel {
		PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		Navigator.gotoNavTab(navTab = "General");

		if (IsTextEqual(key_fieldLabel = "Item", locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT", value1 = "")) {
			Click(
				key_fieldLabel = "Item",
				key_text = "plus",
				locator1 = "Icon#ANY_ITEM_SELECTOR");
		}
		else {
			Click(
				key_fieldLabel = "Item",
				key_text = "change",
				locator1 = "Icon#ANY_ITEM_SELECTOR");
		}

		SelectFrame(locator1 = "IFrame#MODAL_BODY");
	}

	macro gotoStyle {
		if (isSet(deviceType) && ("${deviceType}" != "Desktop")) {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#PAGE_EDITOR_GLOBAL_CONTEXT_IFRAME");
		}

		PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

		if (isSet(deviceType) && ("${deviceType}" != "Desktop")) {
			SelectFrame(value1 = "relative=top");
		}

		AssertElementPresent(
			key_nodeName = "${fragmentName}",
			locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_ACTIVE");

		Navigator.gotoNavTab(navTab = "Styles");
	}

	macro gotoTab {
		if (IsElementPresent(locator1 = "ProductMenu#PRODUCT_MENU_OPENED")) {
			Click(
				key_tabName = "${tabName}",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TAB_BUTTON");
		}
		else if (IsElementNotPresent(locator1 = "ProductMenu#TOGGLE")) {
			Click(
				key_tabName = "${tabName}",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TAB_BUTTON");
		}
		else {
			WaitForVisible(locator1 = "Sidebar#PANEL_OPEN");

			if (IsElementNotPresent(key_sidebarButton = "${tabName}", locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE")) {
				Click(
					key_tabName = "${tabName}",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_TAB_BUTTON");
			}
		}
	}

	macro gotoTabsFragmentNavItem {
		var key_navItem = "${navItem}";

		Click.javaScriptClick(
			locator1 = "Fragment#NAV_ITEM_TAB",
			value1 = "${navItem}");

		AssertElementPresent(locator1 = "Fragment#ACTIVE_NAV_ITEM_TAB");
	}

	macro hideFragmentViaHeader {
		var key_fragmentName = "${fragmentName}";

		PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

		Click.waitForMenuToggleJSClick(locator1 = "Fragment#FRAGMENT_HEADER_ELLIPSIS");

		MenuItem.click(menuItem = "Hide Fragment");

		PageEditor.waitForAutoSave();
	}

	macro hideFragmentViaPageStructure {
		if (!(isSet(index))) {
			var index = "1";
		}

		PageEditor.gotoTab(tabName = "Browser");

		Navigator.gotoNavTab(navTab = "Page Elements");

		if (IsElementNotPresent(key_index = "${index}", key_nodeName = "${fragmentName}", locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_ACTIVE_INDEX")) {
			Click(
				key_index = "${index}",
				key_nodeName = "${fragmentName}",
				locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_INDEX");
		}

		Click.clickNoWaitForVisible(
			key_index = "${index}",
			key_nodeName = "${fragmentName}",
			locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_HIDE_INDEX");

		PageEditor.waitForAutoSave();
	}

	macro hideFragmentViaPageStyles {
		PageEditor.gotoConfiguration(fragmentName = "${fragmentName}");

		PageEditor.configureFragment(hideFragment = "true");
	}

	macro moveElementToContainerViaPageStructure {
		Variables.assertDefined(parameterList = "${elementName}");

		PageEditor.gotoTab(tabName = "Browser");

		Navigator.gotoNavTab(navTab = "Page Elements");

		if (!(isSet(index))) {
			var index = "1";
		}

		Click(
			key_nodeName = "Container",
			locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_COLLAPSED");

		if (isSet(composition)) {
			var elementName = "${layoutElementName}";
		}

		if ("${dropTarget}" == "Up") {
			DragAndDrop.javaScriptDragAndDropToUp(
				index = "${index}",
				key_elementName = "${elementName}",
				key_targetElementName = "${targetElementName}",
				locator1 = "Treeview#NODE_DRAGGABLE_ELEMENT",
				locator2 = "Treeview#NODE_DRAGGABLE_TARGET_ELEMENT");
		}
		else {
			DragAndDrop.javaScriptDragAndDropToBottom(
				index = "${index}",
				key_elementName = "${elementName}",
				key_targetElementName = "${targetElementName}",
				locator1 = "Treeview#NODE_DRAGGABLE_ELEMENT",
				locator2 = "Treeview#NODE_DRAGGABLE_TARGET_ELEMENT");
		}

		PageEditor.waitForAutoSave();

		AssertElementPresent(
			key_elementHeader = "//div[@aria-label='${elementName}']",
			key_position = "1",
			locator1 = "PageEditor#CONTAINER_CONTAINER_NESTED_ELEMENT");
	}

	macro openExperienceMenu {
		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");
	}

	macro openNewExperienceEditor {
		PageEditor.openExperienceMenu();

		Click(
			key_text = "New Experience",
			locator1 = "Button#ANY");
	}

	macro openPreviewMode {
		Click(locator1 = "PageEditor#PREVIEW");
	}

	macro prioritizeExperience {
		if (!(isSet(key_index))) {
			var key_index = "1";
		}

		var key_experienceName = "${experienceName}";

		AssertTextEquals(
			locator1 = "PageEditor#EXPERIENCE_LABEL",
			value1 = "Experience");

		AssertClick(
			locator1 = "PageEditor#EXPERIENCE_BUTTON_NAME",
			value1 = "${experienceName}");

		Click(locator1 = "PageEditor#EXPERIENCE_PRIORITIZE_BUTTON");
	}

	macro removeFragment {
		var key_fragmentName = "${fragmentName}";

		PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

		Click.waitForMenuToggleJSClick(locator1 = "Fragment#FRAGMENT_HEADER_ELLIPSIS");

		MenuItem.click(menuItem = "Delete");

		if (!(isSet(duplicateFragment))) {
			PageEditor.viewFragmentNotPresent(fragmentName = "${fragmentName}");
		}

		PageEditor.waitForAutoSave();
	}

	macro removeFragmentViaPageStructure {
		PageEditor.gotoTab(tabName = "Browser");

		Navigator.gotoNavTab(navTab = "Page Elements");

		if (IsElementNotPresent(key_nodeName = "${fragmentName}", locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_ACTIVE")) {
			Click(
				key_nodeName = "${fragmentName}",
				locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE");
		}

		Click.clickNoWaitForVisible(
			key_nodeName = "${fragmentName}",
			locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_DELETE");

		if (!(isSet(duplicateFragment))) {
			PageEditor.viewFragmentNotPresent(fragmentName = "${fragmentName}");
		}

		PageEditor.waitForAutoSave();
	}

	macro reopenResolvedComment {
		AssertNotChecked.assertNotCheckedNotVisible(locator1 = "PageEditor#FRAGMENT_SIDEBAR_SHOW_RESOLVED_COMMENTS_CHECKBOX_UNCHECKED");

		MouseOver(locator1 = "PageEditor#FRAGMENT_SIDEBAR_SHOW_RESOLVED_COMMENTS_LABEL");

		Click(locator1 = "PageEditor#FRAGMENT_SIDEBAR_SHOW_RESOLVED_COMMENTS_LABEL");

		AssertTextEquals(
			key_fragmentComment = "${fragmentComment}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_RESOLVED_COMMENTS_ENTRY",
			value1 = "${fragmentComment}");

		AssertTextEquals(
			key_commentReply = "${commentReply}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_REPLY_RESOLVED_COMMENTS_ENTRY",
			value1 = "${commentReply}");

		AssertElementPresent(locator1 = "Button#REPLY_DISABLED");

		Click.clickNoMouseOver(locator1 = "Button#REOPEN");

		AssertElementPresent(locator1 = "PageEditor#FRAGMENT_SIDEBAR_SHOW_RESOLVED_COMMENTS_CHECKBOX_DISABLED");
	}

	macro replyToComment {
		AssertClick(
			locator1 = "Button#REPLY",
			value1 = "Reply");

		Type(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_REPLY_COMMENTS_EDITOR",
			value1 = "${commentReply}");

		AssertClick(
			locator1 = "Button#REPLY",
			value1 = "Reply");
	}

	macro resizeConfigurationPanel {
		PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

		AssertElementPresent(
			key_nodeName = "${fragmentName}",
			locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_ACTIVE");

		var defaultHeight = selenium.getElementHeight("PageEditor#CONFIGURATION_PANEL_CONFIGURATION");

		echo("### The default height of item configuration panel is ${defaultHeight}");

		DragAndDrop.dragAndDrop(
			locator1 = "PageEditor#CONFIGURATION_PANEL_HANDLE",
			value1 = "${position}");

		Pause(locator1 = "3000");

		var updatedHeight = selenium.getElementHeight("PageEditor#CONFIGURATION_PANEL_CONFIGURATION");

		echo("### The updated height of item configuration panel is ${updatedHeight}");

		TestUtils.assertNotEquals(
			actual = "${updatedHeight}",
			expected = "${defaultHeight}");
	}

	macro resolveComment {
		AssertElementPresent(locator1 = "PageEditor#FRAGMENT_SIDEBAR_SHOW_RESOLVED_COMMENTS_CHECKBOX_DISABLED");

		Click.clickNoMouseOver(locator1 = "Button#RESOLVE");

		AssertTextNotPresent(value1 = "${fragmentComment}");
	}

	macro restoreDefaultHidePropertyForFragment {
		if (!(isSet(index))) {
			var index = "1";
		}

		PageEditor.gotoTab(tabName = "Browser");

		Navigator.gotoNavTab(navTab = "Page Elements");

		Click(
			key_index = "${index}",
			key_nodeName = "${fragmentName}",
			locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_INDEX");

		Navigator.gotoNavTab(navTab = "General");

		Click(locator1 = "Button#RESTORE_DEFAULT");

		PageEditor.waitForAutoSave();
	}

	macro searchFragmentViaSidebar {
		WaitForPageLoad();

		PageEditor.gotoTab(tabName = "Fragments");

		Type(
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_FIELD",
			value1 = "${fragmentName}");
	}

	macro searchInPageContentPanel {
		Navigator.gotoNavTab(navTab = "Page Content");

		Type(
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_SEARCH_FIELD",
			value1 = "${searchTerm}");
	}

	macro selectColorSwatchItem {
		Click(
			key_fieldLabel = "${fieldLabel}",
			locator1 = "Button#COLOR_PICKER");

		Click(
			key_colorSwatchItem = "${colorSwatchItem}",
			locator1 = "Button#COLOR_SWATCH_ITEM");
	}

	macro selectContentFilter {
		AssertVisible(
			key_sidebarButton = "Browser",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

		Click(locator1 = "PageEditor#PAGE_CONTENTS_CONTENT_FILTER_TOGGLE");

		DropdownMenuItem.click(menuItem = "${filter}");

		AssertTextEquals(
			locator1 = "PageEditor#PAGE_CONTENTS_CONTENT_FILTER_TOGGLE",
			value1 = "${filter}");
	}

	macro selectItemToPreviewWithObject {
		Click(locator1 = "PageEditor#PREVIEW_WITH_DROPDOWN_MENU");

		Click(locator1 = "PageEditor#PREVIEW_WITH_OTHER_ITEM");

		SelectFrame(
			key_title = "Select",
			locator1 = "IFrame#MODAL_ANY");

		Click(
			key_objectLabel = "${objectLabel}",
			locator1 = "PageEditor#PREVIEW_WITH_CUSTOM_OBJECT_ITEM");

		IFrame.selectTopFrame();
	}

	macro submitForPublication {
		Button.click(button = "Submit for Publication");

		Alert.viewSuccessMessage();
	}

	macro switchViewport {
		if (isSet(modal)) {
			Click(
				key_deviceType = "${deviceType}",
				locator1 = "Modal#DEVICE_TYPE");
		}
		else {
			Click(
				key_deviceType = "${deviceType}",
				locator1 = "PageEditor#DEVICE_TYPE");
		}

		if ("${deviceType}" == "Desktop") {
			var viewport = "desktop";
		}
		else if ("${deviceType}" == "Tablet") {
			var viewport = "tablet";
		}
		else if ("${deviceType}" == "Landscape Phone") {
			var viewport = "landscapeMobile";
		}
		else if ("${deviceType}" == "Portrait Phone") {
			var viewport = "portraitMobile";
		}

		if (!(isSet(modal))) {
			WaitForVisible(
				key_deviceType = "${viewport}",
				locator1 = "PageEditor#VIEWPORT");
		}
	}

	macro unhideFragmentViaPageStructure {
		if (!(isSet(index))) {
			var index = "1";
		}

		PageEditor.gotoTab(tabName = "Browser");

		Navigator.gotoNavTab(navTab = "Page Elements");

		Click.clickNoWaitForVisible(
			key_index = "${index}",
			key_nodeName = "${fragmentName}",
			locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_HIDE_INDEX");

		PageEditor.waitForAutoSave();
	}

	macro unhideFragmentViaPageStyles {
		PageEditor.gotoTab(tabName = "Browser");

		Navigator.gotoNavTab(navTab = "Page Elements");

		if (IsElementNotPresent(key_nodeName = "${fragmentName}", locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE_ACTIVE")) {
			Click(
				key_nodeName = "${fragmentName}",
				locator1 = "Treeview#PAGE_STRUCTURE_TREE_NODE");
		}

		Navigator.gotoNavTab(navTab = "General");

		PageEditor.configureFragment(hideFragment = "false");
	}

	macro viewCannotAddFragmentToOutsideOfDropZone {
		WaitForPageLoad();

		PageEditor.gotoTab(tabName = "Fragments");

		PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

		DragAndDrop(
			key_collectionName = "${collectionName}",
			key_fragmentName = "${fragmentName}",
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
			locator2 = "PageEditor#OUTSIDE_OF_DROP_ZONE",
			value1 = "");

		PageEditor.viewFragmentNotPresent(fragmentName = "${fragmentName}");
	}

	macro viewCollectionDisplayStyle {
		if (!(isSet(rowNumber))) {
			var rowNumer = "1";
		}

		if (isSet(columnCount)) {
			var i = "0";

			while ("${i}" != "${columnCount}") {
				var columnNumber = ${i} + 1;

				AssertElementPresent(
					key_columnNumber = "${columnNumber}",
					key_position = "${position}",
					key_rowNumber = "${rowNumer}",
					locator1 = "PageEditor#COLLECTION_DISPLAY_COLUMN");
			}

			var columnNumber = ${columnCount} + 1;

			AssertElementNotPresent(
				key_columnNumber = "${columnNumber}",
				key_position = "${position}",
				key_rowNumber = "${rowNumer}",
				locator1 = "PageEditor#COLLECTION_DISPLAY_COLUMN");
		}

		if (isSet(layout)) {
			AssertElementPresent(
				key_layout = "${layout}",
				key_position = "${position}",
				locator1 = "PageEditor#COLLECTION_DISPLAY_CONFIGURATION_LAYOUT");
		}

		if ("${spaceBetweenColumns}" == "true") {
			AssertElementNotPresent(
				key_position = "${position}",
				locator1 = "PageEditor#COLLECTION_DISPLAY_COLUMNS_NO_GUTTER");
		}
		else if ("${spaceBetweenColumns}" == "false") {
			AssertElementPresent(
				key_position = "${position}",
				locator1 = "PageEditor#COLLECTION_DISPLAY_COLUMNS_NO_GUTTER");
		}
	}

	macro viewCollectionItem {
		if (!(isSet(column))) {
			var column = "1";
		}

		if (!(isSet(row))) {
			var row = "1";
		}

		AssertVisible(
			key_colPosition = "${column}",
			key_entryTitle = "${assetTitle}",
			key_fragmentName = "Collection Display",
			key_rowPosition = "${row}",
			locator1 = "PageEditor#COLLECTION_ITEM_TITLE");
	}

	macro viewCollectionNotPresent {
		AssertElementNotPresent(
			key_collectionName = "${collectionName}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL");
	}

	macro viewComment {
		if (isSet(fragmentComment)) {
			if (isSet(fromNotifications)) {
				AssertTextEquals(
					key_fragmentComment = "${fragmentComment}",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_ENTRY_HIGHLIGHTED",
					value1 = "${fragmentComment}");
			}
			else if (isSet(mentionsUserScreenName)) {
				AssertTextEquals(
					key_fragmentComment = "${fragmentComment}",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_ENTRY",
					value1 = "${fragmentComment}@${mentionsUserScreenName}");

				Mentions.viewMentionTagLink(
					mentionsUserFullName = "${mentionsUserFullName}",
					mentionsUserScreenName = "${mentionsUserScreenName}");
			}
			else {
				AssertTextEquals(
					key_fragmentComment = "${fragmentComment}",
					locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_ENTRY",
					value1 = "${fragmentComment}");
			}
		}
		else {
			AssertVisible(
				key_sidebarButton = "Comments",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_TITLE");

			AssertTextEquals(
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_CENTER_TEXT",
				value1 = "There are no comments yet.");

			AssertTextEquals(
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_STATE_TEXT",
				value1 = "Select a fragment to add a comment.");
		}

		if (isSet(key_fragmentName)) {
			AssertElementPresent(
				key_fragmentName = "Rich Text",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_SECTION_NAME");
		}
	}

	macro viewCommentList {
		AssertTextEquals(
			key_fragmentName = "${fragmentName}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_LIST_HEADING",
			value1 = "${fragmentName}");

		AssertTextEquals(
			key_commentCount = "${commentCount}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_LIST_SECONDARY_TEXT",
			value1 = "${commentCount}");

		if (isSet(openComment)) {
			Click(
				key_fragmentName = "${fragmentName}",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENT_LIST_HEADING");
		}
	}

	macro viewCommentReply {
		if (isSet(fromNotifications)) {
			AssertTextEquals(
				key_commentReply = "${commentReply}",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_REPLY_COMMENTS_ENTRY_HIGHLIGHTED",
				value1 = "${commentReply}");
		}
		else {
			AssertTextEquals(
				key_commentReply = "${commentReply}",
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_REPLY_COMMENTS_ENTRY",
				value1 = "${commentReply}");
		}

		AssertTextEquals(
			key_commentReply = "${commentReply}",
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_REPLY_COMMENTS_ENTRY_AUTHOR",
			value1 = "${user}");
	}

	macro viewContainerStyle {
		if (!(isSet(position))) {
			var position = "1";
		}

		if (isSet(alignItems)) {
			AssertElementPresent(
				key_alignItems = "${alignItems}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_ALIGN_ITEMS");
		}

		if (isSet(backgroundColor)) {
			AssertElementPresent(
				key_paletteItem = "${backgroundColor}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_BACKGROUND_COLOR");
		}

		if (isSet(backgroundImage)) {
			AssertElementPresent(
				key_imageName = "${backgroundImage}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_BACKGROUND_IMAGE");
		}

		if (isSet(borderColor)) {
			AssertElementPresent(
				key_paletteItem = "${borderColor}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_BORDER_COLOR");
		}

		if (isSet(borderRadius)) {
			AssertElementPresent(
				key_borderRadius = "${borderRadius}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_BORDER_RADIUS");
		}

		if (isSet(borderWidth)) {
			AssertElementPresent(
				key_borderWidth = "${borderWidth}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_BORDER_WIDTH");
		}

		if (isSet(boxShadow)) {
			AssertElementPresent(
				key_boxShadow = "${boxShadow}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_BOX_SHADOW");
		}

		if (isSet(containerWidth)) {
			if ("${containerWidth}" == "Fixed Width") {
				AssertElementPresent(
					key_position = "${position}",
					locator1 = "PageEditor#CONTAINER_CONFIGURATION_FIXED_WIDTH");

				AssertElementNotPresent(
					key_marginLeft = "",
					key_position = "${position}",
					locator1 = "PageEditor#CONTAINER_CONFIGURATION_MARGIN_LEFT");

				AssertElementNotPresent(
					key_marginRight = "",
					key_position = "${position}",
					locator1 = "PageEditor#CONTAINER_CONFIGURATION_MARGIN_RIGHT");
			}
			else if ("${containerWidth}" == "Fluid") {
				AssertElementNotPresent(
					key_position = "${position}",
					locator1 = "PageEditor#CONTAINER_CONFIGURATION_FIXED_WIDTH");
			}
		}

		if (isSet(contentDisplay)) {
			AssertElementPresent(
				key_contentDisplay = "${contentDisplay}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_CONTENT_DISPLAY");
		}

		if (isSet(justifyContent)) {
			AssertElementPresent(
				key_justifyContent = "${justifyContent}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_JUSTIFY_CONTENT");
		}

		if (isSet(height)) {
			AssertElementPresent(
				key_height = "${height}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_HEIGHT");
		}

		if (isSet(marginBottom)) {
			AssertElementPresent(
				key_marginBottom = "${marginBottom}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_MARGIN_BOTTOM");
		}

		if (isSet(marginLeft)) {
			AssertElementPresent(
				key_marginLeft = "${marginLeft}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_MARGIN_LEFT");
		}

		if (isSet(marginRight)) {
			AssertElementPresent(
				key_marginRight = "${marginRight}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_MARGIN_RIGHT");
		}

		if (isSet(marginTop)) {
			AssertElementPresent(
				key_marginTop = "${marginTop}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_MARGIN_TOP");
		}

		if (isSet(opacity)) {
			AssertElementPresent(
				key_opacity = "${opacity}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_OPACITY");
		}

		if (isSet(paddingBottom)) {
			AssertElementPresent(
				key_paddingBottom = "${paddingBottom}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_PADDING_BOTTOM");
		}

		if (isSet(paddingLeft)) {
			AssertElementPresent(
				key_paddingLeft = "${paddingLeft}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_PADDING_LEFT");
		}

		if (isSet(paddingRight)) {
			AssertElementPresent(
				key_paddingRight = "${paddingRight}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_PADDING_RIGHT");
		}

		if (isSet(paddingTop)) {
			AssertElementPresent(
				key_paddingTop = "${paddingTop}",
				key_position = "${position}",
				locator1 = "PageEditor#CONTAINER_CONFIGURATION_PADDING_TOP");
		}
	}

	macro viewDuplicateFragment {
		AssertElementPresent(
			index = "2",
			key_fragmentName = "${fragmentName}",
			locator1 = "Fragment#FRAGMENT_LABEL");
	}

	macro viewEditorEmpty {
		AssertElementPresent(locator1 = "PageEditor#EMPTY_MESSAGE");
	}

	macro viewElementInsideModule {
		if (!(isSet(position))) {
			var position = "1";
		}

		AssertElementPresent(
			key_columnNumber = "${moduleNumber}",
			key_elementHeader = "//div[@aria-label='${elementName}']",
			key_position = "${position}",
			locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");
	}

	macro viewElementNotPresentInsideModule {
		if (!(isSet(position))) {
			var position = "1";
		}

		AssertElementNotPresent(
			key_columnNumber = "${moduleNumber}",
			key_elementHeader = "//div[@aria-label='${elementName}']",
			key_position = "${position}",
			locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");
	}

	macro viewExperienceActive {
		if (IsElementNotPresent(locator1 = "PageEditor#EXPERIENCE_DROPDOWN")) {
			Click(locator1 = "PageEditor#EXPERIENCE_LABEL");
		}

		AssertElementPresent(
			key_experienceName = "${experienceName}",
			locator1 = "PageEditor#EXPERIENCE_ACTIVE_LABEL");
	}

	macro viewExperiencesNameOrder {
		var index = "0";

		if (IsElementNotPresent(locator1 = "PageEditor#EXPERIENCE_DROPDOWN")) {
			Click(locator1 = "PageEditor#EXPERIENCE_LABEL");
		}

		for (var experienceName : list "${experienceName}") {
			var index = ${index} + 1;

			AssertElementPresent(
				key_experienceName = "${experienceName}",
				key_index = "${index}",
				locator1 = "PageEditor#EXPERIENCE_ORDER_NAMES");
		}
	}

	macro viewFragment {
		if (!(isSet(position))) {
			var position = "1";
		}

		AssertElementPresent(
			index = "${position}",
			key_fragmentName = "${fragmentName}",
			locator1 = "Fragment#FRAGMENT_LABEL");
	}

	macro viewFragmentCommonStyle {
		var commonStylesClass = PageEditor.getCommonStylesClass(
			fragmentName = "${fragmentName}",
			index = "${index}");

		var actualStyleValue = Css.getStyleValue(
			className = "${commonStylesClass}",
			id = "layout-common-styles",
			styleName = "${styleName}");

		if (contains("${actualStyleValue}", "${styleValue}")) {
			echo("PASSED");
		}
		else {
			TestUtils.fail(message = "FAILED: expected '${styleValue}', actual was '${actualStyleValue}'");
		}
	}

	macro viewFragmentEditableImage {
		if ("${contributed}" == "false") {
			AssertVisible(
				key_fragmentClass = "${fragmentClass}",
				key_image = "${imageFileName}",
				locator1 = "Fragment#EDITABLE_FIELD_IMAGE_PROPERTIES");
		}
		else {
			AssertVisible(
				id = "${id}",
				key_image = "${imageFileName}",
				key_imageDescription = "${imageDescription}",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD_IMAGE_PROPERTIES");
		}
	}

	macro viewFragmentEditableText {
		if (!(isSet(position))) {
			var position = "1";
		}

		PageEditor.viewFragment(
			fragmentName = "${fragmentName}",
			index = "${position}");

		if (isSet(className)) {
			var fragmentName = "${className}";
		}
		else {
			var fragmentName = StringUtil.replace("${fragmentName}", " ", "-");
			var fragmentName = StringUtil.lowerCase("${fragmentName}");
		}

		if ("${contributed}" == "false") {
			ContentPages.viewFragmentText(
				contributed = "false",
				fragmentName = "${fragmentName}",
				position = "${position}",
				text = "${editableText}");

			if (isSet(style)) {
				AssertVisible(
					id = "${id}",
					key_position = "${position}",
					key_style = "${style}",
					key_text = "${editableText}",
					locator1 = "Fragment#INLINE_RICH_TEXT_STYLE");
			}
		}
		else {
			ContentPages.viewFragmentText(
				fragmentName = "${fragmentName}",
				id = "${id}",
				position = "${position}",
				text = "${editableText}");

			if (isSet(style)) {
				AssertVisible(
					id = "${id}",
					key_position = "${position}",
					key_style = "${style}",
					key_text = "${editableText}",
					locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_RICH_TEXT_STYLE");
			}
		}
	}

	macro viewFragmentHeaderNotVisible {
		AssertElementNotPresent(
			key_fragmentName = "${fragmentName}",
			locator1 = "Fragment#FRAGMENT_HEADER");
	}

	macro viewFragmentHeaderVisible {
		AssertVisible(
			key_fragmentName = "${fragmentName}",
			locator1 = "Fragment#FRAGMENT_HEADER");
	}

	macro viewFragmentMessageInfo {
		if ("${fragmentName}" == "Collection Display") {
			if (!(isSet(messageInfo))) {
				var messageInfo = "No Collection Selected Yet";
			}

			AssertVisible(
				key_fragmentName = "${fragmentName}",
				key_messageInfo = "${messageInfo}",
				locator1 = "Fragment#NO_COLLECTION_SELECTED_MESSAGE");
		}
		else if ("${fragmentName}" == "Content Display") {
			if (!(isSet(messageInfo))) {
				var messageInfo = "The selected content will be shown here.";
			}

			AssertVisible(
				key_fragmentName = "${fragmentName}",
				key_messageInfo = "${messageInfo}",
				locator1 = "Fragment#MESSAGE_INFO");
		}
		else if ("${fragmentName}" == "Display Page Content") {
			if (!(isSet(messageInfo))) {
				var messageInfo = "The display page content will be shown here.";
			}

			AssertVisible(
				key_fragmentName = "${fragmentName}",
				key_messageInfo = "${messageInfo}",
				locator1 = "Fragment#MESSAGE_INFO");
		}
		else {
			AssertVisible(
				key_fragmentName = "${fragmentName}",
				key_messageInfo = "${messageInfo}",
				locator1 = "Fragment#MESSAGE_INFO");
		}
	}

	macro viewFragmentNotPresent {
		if (!(isSet(position))) {
			var position = "1";
		}

		AssertElementNotPresent(
			index = "${position}",
			key_fragmentName = "${fragmentName}",
			locator1 = "Fragment#FRAGMENT_LABEL");
	}

	macro viewFragmentNotVisible {
		if (!(isSet(position))) {
			var position = "1";
		}

		AssertNotVisible(
			index = "${position}",
			key_fragmentName = "${fragmentName}",
			locator1 = "Fragment#FRAGMENT_LABEL");
	}

	macro viewFragmentOrder {
		AssertElementPresent(
			key_fragmentName = "${fragmentName}",
			key_position = "${position}",
			locator1 = "Fragment#FRAGMENT_POSITION");
	}

	macro viewFragmentStyle {
		if (!(isSet(position))) {
			var position = "1";
		}

		if (isSet(alignment)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_alignment = "${alignment}",
				key_fragmentName = "${fragmentName}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_ALIGNMENT");
		}

		if (isSet(backgroundColor)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_paletteItem = "${backgroundColor}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_BACKGROUND_COLOR");
		}

		if (isSet(borderColor)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_paletteItem = "${borderColor}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_BORDER_COLOR");
		}

		if (isSet(borderRadius)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_borderRadius = "${borderRadius}",
				key_fragmentName = "${fragmentName}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_BORDER_RADIUS");
		}

		if (isSet(bottomSpacing)) {
			AssertElementPresent(
				key_bottomSpacing = "${bottomSpacing}",
				locator1 = "Fragment#BOTTOM_SPACING");
		}

		if (isSet(boxShadow)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_boxShadow = "${boxShadow}",
				key_fragmentName = "${fragmentName}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_BOX_SHADOW");
		}

		if (isSet(headingLevel)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_headingLevel = "${headingLevel}",
				key_position = "${position}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_HEADER");
		}

		if (isSet(height)) {
			AssertElementPresent(
				key_height = "${height}",
				locator1 = "Fragment#SPACER_HEIGHT");
		}

		if (isSet(imageSize)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_imageSize = "${imageSize}",
				locator1 = "Fragment#IMAGE_SIZE");
		}

		if (isSet(marginBottom)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_marginBottom = "${marginBottom}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_MARGIN_BOTTOM");
		}

		if (isSet(marginLeft)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_marginLeft = "${marginLeft}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_MARGIN_LEFT");
		}

		if (isSet(marginRight)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_marginRight = "${marginRight}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_MARGIN_RIGHT");
		}

		if (isSet(marginTop)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_marginTop = "${marginTop}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_MARGIN_TOP");
		}

		if (isSet(paddingBottom)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_paddingBottom = "${paddingBottom}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_PADDING_BOTTOM");
		}

		if (isSet(paddingLeft)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_paddingLeft = "${paddingLeft}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_PADDING_LEFT");
		}

		if (isSet(paddingRight)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_paddingRight = "${paddingRight}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_PADDING_RIGHT");
		}

		if (isSet(paddingTop)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_paddingTop = "${paddingTop}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_PADDING_TOP");
		}

		if (isSet(separatorColor)) {
			AssertElementPresent(
				key_separatorColor = "${separatorColor}",
				locator1 = "Fragment#SEPARATOR_COLOR");
		}

		if (isSet(size)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_size = "${size}",
				locator1 = "Fragment#BUTTON_SIZE");
		}

		if (isSet(textColor)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_position = "${position}",
				key_textColor = "${textColor}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_TEXT_COLOR");
		}

		if (isSet(type)) {
			var fragmentName = StringUtil.lowerCase("${fragmentName}");

			AssertElementPresent(
				key_fragmentName = "${fragmentName}",
				key_type = "${type}",
				locator1 = "Fragment#FRAGMENT_CONFIGURATION_TYPE");
		}
	}

	macro viewGridStyle {
		if (isSet(columnCount)) {
			var i = "0";

			while ("${i}" != "${columnCount}") {
				var columnNumber = ${i} + 1;

				AssertElementPresent(
					key_columnNumber = "${columnNumber}",
					key_position = "${position}",
					locator1 = "PageEditor#GRID_COLUMN");
			}

			var columnNumber = ${columnCount} + 1;

			AssertElementNotPresent(
				key_columnNumber = "${columnNumber}",
				key_position = "${position}",
				locator1 = "PageEditor#GRID_COLUMN");
		}

		if (isSet(inverseOrder)) {
			AssertElementPresent(
				key_position = "${position}",
				locator1 = "PageEditor#GRID_CONFIGURATION_INVERSE_ORDER");
		}

		if (isSet(layout)) {
			AssertElementPresent(
				key_layout = "${layout}",
				key_position = "${position}",
				locator1 = "PageEditor#GRID_CONFIGURATION_LAYOUT");
		}

		if ("${spaceBetweenColumns}" == "true") {
			AssertElementNotPresent(
				key_position = "${position}",
				locator1 = "PageEditor#GRID_CONFIGURATION_COLUMNS_NO_GUTTER");
		}
		else if ("${spaceBetweenColumns}" == "false") {
			AssertElementPresent(
				key_position = "${position}",
				locator1 = "PageEditor#GRID_CONFIGURATION_COLUMNS_NO_GUTTER");
		}

		if ("${verticalAlignment}" == "Top") {
			AssertElementPresent(
				key_position = "${position}",
				key_verticalAlignment = "",
				locator1 = "PageEditor#GRID_CONFIGURATION_VERTICAL_ALIGNMENT");
		}
		else if ("${verticalAlignment}" == "Middle") {
			AssertElementPresent(
				key_position = "${position}",
				key_verticalAlignment = "middle",
				locator1 = "PageEditor#GRID_CONFIGURATION_VERTICAL_ALIGNMENT");
		}
		else if ("${verticalAlignment}" == "Bottom") {
			AssertElementPresent(
				key_position = "${position}",
				key_verticalAlignment = "bottom",
				locator1 = "PageEditor#GRID_CONFIGURATION_VERTICAL_ALIGNMENT");
		}
	}

	macro viewItemSelectorText {
		AssertTextEquals(
			key_fieldLabel = "${fieldLabel}",
			locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT",
			value1 = "${text}");
	}

	macro viewMentionPopupDisapper {
		AssertElementPresent(locator1 = "Mentions#MENTION_POPUP_DISAPPEAR");
	}

	macro viewMentionsDisplayOption {
		Click.clickAt(locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS");

		Type.sendKeys(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COMMENTS",
			value1 = "${fragmentComment}");

		if (isSet(noMentionsUserScreenName)) {
			AssertElementNotPresent(
				key_mentionsUserScreenName = "${noMentionsUserScreenName}",
				locator1 = "Mentions#MENTIONS_USER_DISPLAY_OPTION");
		}

		AssertElementPresent(
			key_mentionsUserScreenName = "${mentionsUserScreenName}",
			locator1 = "Mentions#MENTIONS_USER_DISPLAY_OPTION");

		Click.clickNoMouseOver(
			key_mentionsUserScreenName = "${mentionsUserScreenName}",
			locator1 = "Mentions#MENTIONS_USER_DISPLAY_OPTION");
	}

	macro viewNotPresentInPermissionsIframeBody {
		Click.clickAtNotVisible(locator1 = "Portlet#OPTIONS_ICON");

		Click(
			key_menuItem = "Permissions",
			locator1 = "MenuItem#ANY_MENU_ITEM");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertElementNotPresent(locator1 = "//body[.='${elementValue}']");
	}

	macro viewNumberOfCollectionItemsInCollectionPage {
		AssertTextEquals(
			locator1 = "ControlMenu#VIEW_COLLECTION_ITEMS_BUTTON",
			value1 = "${numberOfItems}");
	}

	macro waitForAutoSave {
		WaitForVisible(locator1 = "PageEditor#AUTOSAVE_MESSAGE");
	}

}