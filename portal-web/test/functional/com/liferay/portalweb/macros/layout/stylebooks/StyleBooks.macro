definition {

	macro clickManagementBar {
		Click(locator1 = "StyleBookEditor#MANAGEMENT_BAR");
	}

	macro clickPublish {
		Button.click(button = "Publish");

		if (IsTextEqual(locator1 = "Modal#HEADER", value1 = "Style Errors Detected")) {
			AssertTextEquals(
				locator1 = "Modal#BODY",
				value1 = "Some of the fields have invalid values. If you continue publishing, the latest valid values will display.");

			if ("${publishing}" == "Cancel") {
				Click(
					key_text = "Cancel",
					locator1 = "Modal#MODAL_FOOTER_BUTTON");
			}
			else {
				Click(
					key_text = "Continue",
					locator1 = "Modal#MODAL_FOOTER_BUTTON");

				AssertTextEquals(
					locator1 = "Modal#BODY",
					value1 = "Once published, these changes will affect all instances of the site using these properties. Do you want to publish now?");

				Click(
					key_text = "Continue",
					locator1 = "Modal#MODAL_FOOTER_BUTTON");
			}
		}
		else {
			AssertTextEquals(
				locator1 = "Modal#BODY",
				value1 = "Once published, these changes will affect all instances of the site using these properties. Do you want to publish now?");

			Click(
				key_text = "Continue",
				locator1 = "Modal#MODAL_FOOTER_BUTTON");
		}

		Alert.viewSuccessMessage();
	}

	macro expandSection {
		if (IsElementPresent(key_sectionName = "${sectionName}", locator1 = "StyleBookEditor#STYLE_BOOK_EDITOR_SIDEBAR_COLLAPSED")) {
			AssertClick(
				key_sectionName = "${sectionName}",
				locator1 = "StyleBookEditor#STYLE_BOOK_EDITOR_SIDEBAR_COLLAPSED",
				value1 = "${sectionName}");
		}

		AssertElementPresent(
			key_sectionName = "${sectionName}",
			locator1 = "StyleBookEditor#STYLE_BOOK_EDITOR_SIDEBAR_EXPANDED");
	}

	macro linkValueFromStyleBook {
		Click.clickNoWaitForVisible(
			key_fieldLabel = "${fieldLabel}",
			key_text = "theme",
			locator1 = "Icon#ANY_ITEM_SELECTOR");

		Click(
			key_colorSwatchItem = "${colorSwatchItem}",
			locator1 = "Button#COLOR_SWATCH_ITEM");

		StyleBooks.waitForAutoSave();

		AssertElementPresent(
			key_fieldLabel = "${fieldLabel}",
			key_text = "chain-broken",
			locator1 = "Icon#ANY_ITEM_SELECTOR");
	}

	macro selectForm {
		Click(locator1 = "StyleBookEditor#FORM_CONTROL_SELECT_BUTTON");

		MenuItem.click(menuItem = "${formName}");
	}

	macro selectPreviewItem {
		Click(
			index = "2",
			locator1 = "StyleBookEditor#PREVIEW_SELECTOR");

		if ((IsElementNotPresent(key_menuItem = "${previewItem}", locator1 = "MenuItem#ANY_MENU_ITEM")) && (IsElementPresent(key_text = "More", locator1 = "Button#ANY"))) {
			AssertElementPresent(
				key_caption = "${caption}",
				locator1 = "Dropdown#CAPTION");

			WaitForLiferayEvent.initializeLiferayEventLog();

			Button.clickMore();

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			if (isSet(scope)) {
				NavItem.click(navItem = "${scope}");
			}

			LexiconCard.clickCard(card = "${previewItem}");

			SelectFrameTop();
		}
		else {
			MenuItem.click(menuItem = "${previewItem}");
		}
	}

	macro selectPreviewType {
		Click(
			index = "1",
			locator1 = "StyleBookEditor#PREVIEW_SELECTOR");

		MenuItem.click(menuItem = "${previewType}");
	}

	macro selectStyleBook {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconCard.clickCardTitle(card = "${styleBookName}");

		AssertElementPresent(
			key_card = "${styleBookName}",
			locator1 = "Card#CARD_SELECTED");

		SelectFrameTop();

		Button.clickDone();
	}

	macro selectStyleBookViaPageDesignOptions {
		Navigator.gotoNavTab(navTab = "Style Book");

		Click.waitForMenuToggleJSClick(
			key_card = "${styleBookName}",
			locator1 = "Card#CARD_TYPE_ASSET");

		AssertElementPresent(
			key_card = "${styleBookName}",
			locator1 = "Card#CARD_SELECTED");
	}

	macro viewCurrentPreviewItem {
		AssertTextEquals(
			index = "2",
			locator1 = "StyleBookEditor#PREVIEW_SELECTOR",
			value1 = "${previewItem}");
	}

	macro viewCurrentPreviewType {
		AssertTextEquals(
			index = "1",
			locator1 = "StyleBookEditor#PREVIEW_SELECTOR",
			value1 = "${previewType}");
	}

	macro waitForAutoSave {
		Pause(locator1 = "1000");

		AssertVisible(locator1 = "StyleBookEditor#DRAFT_SAVED_MESSAGE");
	}

}