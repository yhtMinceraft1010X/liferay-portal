definition {

	macro assertAlternateURL {
		var html = '''<link data-senna-track="temporary" href="''';

		if ("${locale}" == "zh") {
			var zhAlternate = '''" hreflang="zh-CN" rel="alternate">''';
			var pageSource = StringUtil.add("${html}", "${portalURL}/zh/web/guest${zhAlternate}", "");
		}
		else if ("${locale}" == "es") {
			var esAlternate = '''" hreflang="es-ES" rel="alternate">''';
			var pageSource = StringUtil.add("${html}", "${portalURL}/es/web/guest${esAlternate}", "");
		}

		AssertHTMLSourceTextPresent(value1 = "${pageSource}");
	}

	macro assertCanonicalURL {
		var html = '''<link data-senna-track="temporary" href="''';

		var html2 = '''" rel="canonical">''';

		if (isSet(customCanonicalURL)) {
			var portalURL = "${customCanonicalURL}";
		}
		else if (isSet(locale)) {
			var portalURL = "${portalURL}/${locale}/web/guest";
		}
		else {
			var portalURL = "${portalURL}/web/guest";
		}

		if (isSet(pageName)) {
			var pageName = StringUtil.lowerCase("${pageName}");
			var pageNameURL = StringUtil.replace("${pageName}", " ", "-");
			var pageSource = StringUtil.add("${html}", "${portalURL}/${pageNameURL}${html2}", "");
		}
		else {
			var pageSource = StringUtil.add("${html}", "${portalURL}${html2}", "");
		}

		AssertHTMLSourceTextPresent(value1 = "${pageSource}");
	}

	macro assertDefaultAlternateURL {
		var html = '''<link data-senna-track="temporary" href="''';

		var html2 = '''" hreflang="x-default" rel="alternate">''';
		var pageSource = StringUtil.add("${html}", "${portalURL}${html2}", "");

		AssertHTMLSourceTextPresent(value1 = "${pageSource}");
	}

	macro assertNodePortPG {
		var key_nodePort = "${nodePort}";

		AssertTextEquals.assertPartialText(
			locator1 = "Home#NODE_NAME",
			value1 = "${nodePort}");
	}

	macro changeSinglePageTheme {
		ContentPages.gotoPageEditor();

		PageEditor.gotoTab(tabName = "Page Design Options");

		Click(locator1 = "PageEditor#MORE_LINK");

		Theme.configureLookAndFeelSpecificLook();

		Click(
			key_text = "Change Current Theme",
			locator1 = "Button#ANY");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconCard.viewCardTitle(card = "${themeName}");

		LexiconCard.clickCardTitle(card = "${themeName}");

		SelectFrameTop(value1 = "relative=top");

		PortletEntry.save();
	}

	macro clearFiltersInAppliedFilters {
		Click(
			button = "Clear Filters",
			locator1 = "PageEditor#APPLIED_FILTERS_INNER_BUTTON");

		AssertElementNotPresent(locator1 = "PageEditor#APPLIED_FILTERS_FILTER_LIST_PLACEHOLDER");
	}

	macro getAuthTokenFromHtmlSource {
		var javaScript = '''
		var authToken = Liferay.authToken;

		return authToken;
		''';
		var authToken = selenium.getEval("${javaScript}");

		echo("## * Auth Token: ${authToken}");

		return "${authToken}";
	}

	macro getPlidFromHtmlSource {
		var javaScript = '''
		var plid = Liferay.ThemeDisplay.getPlid();

		return plid;
		''';
		var plid = selenium.getEval("${javaScript}");

		echo("## * p_l_id: ${plid}");

		return "${plid}";
	}

	macro getTextCountFromHtmlSource {
		var pageSource = selenium.getHtmlSource();

		echo("## * Page Source: ${pageSource}");

		return "${pageSource}";

		var count = StringUtil.count("${pageSource}", "${text}");

		echo("## * Count: ${count}");

		return "${count}";
	}

	macro gotoChildPagePG {
		MouseOver.javaScriptMouseOver(
			key_pageName = "${pageName}",
			locator1 = "NavigationMenusWidget#CHILD_TOGGLE");

		Click(
			key_childPageName = "${childPageName}",
			locator1 = "Home#PAGE_CHILD_PAGE");
	}

	macro gotoCollectionEntryEllipsisItem {
		LexiconTable.clickEllipsisItem(
			item = "${item}",
			tableEntry = "${tableEntry}");
	}

	macro gotoPagePanelPortlet {
		var key_portletName = "${portletName}";

		AssertClick(
			locator1 = "Panel#MENU_ITEM",
			value1 = "${portletName}");
	}

	macro localizedPG {
		Click(
			key_pageLocale = "${pageLocale}",
			locator1 = "Home#PORTAL_LOCALIZATION_DEFAULT_LANGUAGE_MESSAGE");
	}

	macro openURLLocale {
		Navigator.openSpecificURL(url = "${localizationPageURL}");

		AssertLocation(value1 = "${localizationPageURL}");
	}

	macro searchInCollectionFilter {
		if (!(isSet(index))) {
			var index = "1";
		}

		Type(
			index = "${index}",
			locator1 = "PageEditor#COLLECTION_FILTER_SEARCH_FIELD",
			value1 = "${searchTerm}");

		KeyPress(
			index = "${index}",
			locator1 = "PageEditor#COLLECTION_FILTER_SEARCH_FIELD",
			value1 = "\RETURN");
	}

	macro selectFilterInCollectionFilter {
		if (isSet(columnNumber)) {
			Click.clickNoWaitForVisible(
				key_columnNumber = "${columnNumber}",
				key_elementHeader = "//label[normalize-space(text())='${title}']//following-sibling::div//button[contains(@class,'dropdown-toggle')]",
				key_position = "1",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");
		}
		else {
			Click(
				key_title = "${title}",
				locator1 = "PageEditor#COLLECTION_FILTER_DROPDOWN_TOGGLE");
		}

		if (isSet(searchTerm)) {
			Type(
				locator1 = "MenuItem#SEARCH_FIELD",
				value1 = "${searchTerm}");
		}

		if (isSet(multipleSelection)) {
			for (var categoryName : list "${categoryNameList}") {
				Check.checkNotVisible(
					key_checkboxName = "${categoryName}",
					locator1 = "MenuItem#ANY_CHECKBOX");

				Pause(locator1 = "3000");

				AssertChecked.assertCheckedNotVisible(
					key_checkboxName = "${categoryName}",
					locator1 = "MenuItem#ANY_CHECKBOX");
			}

			DropdownMenuItem.click(menuItem = "Apply");
		}
		else {
			Click.clickAtNotVisible(
				key_radioName = "${filterName}",
				locator1 = "MenuItem#ANY_RADIO");
		}

		if (isSet(columnNumber)) {
			AssertTextEquals(
				key_columnNumber = "${columnNumber}",
				key_elementHeader = "//label[normalize-space(text())='${title}']//following-sibling::div//button[contains(@class,'dropdown-toggle')]",
				key_position = "1",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT",
				value1 = "${selectedName}");
		}
		else {
			AssertTextEquals(
				key_title = "${title}",
				locator1 = "PageEditor#COLLECTION_FILTER_DROPDOWN_TOGGLE",
				value1 = "${selectedName}");
		}
	}

	macro viewChildPageDropdown {
		ClickNoError(locator1 = "Home#${viewChildPageDropdown}");

		if (isSet(javaScriptPage)) {
			AssertConfirm.waitForConfirmation(value1 = "${javaScriptPage}");
		}

		Click.clickAtNotVisible(locator1 = "//div[@id='navigationCollapse']");

		WaitForElementPresent(locator1 = "//script[contains(@src,'/o/frontend-js-aui-web/liferay/menu_toggle.js')]");

		MouseOver(locator1 = "Home#PAGE_2");

		var key_childPageName = "${childPageName}";

		AssertTextEquals(
			locator1 = "Home#PAGE_CHILD_PAGE",
			value1 = "${childPageName}");
	}

	macro viewCollectionItem {
		if (isSet(key_rowNumber)) {
			AssertTextEquals.assertPartialText(
				locator1 = "ContentRow#ENTRY_CONTENT_ROW_NUMBER",
				value1 = "${itemName}");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "ContentRow#ENTRY_CONTENT_ROW_1",
				value1 = "${itemName}");
		}
	}

	macro viewCurrentPage {
		AssertVisible(
			key_pageName = "${pageName}",
			locator1 = "Home#PAGE_ACTIVE");
	}

	macro viewCustomLogoPG {
		AssertElementPresent(locator1 = "Home#CUSTOM_LOGO");

		AssertElementNotPresent(locator1 = "Home#DEFAULT_LOGO");
	}

	macro viewDefaultLogoPG {
		AssertElementPresent(locator1 = "Home#DEFAULT_LOGO");

		AssertElementNotPresent(locator1 = "Home#CUSTOM_LOGO");
	}

	macro viewDefaultSiteTemplatePagesPG {
		Click(locator1 = "Home#PAGE_NAVIGATION_BAR");

		var key_pageName = "${pageName}";

		AssertTextEquals(
			locator1 = "Home#PAGE_TEMPLATE_1",
			value1 = "${pageName}");

		AssertVisible(
			key_siteName = "${siteName}",
			locator1 = "NavBar#GO_TO_HOME_PAGE_LINK");
	}

	macro viewInactiveRequestMessage {
		AssertTextEquals(
			key_resource = "${resource}",
			locator1 = "Home#STATUS_MESSAGE",
			value1 = "This ${resource} is inactive. Please contact the administrator.");
	}

	macro viewLayoutLogoPG {
		if ("${assertLayoutLogoPresent}" == "true") {
			AssertElementPresent(locator1 = "Home#LAYOUT_LOGO");
		}
		else {
			AssertElementNotPresent(locator1 = "Home#LAYOUT_LOGO");
		}
	}

	macro viewNoPG {
		var key_pageName = "${pageName}";

		AssertElementNotPresent(locator1 = "Home#PAGE");
	}

	macro viewPageLockCheck {
		Click(locator1 = "ControlMenu#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#CUSTOMIZED_PAGE_INFO",
			value1 = "This page is linked to a site template which does not allow modifications to it.");
	}

	macro viewPanelPortletListPG {
		var key_componentName = "${componentName}";

		AssertTextEquals(
			locator1 = "Panel#PANEL_TITLE",
			value1 = "${componentName}");

		var key_pageName = "${pageName}";

		AssertTextEquals(
			locator1 = "Panel#PANEL_PAGE_TITLE",
			value1 = "${pageName}");

		AssertTextEquals(
			locator1 = "Panel#PANEL_PAGE_DEFAULT_INFORMATION",
			value1 = "Please select a tool from the left menu.");

		for (var portletName : list "${portletNameList}") {
			var key_portletName = "${portletName}";

			AssertTextEquals(
				locator1 = "Panel#MENU_ITEM",
				value1 = "${portletName}");
		}
	}

	macro viewPreview {
		if (isSet(key_imageName)) {
			AssertVisible(locator1 = "PagesAdmin#PREVIEW_IMAGE");
		}

		AssertTextEquals(
			locator1 = "PagesAdmin#PREVIEW_TITLE",
			value1 = "${htmlTitle}");

		var pageNameURL = StringUtil.lowerCase("${pageName}");
		var pageNameURL = StringUtil.replace("${pageNameURL}", " ", "-");
		var url = "${portalURL}/web/guest/${pageNameURL}";

		if (isSet(siteNameURL)) {
			if (isSet(pageName)) {
				var url = "${portalURL}/web/${siteNameURL}/${pageNameURL}";
			}
			else {
				var url = "${portalURL}/web/${siteNameURL}";
			}
		}

		if (isSet(openGraph)) {
			var url = StringUtil.upperCase("${url}");
		}

		if (isSet(locale)) {
			var languageName = StringUtil.extractFirst("${locale}", "-");

			if (isSet(openGraph)) {
				var languageName = StringUtil.upperCase("${languageName}");
				var portalURL = StringUtil.upperCase("${portalURL}");
			}

			var url = StringUtil.replace("${url}", "${portalURL}", "${portalURL}/${languageName}");
		}

		AssertTextEquals(
			locator1 = "PagesAdmin#PREVIEW_URL",
			value1 = "${url}");

		if (isSet(description)) {
			AssertTextEquals(
				locator1 = "PagesAdmin#PREVIEW_DESCRIPTION",
				value1 = "${description}");
		}

		if (isSet(truncatedHtmlTitle)) {
			ProductMenuHelper.closeProductMenu();

			takeScreenshot();

			if (isSet(openGraph)) {
				ScrollWebElementIntoView(locator1 = "Button#SAVE");

				SikuliAssertElementPresent(locator1 = "PagesAdmin#PREVIEW_TITLE_ELLIPSES_OG");
			}
			else {
				ScrollWebElementIntoView(locator1 = "//label[contains(.,'Change Frequency')]");

				SikuliAssertElementPresent(locator1 = "PagesAdmin#PREVIEW_TITLE_ELLIPSES");
			}
		}

		if (isSet(truncatedURL)) {
			if (isSet(openGraph)) {
				SikuliAssertElementPresent(locator1 = "PagesAdmin#PREVIEW_URL_ELLIPSES_OG");
			}
			else {
				ScrollWebElementIntoView(locator1 = "//label[contains(.,'Change Frequency')]");

				ProductMenuHelper.closeProductMenu();

				SikuliAssertElementPresent(locator1 = "PagesAdmin#PREVIEW_URL_ELLIPSES");
			}
		}
	}

	macro viewRTLLayout {
		AssertCssValue(
			locator1 = "Home#SITE_NAME",
			locator2 = "direction",
			value1 = "rtl");

		AssertCssValue(
			locator1 = "ProductMenu#PRODUCT_MENU_OPENED",
			locator2 = "text-align",
			value1 = "right");

		AssertCssValue(
			locator1 = "ProductMenu#PRODUCT_MENU_OPENED",
			locator2 = "right",
			value1 = "0px");

		var sideNavWidth = Css.getCssValue(
			attribute = "width",
			element = "//div[contains(@class,'product-menu-open')]");

		AssertCssValue(
			locator1 = "Home#SITE_WRAPPER",
			locator2 = "padding-right",
			value1 = "${sideNavWidth}");
	}

	macro viewSiteNameTranslationsPG {
		var list1 = ListUtil.newListFromString("${localeList}");
		var list2 = ListUtil.newListFromString("${siteNameList}");
		var list3 = ListUtil.newListFromString("${textIconList}");
		var size = ListUtil.size("${list1}");
		var i = "0";

		while ("${i}" != "${size}") {
			var locale = ListUtil.get("${list1}", "${i}");
			var siteName = ListUtil.get("${list2}", "${i}");
			var textIcon = ListUtil.get("${list3}", "${i}");

			LanguagePortlet.selectLanguagePG(
				locale = "${locale}",
				textIcon = "${textIcon}");

			AssertTextEquals(
				locator1 = "Home#SITE_NAME",
				value1 = "${siteName}");

			var i = ${i} + 1;
			var i = StringUtil.valueOf("${i}");
		}
	}

	macro viewSpecificPG {
		for (var pageName : list "${pageNameList}") {
			var key_pageName = "${pageName}";

			AssertTextEquals(
				locator1 = "Home#PAGE",
				value1 = "${pageName}");
		}
	}

	macro viewTranslationsPG {
		Navigator.openSpecificURL(url = "${sitePageURL}");

		AssertLocation(value1 = "${sitePageURL}");

		Alert.viewLocalizationMessage(
			defaultLanguageLocalizationMessage = "${defaultLanguageLocalizationMessage}",
			key_pageLocale = "${defaultLanguageLocalizationMessage}",
			preferredLanguageLocalizationMessage = "${preferredLanguageLocalizationMessage}",
			translationLanguageLocalizationMessage = "${translationLanguageLocalizationMessage}");
	}

	macro viewURLLocale {
		if (isSet(localizationOption)) {
			AssertClick(
				key_pageLocale = "${localizationOption}",
				locator1 = "Home#PORTAL_LOCALIZATION_DEFAULT_LANGUAGE_MESSAGE",
				value1 = "${localizationOption}");
		}

		AssertLocation(value1 = "${localizationPageURL}");
	}

	macro viewWithWorkflowPG {
		Pause(locator1 = "5000");

		if ("${workflowStatus}" == "Ready for Publication") {
			AssertElementPresent(locator1 = "Staging#STAGING_MENU_READY_FOR_PUBLICATION");
		}
		else {
			AssertTextEquals(
				locator1 = "Message#WORKFLOW_STATUS",
				value1 = "${workflowStatus}");
		}

		if ("${livePage}" == "true") {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Staging#LIVE_BUTTON",
				value1 = "Live");

			var key_pageName = "${pageName}";

			AssertElementNotPresent(locator1 = "Home#PAGE");
		}
	}

}