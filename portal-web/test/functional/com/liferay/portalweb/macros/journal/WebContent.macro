definition {

	macro addArticleCP {
		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		PortletEntry.publish();
	}

	macro addCP {
		AssertVisible(locator1 = "WCEditWebContent#SIDEBAR");

		if (isSet(webContentTitle)) {
			PortletEntry.inputTitle(title = "${webContentTitle}");
		}

		if (isSet(webContentContent)) {
			if (isSet(source)) {
				CKEditor.addSourceContent(content = "${webContentContent}");
			}
			else {
				CKEditor.addContentInWebContent(
					content = "${webContentContent}",
					fieldLabel = "content");
			}
		}

		if (isSet(webContentDescription)) {
			CKEditor.addContentInWebContent(
				content = "${webContentDescription}",
				fieldLabel = "Description");
		}

		if (isSet(embedImage)) {
			var key_imageFileName = "${imageFileName}";

			ItemSelector.gotoItemSelectorViaCKEditor();

			SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

			AssertClick(
				key_breadcrumbName = "Sites and Libraries",
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
				value1 = "Sites and Libraries");

			AssertClick(
				key_siteName = "${siteName}",
				locator1 = "ItemSelector#SITE_SELECTOR",
				value1 = "${siteName}");

			if (isSet(folderName)) {
				LexiconCard.clickCard(card = "${folderName}");
			}

			if (isSet(pendingEntry)) {
				AssertElementNotPresent(locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");
			}
			else {
				Click(locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");
			}
		}

		if (isSet(embedVideo)) {
			WaitForLiferayEvent.initializeLiferayEventLog();

			Click.pauseClickAt(locator1 = "CKEditor#TOOLBAR_VIDEO_BUTTON");

			if ("${navTab}" == "Documents and Media") {
				ItemSelector.addVideoFromDM(
					depotName = "${depotName}",
					navTab = "${navTab}",
					videoShortcutTitle = "${videoShortcutTitle}");
			}
			else if (isSet(videoURL)) {
				ItemSelector.addVideo(
					extractedVideoShortcutTitle = "${extractedVideoShortcutTitle}",
					videoShortcutDescription = "${videoShortcutDescription}",
					videoShortcutPreview = "${videoShortcutPreview}",
					videoShortcutTitle = "${videoShortcutTitle}",
					videoURL = "${videoURL}");
			}
			else {
				ItemSelector.addVideoFromURL(
					navTab = "${navTab}",
					videoSourceURL = "${embedVideo}");
			}
		}

		if (isSet(viewableBy)) {
			Panel.expandPanel(panel = "Permissions");

			Select(
				locator1 = "Select#PERMISSIONS",
				value1 = "${viewableBy}");
		}

		if (isSet(webContentId)) {
			Uncheck(locator1 = "WCEditWebContent#AUTOGENERATEID");

			Type(
				locator1 = "WCEditWebContent#WEB_CONTENT_ID",
				value1 = "${webContentId}");
		}
	}

	macro addDraft {
		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		Button.clickSaveAsDraft();

		Alert.viewSuccessMessage();
	}

	macro addDraftPGViaAP {
		AssetPublisherPortlet.addAsset(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		WebContent.saveAsDraftViaAP();
	}

	macro addExistingRelatedAssetCP {
		var key_webContentTitle = "${webContentTitle}";

		RelatedAssets.selectAsset(
			assetTitle = "${assetTitle}",
			assetType = "${assetType}",
			scopeSite = "${scopeSite}");

		Pause(locator1 = "3000");

		SelectFrame(value1 = "relative=top");

		var key_assetTitle = "${assetTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_TABLE_TYPE",
			value1 = "${assetType}");

		AssertTextEquals.assertPartialText(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_TABLE_TITLE",
			value1 = "${assetTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_TABLE_SCOPE",
			value1 = "${siteName}");

		AssertElementPresent(locator1 = "AssetRelatedAssets#RELATED_ASSETS_TABLE_REMOVE_LINK");

		PortletEntry.publish();
	}

	macro addExpirationDateCP {
		Panel.expandPanel(panel = "Schedule");

		AssertChecked(
			locator1 = "Checkbox#NEVER_EXPIRE",
			value1 = "Never Expire");

		Uncheck(
			locator1 = "Checkbox#NEVER_EXPIRE",
			value1 = "Never Expire");

		Type.clickAtType(
			locator1 = "TextInput#EXPIRATION_DATE",
			value1 = "${expirationDate}");
	}

	macro addFailWithoutRequiredCategoryAssetTypeCP {
		PortletEntry.inputTitle(title = "Web Content Title");

		CKEditor.addContentInWebContent(
			content = "Web Content Content",
			fieldLabel = "content");

		AssertClick(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		AssertElementPresent(locator1 = "Icon#ASTERISK");

		Alert.viewRequestFailedToComplete();

		Panel.expandPanel(panel = "Categorization");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_1",
			value1 = "Please select at least one category for ${vocabularyName}.");
	}

	macro addFeaturedImageFromComputer {
		Panel.expandPanel(panel = "Featured Image");

		Select(
			locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_TYPE",
			value1 = "From Your Computer");

		UploadCommonFile(
			locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_INPUT",
			value1 = "${uploadFileName}");
	}

	macro addFeaturedImageFromURL {
		Panel.expandPanel(panel = "Featured Image");

		Select(
			locator1 = "WCEditWebContent#SELECT_FEATURED_IMAGE_TYPE",
			value1 = "From URL");

		Type(
			locator1 = "WCEditWebContent#FEATURED_IMAGE_URL_INPUT",
			value1 = "${imageSourceURL}");
	}

	macro addMultipleArticlesCP {
		var articleCount = ${articleCount} + 1;
		var count = "1";

		while ("${count}" != "${articleCount}") {
			WebContent.addArticleCP(
				webContentContent = "WC Content ${count}",
				webContentTitle = "WC Title ${count}");

			var count = ${count} + 1;
		}
	}

	macro addNullCP {
		AssertElementNotPresent(locator1 = "TextInput#REQUIRED_ALERT");

		if (isSet(webContentContent)) {
			CKEditor.addContentInWebContent(
				content = "${webContentContent}",
				fieldLabel = "content");
		}

		AssertClick(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		AssertElementPresent(locator1 = "TextInput#REQUIRED_ALERT");

		AssertTextPresent(value1 = "Please enter a valid title for the default language: en-US");
	}

	macro addPGViaAP {
		AssetPublisherPortlet.addAsset(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		AssertClickNoError(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		Pause(locator1 = "5000");

		var key_assetTitle = "${webContentTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${webContentTitle}");

		if (isSet(viewAllContent)) {
			Click(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = "${webContentTitle}");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${webContentContent}");
	}

	macro addPGViaAPWithoutAsserts {
		AssetPublisherPortlet.addAsset(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		AssertClickNoError(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		Pause(locator1 = "5000");
	}

	macro addPriority {
		Panel.expandPanel(panel = "Categorization");

		Type(
			locator1 = "WC#PRIORITY",
			value1 = "${priority}");
	}

	macro addViaCKEditor {
		AssertVisible(locator1 = "WCEditWebContent#SIDEBAR");

		PortletEntry.inputTitle(title = "${webContentTitle}");

		CKEditor.addContentInWebContent(
			content = "${webContentContent}",
			fieldLabel = "content");
	}

	macro addWithCategoryCP {
		for (var key_panel : list "Basic Information,Default Template,Display Page Template,Featured Image ") {
			if ((IsElementPresent(locator1 = "Panel#PANEL_EXPANDED")) && (IsVisible(locator1 = "Panel#PANEL_EXPANDED"))) {
				AssertClick(
					locator1 = "Panel#PANEL_EXPANDED",
					value1 = "${key_panel}");
			}
		}

		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		WebContent.selectCategory(
			categoryName = "${categoryName}",
			userSegmentDetailTitle = "${userSegmentDetailTitle}",
			vocabularyName = "${vocabularyName}");

		PortletEntry.publish();
	}

	macro addWithDocumentCP {
		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		ItemSelector.gotoItemSelectorViaCKEditor();

		SelectFrame(locator1 = "IFrame#METADATA_SETS_IFRAME");

		var key_imageFileName = "${dmDocumentTitle}";
		var key_imageFileName = StringUtil.replace("${dmDocumentTitle}", " ", "+");

		Pause(locator1 = "1000");

		if (isSet(siteName)) {
			AssertClick(
				key_breadcrumbName = "Sites and Libraries",
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
				value1 = "Sites and Libraries");

			AssertClick(
				key_siteName = "${siteName}",
				locator1 = "ItemSelector#SITE_SELECTOR",
				value1 = "${siteName}");
		}

		LexiconCard.clickCard(card = "${dmDocumentTitle}");

		PortletEntry.publish();
	}

	macro addWithFriendlyURL {
		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		Panel.expandPanel(panel = "Friendly URL");

		Type.typePause(
			inputFieldId = "friendlyURL",
			locator1 = "TextInput#INPUT_ID",
			value1 = "${friendlyURL}");

		PortletEntry.publish();
	}

	macro addWithMultipleCategories {
		for (var key_panel : list "Basic Information,Default Template,Display Page Template,Featured Image ") {
			if ((IsElementPresent(locator1 = "Panel#PANEL_EXPANDED")) && (IsVisible(locator1 = "Panel#PANEL_EXPANDED"))) {
				AssertClick(
					locator1 = "Panel#PANEL_EXPANDED",
					value1 = "${key_panel}");
			}
		}

		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.addMultipleCategories(
			categoryNameList = "${categoryNameList}",
			vocabularyName = "${vocabularyName}");

		if ("${allowMultipleCategories}" == "false") {
			Button.clickPublish();

			Alert.viewErrorMessage(errorMessage = "You cannot select more than one category for Vocabulary Name.");
		}
		else {
			PortletEntry.publish();
		}
	}

	macro addWithPriorityCP {
		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		Panel.expandPanel(panel = "Categorization");

		Type(
			locator1 = "TextInput#ASSET_PRIORITY",
			value1 = "${assetPriority}");

		PortletEntry.publish();
	}

	macro addWithStructureAndWorkflowCP {
		WebContent.addCP(webContentTitle = "${webContentTitle}");

		if (isSet(webContentText)) {
			Type(
				key_fieldName = "Text",
				locator1 = "FormViewBuilder#TEXT_FIELD",
				value1 = "${webContentText}");
		}

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_PUBLICATION",
			value1 = "Submit for Publication");

		Alert.viewSuccessMessage();
	}

	macro addWithStructureCP {
		AssertVisible(locator1 = "WCEditWebContent#SIDEBAR");

		if (isSet(webContentTitle)) {
			PortletEntry.inputTitle(title = "${webContentTitle}");
		}

		if (isSet(webContentColor)) {
			if (!(isSet(webContentColorFieldLabel))) {
				var webContentColorFieldLabel = "Color";
			}

			Click(
				key_fieldFieldLabel = "${webContentColorFieldLabel}",
				locator1 = "WCEditWebContent#COLOR_PICKER");

			Click(
				key_colorSwatchItem = "${webContentColor}",
				locator1 = "Button#COLOR_SWATCH_ITEM");
		}

		if (isSet(webContentDate)) {
			if (!(isSet(webContentDateFieldLabel))) {
				var webContentDateFieldLabel = "Date";
			}

			Type(
				key_fieldFieldLabel = "${webContentDateFieldLabel}",
				locator1 = "WCEditWebContent#DATE_INPUT",
				value1 = "${webContentDate}");
		}

		if (isSet(webContentGeolocation)) {
			var lat = StringUtil.extractFirst("${webContentGeolocation}", ",");
			var lng = StringUtil.extractLast("${webContentGeolocation}", ",");

			Geolocation.setMarkerPosition(
				lat = "${lat}",
				lng = "${lng}");
		}

		if (isSet(webContentGrid)) {
			if (!(isSet(webContentGridFieldLabel))) {
				var webContentGridFieldLabel = "Grid";
			}

			var column = ${column} + 1;

			Check.checkNotVisible(
				key_column = "${column}",
				key_fieldFieldLabel = "${webContentGridFieldLabel}",
				key_row = "${row}",
				locator1 = "WCEditWebContent#GRID_OPTION");
		}

		if (isSet(webContentImage)) {
			if (!(isSet(webContentImageFieldLabel))) {
				var webContentImageFieldLabel = "Image";
			}

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				fieldLabel = "${webContentImageFieldLabel}",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if ("${navTab}" == "Documents and Media") {
				if (isSet(depotName)) {
					ItemSelector.selectRepositoryImage(
						depotName = "${depotName}",
						folderName = "${folderName}",
						imageFileName = "${webContentImage}",
						navTab = "${navTab}");
				}
				else if (isSet(imageFileName)) {
					ItemSelector.selectDMImage(
						imageFileName = "${webContentImage}",
						navTab = "${navTab}");
				}
				else {
					ItemSelector.uploadFile(
						navTab = "${navTab}",
						uploadFileName = "${webContentImage}");
				}
			}
			else if ("${navTab}" == "Web Content Images") {
				ItemSelector.uploadFile(
					navTab = "${navTab}",
					uploadFileName = "${webContentImage}");
			}

			if (isSet(webContentImageDescription)) {
				Type(
					key_fieldFieldLabel = "${webContentImageFieldLabel}",
					locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
					value1 = "${webContentImageDescription}");
			}
		}

		if (isSet(webContentLinkToPage)) {
			if (!(isSet(webContentLinkToPageFieldLabel))) {
				var webContentLinkToPageFieldLabel = "Link to Page";
			}

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				fieldLabel = "${webContentLinkToPageFieldLabel}",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Portlet.expandTree();

			AssertClick.assertPartialTextClickAt(
				key_nodeName = "${webContentLinkToPage}",
				locator1 = "Treeview#NODE_UNSELECTED",
				value1 = "${webContentLinkToPage}");

			SelectFrameTop();
		}

		if (isSet(webContentMultipleSelection)) {
			if (!(isSet(webContentMultipleSelectionFieldLabel))) {
				var webContentMultipleSelectionFieldLabel = "Multiple Selection";
			}

			Check.checkNotVisible(
				key_fieldFieldLabel = "${webContentMultipleSelectionFieldLabel}",
				key_optionValue = "${webContentMultipleSelection}",
				locator1 = "WCEditWebContent#SELECTION_OPTION");
		}

		if (isSet(webContentNumeric)) {
			if (!(isSet(webContentNumericFieldLabel))) {
				var webContentNumericFieldLabel = "Numeric";
			}

			if ("${numericType}" == "Decimal") {
				Type(
					key_fieldFieldLabel = "${webContentNumericFieldLabel}",
					locator1 = "WCEditWebContent#TEXT_INPUT",
					value1 = "${webContentNumeric}");
			}
			else {
				Type(
					key_fieldFieldLabel = "${webContentNumericFieldLabel}",
					locator1 = "WCEditWebContent#TEXT_INPUT",
					value1 = "${webContentNumeric}");
			}
		}

		if (isSet(webContentRichText)) {
			if (!(isSet(webContentRichTextFieldLabel))) {
				var webContentRichTextFieldLabel = "Rich Text";
			}

			if (isSet(source)) {
				Click(
					key_fieldFieldLabel = "${webContentRichTextFieldLabel}",
					locator1 = "WCEditWebContent#SOURCE_BUTTON");

				Type.typeCodeMirrorEditorNoError(
					locator1 = "CKEditor#BODY_FIELD_SOURCE_ON",
					value1 = "${webContentRichText}");
			}
			else {
				CKEditor.addContentInWebContent(
					content = "${webContentRichText}",
					fieldLabel = "${webContentRichTextFieldLabel}");
			}
		}

		if (isSet(webContentSelectFromList)) {
			if (!(isSet(webContentSelectFromListFieldLabel))) {
				var webContentSelectFromListFieldLabel = "Select from List";
			}

			Click(
				key_fieldFieldLabel = "${webContentSelectFromListFieldLabel}",
				locator1 = "WCEditWebContent#SELECT_FIELD_TRIGGER");

			DropdownMenuItem.click(menuItem = "${webContentSelectFromList}");
		}

		if (isSet(webContentSingleSelection)) {
			if (!(isSet(webContentSingleSelectionFieldLabel))) {
				var webContentSingleSelectionFieldLabel = "Single Selection";
			}

			Check.checkNotVisible(
				key_fieldFieldLabel = "${webContentSingleSelectionFieldLabel}",
				key_optionValue = "${webContentSingleSelection}",
				locator1 = "WCEditWebContent#SELECTION_OPTION");
		}

		if (isSet(webContentText)) {
			if (!(isSet(webContentTextFieldLabel))) {
				var webContentTextFieldLabel = "Text";
			}

			if ("${fieldType}" == "Multiple Lines") {
				Type(
					key_fieldFieldLabel = "${webContentTextFieldLabel}",
					locator1 = "DDMField#MULTIPLE_LINES",
					value1 = "${webContentText}");
			}
			else {
				Type(
					key_fieldFieldLabel = "${webContentTextFieldLabel}",
					locator1 = "WCEditWebContent#TEXT_INPUT",
					value1 = "${webContentText}");
			}

			if (isSet(duplicateField)) {
				Click(locator1 = "FormFields#FIELD_ADD_DUPLICATE");

				Type(
					key_fieldFieldLabel = "${webContentTextFieldLabel}",
					locator1 = "WCEditWebContent#TEXT_INPUT_2",
					value1 = "${webContentText} Duplicate Field");
			}
		}

		if (isSet(webContentUpload)) {
			if (!(isSet(webContentUploadFieldLabel))) {
				var webContentUploadFieldLabel = "Upload";
			}

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				fieldLabel = "${webContentUploadFieldLabel}",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if ("${dmNavTab}" == "Documents and Media") {
				if (isSet(depotName)) {
					ItemSelector.selectRepositoryImage(
						depotName = "${depotName}",
						folderName = "${folderName}",
						imageFileName = "${webContentUpload}",
						navTab = "${dmNavTab}");
				}
				else if (isSet(dmDocumentTitle)) {
					ItemSelector.selectDMImage(
						imageFileName = "${dmDocumentTitle}",
						navTab = "${dmNavTab}");
				}
				else {
					ItemSelector.uploadFile(
						navTab = "${dmNavTab}",
						uploadFileName = "${webContentUpload}");
				}
			}
			else if ("${dmNavTab}" == "User Personal Folder") {
				ItemSelector.uploadFile(
					navTab = "${dmNavTab}",
					uploadFileName = "${webContentUpload}");
			}
		}

		if (isSet(webContentWebContent)) {
			if (!(isSet(webContentWebContentFieldLabel))) {
				var webContentWebContentFieldLabel = "Web Content";
			}

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				fieldLabel = "${webContentWebContentFieldLabel}",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if (isSet(depotName)) {
				WebContent.selectRepositoryWC(
					available = "${available}",
					contentName = "${webContentWebContent}",
					depotName = "${depotName}",
					folderName = "${folderName}");
			}
			else if (isSet(otherSiteName)) {
				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				AssertClick(
					key_breadcrumbName = "Sites and Libraries",
					locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK",
					value1 = "Sites and Libraries");

				Click(
					key_card = "${otherSiteName}",
					locator1 = "Card#CARD_TITLE_LINK");

				AssertClick.assertPartialTextClickAt(
					key_listEntry = "${webContentWebContent}",
					locator1 = "LexiconList#LIST_ENTRY",
					value1 = "${webContentWebContent}");

				SelectFrame(value1 = "relative=top");
			}
			else {
				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				AssertClick.assertPartialTextClickAt(
					key_listEntry = "${webContentWebContent}",
					locator1 = "LexiconList#LIST_ENTRY",
					value1 = "${webContentWebContent}");

				SelectFrame(value1 = "relative=top");
			}
		}

		if (isSet(description)) {
			CKEditor.addContentInWebContent(
				content = "${description}",
				fieldLabel = "Description");
		}

		if (isSet(templateName)) {
			Panel.expandPanel(panel = "Default Template");

			if (IsTextNotEqual(inputFieldId = "ddmTemplateName", locator1 = "TextInput#INPUT_ID", value1 = "${templateName}")) {
				WebContent.selectTemplateCP(
					structureName = "${structureName}",
					templateName = "${templateName}");
			}
		}

		if ("${saveAsDraft}" == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
	}

	macro addWithTagCP {
		for (var key_panel : list "Basic Information,Default Template,Display Page Template,Featured Image ") {
			if ((IsElementPresent(locator1 = "Panel#PANEL_EXPANDED")) && (IsVisible(locator1 = "Panel#PANEL_EXPANDED"))) {
				AssertClick(
					locator1 = "Panel#PANEL_EXPANDED",
					value1 = "${key_panel}");
			}
		}

		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		Panel.expandPanel(panel = "Categorization");

		for (var tagName : list "${tagNameList}") {
			AssetCategorization.addTag(tagName = "${tagName}");
		}

		PortletEntry.publish();
	}

	macro addWithWorkflowCP {
		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		Button.clickSubmitForPublication();

		Alert.viewSuccessMessage();
	}

	macro addWithWorkflowPGViaAP {
		AssetPublisherPortlet.addAsset(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_PUBLICATION",
			value1 = "Submit for Publication");

		Pause(locator1 = "5000");

		SelectFrame();

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "There are no results.");
	}

	macro assertFieldOnWebContent {
		var key_fieldFieldLabel = "${fieldFieldLabel}";
		var key_fieldName = "${fieldName}";

		AssertVisible(locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER");

		AssertTextEquals(
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL",
			value1 = "${fieldFieldLabel}");

		if (isSet(fieldHelpText)) {
			AssertTextEquals(
				locator1 = "WCEditWebContent#HELP_TEXT",
				value1 = "${fieldHelpText}");
		}
	}

	macro changeDefaultLanguage {
		Click(locator1 = "Button#CHANGE");

		MenuItem.click(menuItem = "${defaultLanguage}");
	}

	macro checkLanguage {
		Click.clickNoMouseOver(locator1 = "ContentDashboard#ROW_PANEL_WC");

		WaitForElementPresent(locator1 = "ContentDashboard#ICON_INFO_LISTED_MODIFIED_DATE");

		Click(locator1 = "ContentDashboard#ICON_INFO_LISTED_MODIFIED_DATE");

		Click(locator1 = "ContentDashboard#PANEL_INFO_VIEW");
	}

	macro clickMarginOfContentContainer {
		var elementHeight = selenium.getElementHeight("WCEditWebContent#CONTENT_CONTAINER");
		var offSetY = 50 * ${elementHeight};
		var offSetY = ${offSetY} / 100;
		var elementWidth = selenium.getElementWidth("WCEditWebContent#CONTENT_CONTAINER");
		var offSetX = 2 * ${elementWidth};
		var offSetX = ${offSetX} / 100;

		Click.clickAt(
			locator1 = "WCEditWebContent#CONTENT_CONTAINER",
			value1 = "${offSetX},${offSetY}");
	}

	macro copyCP {
		WebContentNavigator.gotoEntryMenuItem(
			entry = "${webContentTitle}",
			menuItem = "Copy");

		Alert.viewSuccessMessage();
	}

	macro deleteCP {
		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "${webContentTitle}",
			webContentTitleEscapeCharacter = "${webContentTitleEscapeCharacter}");

		if (isSet(depotName)) {
			DepotNavigator.openDepotRecycleBinAdmin(depotName = "${depotName}");

			RecycleBin.emptyCP();

			DepotNavigator.openDepotWebContentAdmin(depotName = "${depotName}");
		}
		else {
			RecycleBin.openRecycleBinAdmin(siteURLKey = "${siteURLKey}");

			RecycleBin.emptyCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "${siteURLKey}");
		}

		AssertTextNotPresent(value1 = "${webContentTitle}");
	}

	macro deleteStagedCP {
		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "${webContentTitle}",
			webContentTitleEscapeCharacter = "${webContentTitleEscapeCharacter}");

		if (isSet(depotName)) {
			DepotNavigator.openDepotRecycleBinAdminStaging(depotName = "${depotName}");
		}
		else {
			Navigator.gotoStagedSitePage(
				pageName = "${pageName}",
				siteName = "${siteName}");

			ProductMenu.gotoPortlet(
				category = "Recycle Bin",
				portlet = "Recycle Bin");
		}

		RecycleBin.emptyCP();

		if (isSet(depotName)) {
			DepotNavigator.openDepotWebContentAdminStaging(depotName = "${depotName}");
		}
		else {
			Navigator.gotoStagedSitePage(
				pageName = "${pageName}",
				siteName = "${siteName}");

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Web Content");
		}

		AssertTextNotPresent(value1 = "${webContentTitle}");
	}

	macro deleteWithDisabledRB {
		WebContentNavigator.gotoEntryMenuItem(
			entry = "${entryTitle}",
			menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro editCP {
		WebContent.addCP(webContentTitle = "${webContentTitleEdit}");

		if (isSet(webContentContentEdit)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

			Type(
				key_fieldLabel = "content",
				locator1 = "CKEditor#BODY",
				value1 = "${webContentContentEdit}");

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(webContentWebContent)) {
			if (!(isSet(webContentWebContentFieldLabel))) {
				var webContentWebContentFieldLabel = "Web Content";
			}

			Click(
				fieldLabel = "${webContentWebContentFieldLabel}",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if (isSet(depotName)) {
				WebContent.selectRepositoryWC(
					available = "${available}",
					contentName = "${webContentWebContent}",
					depotName = "${depotName}",
					folderName = "${folderName}");
			}
			else {
				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				AssertClick.assertPartialTextClickAt(
					key_listEntry = "${webContentWebContent}",
					locator1 = "LexiconList#LIST_ENTRY",
					value1 = "${webContentWebContent}");

				SelectFrame(value1 = "relative=top");
			}
		}

		if (isSet(webContentImage)) {
			if (!(isSet(webContentImageFieldLabel))) {
				var webContentImageFieldLabel = "Image";
			}

			Click(
				fieldLabel = "${webContentImageFieldLabel}",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			if ("${navTab}" == "Documents and Media") {
				if (isSet(depotName)) {
					ItemSelector.selectRepositoryImage(
						depotName = "${depotName}",
						folderName = "${folderName}",
						imageFileName = "${webContentImage}",
						navTab = "${navTab}");
				}
				else if (isSet(imageFileName)) {
					ItemSelector.selectDMImage(
						imageFileName = "${webContentImage}",
						navTab = "${navTab}");
				}
				else {
					ItemSelector.uploadFile(
						navTab = "${navTab}",
						uploadFileName = "${webContentImage}");
				}
			}
			else if ("${navTab}" == "Web Content Images") {
				ItemSelector.uploadFile(
					navTab = "${navTab}",
					uploadFileName = "${webContentImage}");
			}

			if (isSet(webContentImageDescription)) {
				Type(
					key_fieldFieldLabel = "${webContentImageFieldLabel}",
					locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
					value1 = "${webContentImageDescription}");
			}
		}

		if (isSet(embedVideo)) {
			WaitForLiferayEvent.initializeLiferayEventLog();

			Click.pauseClickAt(locator1 = "CKEditor#TOOLBAR_VIDEO_BUTTON");

			if ("${navTab}" == "Documents and Media") {
				ItemSelector.addVideoFromDM(
					depotName = "${depotName}",
					navTab = "${navTab}",
					videoShortcutTitle = "${videoShortcutTitle}");
			}
			else {
				ItemSelector.addVideoFromURL(
					navTab = "${navTab}",
					videoSourceURL = "${embedVideo}");
			}
		}

		if ("${saveAsDraft}" == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals.assertPartialText(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
		else {
			PortletEntry.publish();

			LexiconEntry.changeDisplayStyle(displayStyle = "list");

			var key_webContentTitle = "${webContentTitleEdit}";

			AssertElementPresent.pauseAssertVisible(locator1 = "WC#ENTRY_LIST_THUMBNAIL");

			AssertTextEquals.assertPartialText(
				locator1 = "WC#ENTRY_LIST_TITLE",
				value1 = "${webContentTitleEdit}");
		}
	}

	macro editDisplayDate {
		Panel.expandPanel(panel = "Schedule");

		Type.clickAtType(
			locator1 = "TextInput#DISPLAY_DATE",
			value1 = "${displayDate}");

		if (isSet(displayTime)) {
			Type.clickAtType(
				locator1 = "TextInput#DISPLAY_DATE_TIME",
				value1 = "${displayTime}");
		}
	}

	macro editDisplayPage {
		Panel.expandPanel(panel = "Display Page");

		if (!(isSet(displayPageTemplateType))) {
			var displayPageTemplateType = "Specific";
		}

		Select(
			locator1 = "Select#SELECT_ID",
			selectFieldId = "displayPageType",
			value1 = "${displayPageTemplateType}");

		if ("${displayPageTemplateType}" == "Specific") {
			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				buttonId = "chooseSpecificDisplayPage",
				locator1 = "Button#BUTTON_ID");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			if ("${pageType}" == "Public Pages") {
				Navigator.gotoNavItem(navItem = "Public Pages");

				Portlet.expandTree();

				AssertClick.assertPartialTextClickAt(
					key_nodeName = "${pageName}",
					locator1 = "Treeview#NODE_UNSELECTED",
					value1 = "${pageName}");
			}
			else {
				if (IsElementNotPresent(key_navItem = "${pageType}", locator1 = "NavBar#NAV_ITEM_LINK")) {
					LexiconCard.clickCard(card = "${pageName}");
				}
				else {
					Navigator.gotoNavItem(navItem = "${pageType}");

					LexiconCard.clickCard(card = "${pageName}");
				}
			}

			if ("${pageType}" == "Public Pages") {
				AssertTextEquals(
					inputFieldId = "specificDisplayPageNameInput",
					locator1 = "TextInput#INPUT_ID",
					value1 = "Public Pages > ${pageName}");
			}
			else if ("${pageType}" == "Pages") {
				AssertTextEquals(
					inputFieldId = "specificDisplayPageNameInput",
					locator1 = "TextInput#INPUT_ID",
					value1 = "Pages > ${pageName}");
			}
			else {
				AssertTextEquals(
					inputFieldId = "specificDisplayPageNameInput",
					locator1 = "TextInput#INPUT_ID",
					value1 = "${pageName}");
			}
		}

		if ("${displayPageTemplateType}" == "Default") {
			AssertTextEquals(
				inputFieldId = "defaultDisplayPageNameInput",
				locator1 = "TextInput#INPUT_ID",
				value1 = "${pageName}");
		}
	}

	macro editDisplayPagePGViaAP {
		AssetPublisherPortlet.gotoEditAssetPG(assetTitle = "${assetTitle}");

		WebContent.editDisplayPage(
			pageName = "${displayPageName}",
			pageType = "${pageType}");

		Pause(locator1 = "3000");

		SelectFrame(value1 = "relative=top");
	}

	macro editFieldValue {
		Type(
			index = "${index}",
			key_fieldFieldLabel = "${fieldFieldLabel}",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "${value}");
	}

	macro editFriendlyURL {
		Panel.expandPanel(panel = "Friendly URL");

		Type.typePause(
			inputFieldId = "friendlyURL",
			locator1 = "TextInput#INPUT_ID",
			value1 = "${webContentFriendlyURL}");
	}

	macro editInReview {
		WebContent.addCP(webContentTitle = "${webContentTitleEdit}");

		if (isSet(webContentImage)) {
			Click(
				fieldLabel = "Image",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			SelectFrameTop(value1 = "relative=top");

			ItemSelector.uploadFile(
				navTab = "Web Content Images",
				uploadFileName = "${webContentImage}");
		}

		var iFrameDialog = "IFrame#MODAL_BODY";

		if (IsElementPresent(locator1 = "${iFrameDialog}")) {
			SelectFrame(locator1 = "${iFrameDialog}");
		}

		PortletEntry.save();

		if (IsElementPresent(locator1 = "${iFrameDialog}")) {
			IFrame.closeFrame();
		}
	}

	macro editNullCP {
		AssertElementNotPresent(locator1 = "TextInput#REQUIRED_ALERT");

		WebContent.addCP(webContentTitle = "");

		if (isSet(webContentContent)) {
			CKEditor.addContentInWebContent(
				content = "${webContentContent}",
				fieldLabel = "content");
		}

		AssertClick(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		AssertElementPresent(locator1 = "TextInput#REQUIRED_ALERT");
	}

	macro editViaContentPanel {
		PageEditor.gotoEllipsisMenuItemInPageContentPanel(
			itemName = "${webContentTitle}",
			menuItem = "Edit");

		WebContent.addCP(webContentTitle = "${webContentTitleEdit}");

		if (isSet(webContentContentEdit)) {
			CKEditor.addContentInWebContent(
				content = "${webContentContentEdit}",
				fieldLabel = "content");
		}

		if (isSet(webContentSelectWcFile)) {
			AssertClick(
				key_fieldName = "${fieldName}",
				locator1 = "Button#SELECT_CONTENT",
				value1 = "Select");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			AssertClick.assertPartialTextClickAt(
				key_listEntry = "${webContentSelectWcFile}",
				locator1 = "LexiconList#LIST_ENTRY",
				value1 = "${webContentSelectWcFile}");

			SelectFrame(value1 = "relative=top");
		}

		if ("${saveAsDraft}" == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals.assertPartialText(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
		else {
			PortletEntry.publish();
		}
	}

	macro editWebContentContent {
		WebContent.addCP(webContentTitle = "${webContentTitleEdit}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

		Type(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY",
			value1 = "${webContentContentEdit}");

		SelectFrame(value1 = "relative=top");

		if ("${saveAsDraft}" == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals.assertPartialText(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
		else {
			PortletEntry.publish();
		}
	}

	macro editWithStructureCP {
		WebContentNavigator.gotoEditCP(webContentTitle = "${webContentTitle}");

		if (isSet(locale)) {
			PortletEntry.changeLocale(locale = "${locale}");
		}

		WebContent.addWithStructureCP(
			column = "${column}",
			dmNavTab = "${dmNavTab}",
			navTab = "${navTab}",
			row = "${row}",
			structureName = "${structureName}",
			templateName = "${templateName}",
			webContentColor = "${webContentColor}",
			webContentDate = "${webContentDate}",
			webContentGrid = "${webContentGrid}",
			webContentImage = "${webContentImage}",
			webContentLinkToPage = "${webContentLinkToPage}",
			webContentMultipleSelection = "${webContentMultipleSelection}",
			webContentNumeric = "${webContentNumeric}",
			webContentRichText = "${webContentRichText}",
			webContentSelectFromList = "${webContentSelectFromList}",
			webContentSingleSelection = "${webContentSingleSelection}",
			webContentText = "${webContentText}",
			webContentTitle = "${webContentTitleEdit}",
			webContentUpload = "${webContentUpload}",
			webContentWebContent = "${webContentWebContent}");

		if ("${saveAsDraft}" == "true") {
			PortletEntry.saveAsDraft();

			AssertTextEquals.assertPartialText(
				key_status = "Draft",
				locator1 = "WCEditWebContent#WORKFLOW_STATUS",
				value1 = "Draft");
		}
		else {
			PortletEntry.publish();
		}
	}

	macro expireCP {
		for (var webContentTitle : list "${webContentTitleList}") {
			Check(
				key_webContentTitle = "${webContentTitle}",
				locator1 = "WC#ENTRY_LIST_CHECKBOX");
		}

		Click(locator1 = "Icon#EXPIRE");

		Alert.viewSuccessMessage();
	}

	macro expireSpecificVersionCP {
		WebContentNavigator.gotoEntryMenuItem(
			entry = "${webContentTitle}",
			menuItem = "View History");

		if (isSet(webContentList)) {
			for (var webContentTitle : list "${webContentList}") {
				Check(
					key_webContentTitle = "${webContentTitle}",
					locator1 = "WCEditWebContent#VIEW_HISTORY_VERSION_CHECKBOX");
			}
		}
		else {
			Check(
				key_webContentTitle = "${webContentTitle}",
				locator1 = "WCEditWebContent#VIEW_HISTORY_VERSION_CHECKBOX");
		}

		ClickNoError(locator1 = "Icon#EXPIRE");

		AssertConfirm(value1 = "Are you sure you want to expire the selected version?");
	}

	macro getAssetId {
		if (isSet(webContentAsset)) {
			var webContentId = selenium.getAttribute("//*[contains(@data-title,'${webContentAsset}')]//input@value");

			return "${webContentId}";
		}

		if (isSet(folderAsset)) {
			var folderId = selenium.getAttribute("//*[contains(@data-title,'${folderAsset}')]@data-folder-id");

			return "${folderId}";
		}
	}

	macro increaseDisplayDate {
		var displayDate = selenium.getAttribute("//input[contains(@id,'displayDate')]@value");
		var displayDateHour = selenium.getAttribute("//input[contains(@id,'displayDateHour')]@value");
		var displayDateAmpm = selenium.getAttribute("//input[contains(@id,'displayDateAmPm')]@value");
		var displayDateAmpm = StringUtil.replace("${displayDateAmpm}", "0", "AM");
		var displayDateAmpm = StringUtil.replace("${displayDateAmpm}", "1", "PM");
		var displayDateMinute = selenium.getAttribute("//input[contains(@id,'displayDateMinute')]@value");
		var displayDateMinuteFuture = ${displayDateMinute} + ${minuteIncrease};
		var displayTime = "${displayDateHour}:${displayDateMinuteFuture} ${displayDateAmpm}";

		WebContent.editDisplayDate(
			displayDate = "${displayDate}",
			displayTime = "${displayTime}");
	}

	macro moveArticlesToFolderCP {
		for (var webContentTitle : list "${webContentArticlesList}") {
			Check(
				key_webContentTitle = "${webContentTitle}",
				locator1 = "WC#ENTRY_LIST_CHECKBOX");
		}

		Click(locator1 = "Icon#MOVE");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Move Web Content");

		Click(locator1 = "Button#PARENT_FOLDER_SELECT");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Pause(locator1 = "3000");

		WebContentFolder.selectFolderTreeNode(nodeName = "${folderName}");

		SelectFrameTop();

		AssertClick(
			locator1 = "Button#MOVE",
			value1 = "Move");

		Alert.viewSuccessMessage();
	}

	macro moveMultipleToFolderCP {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		for (var rowEntry : list "${rowEntryCheckList}") {
			Check(
				key_rowEntry = "${rowEntry}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
		}

		Click(locator1 = "Icon#MOVE");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Pause(locator1 = "3000");

		WebContentFolder.selectFolderTreeNode(nodeName = "${folderName}");

		SelectFrame(value1 = "relative=top");

		AssertClick(
			locator1 = "Button#MOVE",
			value1 = "Move");

		Alert.viewSuccessMessage();
	}

	macro moveToFolderCP {
		WebContentNavigator.gotoEntryMenuItem(
			entry = "${webContentTitle}",
			menuItem = "Move");

		AssertTextEquals(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#MOVE_WEB_CONTENT_ARTICLE",
			value1 = "${webContentTitle}");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Pause(locator1 = "3000");

		WebContentFolder.selectFolderTreeNode(nodeName = "${folderName}");

		SelectFrame(value1 = "relative=top");

		AssertClick(
			locator1 = "Button#MOVE",
			value1 = "Move");

		Alert.viewSuccessMessage();
	}

	macro moveToRecycleBinCP {
		WebContent.viewTitle(
			webContentTitle = "${webContentTitle}",
			webContentTitleEscapeCharacter = "${webContentTitleEscapeCharacter}");

		if (isSet(webContentTitleEscapeCharacter)) {
			var key_webContentTitle = "${webContentTitleEscapeCharacter}";

			WebContentNavigator.gotoEntryMenuItem(
				entry = "${webContentTitleEscapeCharacter}",
				menuItem = "Delete");
		}
		else {
			var key_webContentTitle = "${webContentTitle}";

			WebContentNavigator.gotoEntryMenuItem(
				entry = "${webContentTitle}",
				menuItem = "Delete");
		}

		VerifyElementPresent(locator1 = "Message#SUCCESS");

		AssertElementNotPresent(
			key_webContentTitle = "${key_webContentTitle}",
			locator1 = "WC#ENTRY_LIST_TITLE");
	}

	macro moveToRecycleBinViaDeleteIconCP {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		PortletEntry.selectAll();

		Click(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

		Alert.viewSuccessMessage();
	}

	macro paginateRelatedAssets {
		WebContentNavigator.gotoEditCP(webContentTitle = "${webContentTitle}");

		Panel.expandPanel(panel = "Related Assets");

		WaitForLiferayEvent.initializeLiferayEventLog();

		AssertClick(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_SELECT",
			value1 = "Select");

		AssertClick(
			key_assetType = "${assetType}",
			locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_ASSET",
			value1 = "${assetType}");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertClick.assertPartialTextClickAt(
			locator1 = "Pagination#ITEMS_PER_PAGE_SELECT",
			value1 = "20 Entries");

		MenuItem.click(menuItem = "${itemsPerPage}");
	}

	macro previewDisplayPageTemplate {
		Panel.expandPanel(panel = "Display Page");

		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(
			key_fieldsetName = "displayPage",
			locator1 = "WC#PREVIEW_BUTTON");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertTextPresent(
			locator1 = "IFrame#MODAL_BODY",
			value1 = "${webContentContent}");

		Pause(locator1 = "3000");

		takeScreenshot();

		IFrame.closeFrame();
	}

	macro removeDuplicatedFieldsGroup {
		Click(
			key_fieldName = "FieldsGroup",
			key_index = "${index}",
			locator1 = "FormFields#FIELD_REMOVE");
	}

	macro saveAsDraft {
		Click(locator1 = "ContentDashboard#ASSET_MENU_DROPDOWN_BUTTON");

		Click(locator1 = "ContentDashboard#EDIT_OPTION");

		CKEditor.addContentInWebContent(
			content = "Web Content Content",
			fieldLabel = "content");

		Click(locator1 = "Button#SAVE_AS_DRAFT");

		Click(locator1 = "Icon#BACK");
	}

	macro saveAsDraftViaAP {
		Button.clickSaveAsDraft();

		Pause(locator1 = "5000");

		Refresh();

		AssertElementNotPresent(locator1 = "AP#ASSET_ABSTRACT_GENERIC");
	}

	macro searchCP {
		Search.searchCP(searchTerm = "${webContentTitle}");

		AssertTextEquals(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_TITLE",
			value1 = "${webContentTitle}");
	}

	macro searchNoResultsCP {
		Search.searchCP(searchTerm = "${searchQuery}");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No web content was found.");

		AssertTextNotPresent(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_TITLE",
			value1 = "${webContentTitle}");

		Search.searchCP(searchTerm = "");

		AssertTextPresent(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_TITLE",
			value1 = "${webContentTitle}");
	}

	macro selectCategory {
		Panel.expandPanel(panel = "Categorization");

		if (isSet(userSegmentDetailTitle)) {
			AssertTextEquals(
				key_userSegmentDetailTitle = "${userSegmentDetailTitle}",
				locator1 = "WCEditWebContent#USER_SEGMENT_DETAIL_TITLE",
				value1 = "${userSegmentDetailTitle}");
		}

		AssetCategorization.addCategory(
			categoryName = "${categoryName}",
			vocabularyName = "${vocabularyName}");
	}

	macro selectFolder {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(locator1 = "Button#PARENT_FOLDER_SELECT");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(searchTerm)) {
			Type(
				locator1 = "TextInput#SEARCH",
				value1 = "${searchTerm}");

			Click(
				key_nodeName = "${folderName}",
				locator1 = "Treeview#NODE_ITEM");
		}
		else {
			WebContentFolder.selectFolderTreeNode(nodeName = "${folderName}");
		}

		SelectFrame(value1 = "relative=top");

		AssertTextEquals.assertValue(
			inputFieldId = "folderName",
			locator1 = "TextInput#INPUT_ID",
			value1 = "${folderName}");
	}

	macro selectRepositoryWC {
		var key_contentName = "${contentName}";

		ItemSelector.changeWorkspaces(workspacesType = "Asset Library");

		LexiconCard.clickCard(card = "${depotName}");

		if (isSet(folderName)) {
			LexiconList.clickListEntryTitle(listEntry = "${folderName}");
		}

		if ("${available}" == "false") {
			AssertElementNotPresent(locator1 = "ItemSelector#SELECT_FILE_WEB_CONTENT");
		}
		else {
			Click(locator1 = "ItemSelector#SELECT_FILE_WEB_CONTENT");
		}
	}

	macro selectTemplateCP {
		ScrollBy(value1 = "0, 50");

		AssertTextEquals.assertPartialText(
			locator1 = "WCEditWebContent#SELECTED_STRUCTURE",
			value1 = "${structureName}");

		Panel.expandPanel(panel = "Default Template");

		Pause(locator1 = "3000");

		Click(
			buttonId = "selectDDMTemplate",
			locator1 = "Button#BUTTON_ID");

		IFrame.selectTopFrame();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Pause(locator1 = "3000");

		if (isSet(confirm)) {
			LexiconCard.clickCard(card = "${templateName}");
		}
		else {
			LexiconCard.clickCardWithConfirmation(card = "${templateName}");
		}

		IFrame.selectTopFrame();

		WaitForPageLoad();

		Panel.expandPanel(panel = "Default Template");

		var templateName = StringUtil.replace("${templateName}", "&lt;", "<");
		var templateName = StringUtil.replace("${templateName}", "&gt;", ">");

		AssertTextEquals(
			inputFieldId = "ddmTemplateName",
			locator1 = "TextInput#INPUT_ID",
			value1 = "${templateName}");
	}

	macro setImageDescription {
		Type(
			key_fieldFieldLabel = "${fieldFieldLabel}",
			locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
			value1 = "${webContentImageDescription}");
	}

	macro subscribeToCurrentFolderCP {
		Click.clickAt(locator1 = "Icon#INFO");

		Click(locator1 = "Icon#SUBSCRIBE");

		Alert.viewSuccessMessage();
	}

	macro subscribeToSpecificArticle {
		WebContentNavigator.gotoEntryMenuItem(
			entry = "${webContentTitle}",
			menuItem = "Subscribe");

		Alert.viewSuccessMessage();
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		if (IsElementPresent.pauseIsElementPresent(locator1 = "WC#ENTRY_LIST_THUMBNAIL_GENERIC")) {
			PortletEntry.selectAll();

			Click(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

			VerifyElementPresent(locator1 = "Message#SUCCESS");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			portlet = "Recycle Bin");

		RecycleBin.emptyCP();
	}

	macro uploadAudio {
		Click(locator1 = "CKEditor#TOOLBAR_AUDIO_BUTTON");

		ItemSelector.addAudioFromURL(
			audioSourceURL = "${dmDocumentURL}",
			navTab = "${navTab}");

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertElementPresent(locator1 = "CKEditor#CONTENT_AUDIO_LINK_IMAGE");

		IFrame.selectTopFrame();
	}

	macro uploadVideo {
		Click(locator1 = "WCEditWebContent#VIDEO_BUTTON");

		if ("${navTab}" == "URL") {
			ItemSelector.addVideoFromURL(
				navTab = "${navTab}",
				videoSourceURL = "${dmDocumentURL}");
		}
		else if ("${navTab}" == "Documents and Media") {
			ItemSelector.addVideoFromDM(
				navTab = "${navTab}",
				videoShortcutPreview = "${videoShortcutPreview}",
				videoShortcutTitle = "${videoShortcutTitle}");
		}

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertElementPresent(locator1 = "CKEditor#CONTENT_VIDEO_LINK_IMAGE");

		IFrame.selectTopFrame();
	}

	macro viewApprovedStatus {
		var key_webContentTitle = "${webContentTitle}";

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertTextEquals(
			locator1 = "WC#ENTRY_TABLE_WORKFLOW_STATUS",
			value1 = "APPROVED");
	}

	macro viewAvailableLanguages {
		Click(locator1 = "Button#LOCALIZATION_GENERIC");

		for (var availableLanguage : list "${availableLanguageList}") {
			AssertElementPresent(
				key_locale = "${availableLanguage}",
				locator1 = "Translation#LOCALIZATION_NAME");
		}

		for (var unavailableLanguage : list "${unavailableLanguageList}") {
			AssertElementNotPresent(
				key_locale = "${unavailableLanguage}",
				locator1 = "Translation#LOCALIZATION_NAME");
		}
	}

	macro viewCategorizationCategoryCP {
		Panel.expandPanel(panel = "Categorization");

		for (var categoryName : list "${categoryNameList}") {
			AssertTextEquals(
				key_categoryName = "${categoryName}",
				locator1 = "AssetCategorization#CATEGORY",
				value1 = "${categoryName}");
		}
	}

	macro viewCategorizationCategoryNotVisibleCP {
		Panel.expandPanel(panel = "Categorization");

		for (var categoryName : list "${categoryNameList}") {
			AssertElementNotPresent(
				key_categoryName = "${categoryName}",
				locator1 = "AssetCategorization#CATEGORY");
		}
	}

	macro viewCategorizationVocabularyCP {
		Panel.expandPanel(panel = "Categorization");

		for (var vocabularyName : list "${vocabularyNameList}") {
			AssertTextEquals(
				key_fieldLabel = "${vocabularyName}",
				locator1 = "AssetCategorization#VOCABULARY_LIST_ITEM",
				value1 = "${vocabularyName}");
		}
	}

	macro viewCompareVersions {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconEntry.gotoEntry(rowEntry = "${version}");

		SelectFrameTop();

		AssertTextEquals(
			locator1 = "WCViewHistory#VIEW_COMPARE_VERSIONS_CONTENT",
			value1 = "${newContent}");
	}

	macro viewConversionLinksPGViaAP {
		WebContent.viewPGViaAP(
			author = "${author}",
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		for (var documentType : list "${documentTypes}") {
			var documentTypeUppercase = StringUtil.upperCase("${documentType}");
			var key_documentType = "${documentTypeUppercase}";

			AssertTextEquals.assertPartialText(
				locator1 = "APAsset#DOCUMENT_CONVERSION_NAME",
				value1 = "${documentTypeUppercase}");
		}
	}

	macro viewCP {
		if (isSet(webContentTitleEscapeCharacter)) {
			var key_webContentTitle = "${webContentTitleEscapeCharacter}";
		}
		else {
			var key_webContentTitle = "${webContentTitle}";
		}

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "${webContentTitle}");

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "${webContentContent}");

		SelectFrame(value1 = "relative=top");

		if (isSet(webContentDescription)) {
			if (isSet(otherLocaleSummary)) {
				SelectFrame.selectFrameNoLoading(
					key_fieldLabel = "${otherLocaleSummary}",
					locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");
			}
			else {
				SelectFrame.selectFrameNoLoading(
					key_fieldLabel = "Description",
					locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");
			}

			AssertTextEquals(
				locator1 = "CKEditor#BODY",
				value1 = "${webContentDescription}");

			SelectFrameTop(value1 = "relative=top");
		}

		if (isSet(displayPageTemplateDisabled)) {
			Portlet.waitForForm();

			var key_panel = "Display Page";

			AssertElementNotPresent(locator1 = "Panel#PANEL");
		}
	}

	macro viewDefaultCP {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No web content was found.");

		var key_webContentTitle = "${webContentTitle}";

		AssertElementNotPresent(locator1 = "WC#ENTRY_LIST_THUMBNAIL");

		AssertElementNotPresent(locator1 = "WC#ENTRY_LIST_TITLE");
	}

	macro viewDefaultLanguage {
		AssertVisible(
			defaultLanguage = "${defaultLanguage}",
			locator1 = "WCEditWebContent#DEFAULT_LANGUAGE");
	}

	macro viewDisplayStyleCP {
		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		AssertElementPresent.pauseAssertVisible(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_CARDS_THUMBNAIL");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		AssertElementPresent.pauseAssertVisible(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_THUMBNAIL");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertElementPresent(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_TABLE_TITLE");
	}

	macro viewDuplicatedField {
		var i = "0";

		while ("${i}" != "${totalPortletCount}") {
			var i = ${i} + 1;

			AssertElementPresent(
				index = "${i}",
				key_fieldLabel = "${fieldLabel}",
				locator1 = "DataEngineRenderer#REPEATABLE_FIELD_ADD_BUTTON_INDEXED");
		}
	}

	macro viewEmailConfigurationCP {
		SiteAdmin.gotoPortletConfiguration();

		Navigator.gotoNavTab(navTab = "Email From");

		AssertTextEquals(
			locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_ADDED_EMAIL",
			value1 = "Web Content Added Email");

		AssertTextEquals(
			locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_REVIEW_EMAIL",
			value1 = "Web Content Review Email");

		AssertTextEquals(
			locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_UPDATED_EMAIL",
			value1 = "Web Content Updated Email");

		if ("${webContentWorkflowEnabled}" == "true") {
			AssertTextEquals(
				locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_DENIED_EMAIL",
				value1 = "Web Content Denied Email");

			AssertTextEquals(
				locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_GRANTED_EMAIL",
				value1 = "Web Content Granted Email");

			AssertTextEquals(
				locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_REQUESTED_EMAIL",
				value1 = "Web Content Requested Email");
		}
		else {
			AssertElementNotPresent(locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_DENIED_EMAIL");

			AssertElementNotPresent(locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_GRANTED_EMAIL");

			AssertElementNotPresent(locator1 = "WCConfiguration#NAVIGATION_WEB_CONTENT_REQUESTED_EMAIL");
		}
	}

	macro viewEntryAsWorkflowAsset {
		SiteAdmin.viewPortletTitle(portletTitle = "${webContentTitle}");

		AssertTextEquals(
			index = "1",
			key_webContentContent = "${webContentContent}",
			locator1 = "WCD#WEB_CONTENT_CONTENT",
			value1 = "${webContentContent}");
	}

	macro viewEntryListAuthor {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Pause(locator1 = "3000");

		AssertTextEquals.assertPartialText(
			key_entryAuthor = "${author}",
			key_entryTitle = "${entryTitle}",
			locator1 = "WCEditWebContent#ENTRY_LIST_AUTHOR",
			value1 = "${author}");
	}

	macro viewExpirationDateCP {
		Panel.expandPanel(panel = "Schedule");

		AssertNotChecked(
			locator1 = "Checkbox#NEVER_EXPIRE",
			value1 = "Never Expire");

		AssertTextEquals(
			locator1 = "TextInput#EXPIRATION_DATE",
			value1 = "${expirationDate}");
	}

	macro viewFieldRepeated {
		AssertTextEquals(
			locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][1]//a[contains(@class,'ddm-repeatable-add-button')]/../div//input)",
			value1 = "${ddlRecordFieldData}");

		AssertTextEquals(
			locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][2]//a[contains(@class,'ddm-repeatable-add-button')]/../div//input)",
			value1 = "${ddlRecordFieldData} 2");

		var i = "3";

		while (IsElementPresent(locator1 = "xpath=(//div[@data-fieldname='${fieldName}'])[${i}]")) {
			AssertTextEquals(
				locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][${i}]//a[contains(@class,'ddm-repeatable-add-button')]/../div//input)",
				value1 = "${ddlRecordFieldData} ${i}");

			var i = ${i} + 1;
		}
	}

	macro viewFriendlyURLCP {
		Panel.expandPanel(panel = "Friendly URL");

		AssertTextEquals(
			inputFieldId = "friendlyURL",
			locator1 = "TextInput#INPUT_ID",
			value1 = "${friendlyURL}");
	}

	macro viewLinkedAssetPGViaAP {
		AssertClick.assertPartialTextClickAt(
			key_assetTitle = "${webContentTitle}",
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${webContentTitle}");

		AssertTextEquals.assertPartialText(
			key_assetTitle = "${webContentTitle}",
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${webContentTitle}");

		AssertTextEquals.assertPartialText(
			key_assetContent = "${webContentContent}",
			locator1 = "APAsset#ASSET_CONTENT",
			value1 = "${webContentContent}");
	}

	macro viewNoConversionLinksPGViaAP {
		WebContent.viewPGViaAP(
			author = "${author}",
			webContentContent = "${webContentContent}",
			webContentTitle = "${webContentTitle}");

		for (var documentType : list "${documentTypes}") {
			var documentTypeUppercase = StringUtil.upperCase("${documentType}");

			AssertElementNotPresent(
				key_documentType = "${documentTypeUppercase}",
				locator1 = "APAsset#DOCUMENT_CONVERSION_NAME");
		}
	}

	macro viewNoEditWCCP {
		var key_webContentTitle = "${webContentTitle}";

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Click(locator1 = "WC#ENTRY_LIST_MENULIST_ICON");

		AssertElementNotPresent(
			key_menuItem = "Edit",
			locator1 = "MenuItem#ANY_MENU_ITEM");
	}

	macro viewNoEditWCViaAP {
		AssertElementPresent(
			key_assetTitle = "${assetTitle}",
			locator1 = "AP#ASSET_ABSTRACT_TITLE");

		AssertElementNotPresent(
			key_assetTitle = "${assetTitle}",
			locator1 = "AP#ASSET_ELLIPSIS_ICON");
	}

	macro viewNoPermissionCP {
		SiteAdmin.viewPortletTitle(portletTitle = "Web Content");

		AssertElementPresent(locator1 = "NavBar#CONTAINER");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No web content was found.");
	}

	macro viewNoTagsFromInfoPanel {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Check(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_CHECKBOX");

		Click(locator1 = "Icon#INFO");

		for (var tagName : list "${tagNameList}") {
			var tagName = StringUtil.lowerCase("${tagName}");

			AssertElementNotPresent(
				key_tagName = "${tagName}",
				locator1 = "WC#SIDEBAR_TAG");
		}
	}

	macro viewNotPresentCP {
		AssertElementNotPresent(locator1 = "TextInput#TITLE");
	}

	macro viewPageBreak {
		AssertTextEquals.assertPartialText(
			locator1 = "Pagination#PAGES",
			value1 = "Pages");
	}

	macro viewPaginateRelatedAssets {
		AssertTextEquals.assertPartialText(
			locator1 = "Pagination#ITEMS_PER_PAGE_SELECT",
			value1 = "${itemsPerPage}");

		AssertTextEquals(
			locator1 = "Pagination#CURRENT_PAGE_SELECT",
			value1 = "${numberOfPages}");
	}

	macro viewPGViaAP {
		var key_assetContent = "${webContentContent}";
		var key_assetTitle = "${webContentTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${webContentTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${webContentContent}");

		if (isSet(author)) {
			AssertTextEquals.assertPartialText(
				key_author = "${author}",
				locator1 = "AP#METADATA_AUTHOR",
				value1 = "${author}");
		}

		AssetPublisherPortlet.clickAssetTitle(assetTitle = "${webContentTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${webContentTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "APAsset#ASSET_VIEW_CONTENT",
			value1 = "${webContentContent}");
	}

	macro viewRepeatedField {
		AssertElementPresent(locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][1]//a[contains(@class,'ddm-repeatable-add-button')]/../div)");

		AssertElementPresent(locator1 = "xpath=(//div[@data-fieldname='${fieldName}'][2]//a[contains(@class,'ddm-repeatable-add-button')]/../div)");
	}

	macro viewRTLLayout {
		AssertCssValue(
			locator1 = "TextInput#TITLE",
			locator2 = "direction",
			value1 = "rtl");
	}

	macro viewSelectedDisplayPageTemplateCP {
		Panel.expandPanel(panel = "Display Page");

		AssertSelectedLabel(
			locator1 = "Select#SELECT_ID",
			selectFieldId = "displayPageType",
			value1 = "${displayPageTemplateType}");

		if (isSet(displayPageTemplateName)) {
			AssertTextEquals(
				key_titleName = "${displayPageTemplateType} Display Page Template",
				locator1 = "TextInput#INPUT_CONTAINS_TITLE",
				value1 = "${displayPageTemplateName}");
		}
	}

	macro viewSelectedTemplateCP {
		Panel.expandPanel(panel = "Default Template");

		AssertTextEquals(
			inputFieldId = "ddmTemplateName",
			locator1 = "TextInput#INPUT_ID",
			value1 = "${templateName}");
	}

	macro viewSpecificVersionHistoryCP {
		var key_webContentTitle = "${webContentTitle}";

		AssertTextEquals(
			locator1 = "WCEditWebContent#VIEW_HISTORY_VERSION_TITLE",
			value1 = "${webContentTitle}");

		AssertTextEquals(
			locator1 = "WCEditWebContent#VIEW_HISTORY_VERSION_STATUS",
			value1 = "${webContentStatus}");
	}

	macro viewStatus {
		AssertTextEquals(
			key_status = "${webContentStatus}",
			locator1 = "WCEditWebContent#WORKFLOW_STATUS",
			value1 = "${webContentStatus}");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "${webContentTitle}");

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "${webContentContent}");

		SelectFrameTop();
	}

	macro viewStructureAndTemplateLocalization {
		if (isSet(structureLocalizationName)) {
			AssertTextEquals.assertPartialText(
				locator1 = "WCEditWebContent#SELECTED_STRUCTURE",
				value1 = "${structureLocalizationName}");
		}

		if (isSet(templateLocalizationName)) {
			Panel.expandPanel(panel = "${panel}");

			AssertTextEquals(
				inputFieldId = "ddmTemplateName",
				locator1 = "TextInput#INPUT_ID",
				value1 = "${templateLocalizationName}");
		}
	}

	macro viewStructureViaAddMenuCP {
		LexiconEntry.gotoAdd();

		AssertTextEquals(
			key_menuItem = "${structureName}",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "${structureName}");
	}

	macro viewStructureWithWorkflowPendingCP {
		WebContentNavigator.gotoViewStatus(
			webContentStatus = "PENDING",
			webContentTitle = "${webContentTitle}");

		AssertElementPresent(
			key_status = "Pending",
			locator1 = "WCEditWebContent#WORKFLOW_STATUS");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "${webContentTitle}");
	}

	macro viewTagFromInfoPanel {
		var tagName = StringUtil.lowerCase("${tagName}");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Check(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_CHECKBOX");

		Click(locator1 = "Icon#INFO");

		AssertElementPresent(
			key_tagName = "${tagName}",
			locator1 = "WC#SIDEBAR_TAG");
	}

	macro viewTitle {
		if (isSet(webContentTitleEscapeCharacter)) {
			var key_webContentTitle = "${webContentTitleEscapeCharacter}";
		}
		else {
			var key_webContentTitle = "${webContentTitle}";
		}

		if ("${onLive}" == "true") {
			AssertTextEquals.assertPartialText(
				locator1 = "WC#ENTRY_LIST_TITLE_ON_LIVE",
				value1 = "${webContentTitle}");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "WC#ENTRY_LIST_TITLE",
				value1 = "${webContentTitle}");
		}
	}

	macro viewUserEditCP {
		AssertTextEquals.assertPartialText(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_LAST_MODIFIED",
			value1 = "${userFirstLast}");

		WebContent.viewVersion(
			version = "1.1",
			webContentTitle = "${webContentTitle}");
	}

	macro viewVersion {
		var key_panel = "Basic Information";

		WebContentNavigator.gotoEditCP(webContentTitle = "${webContentTitle}");

		if ((IsElementPresent(locator1 = "Panel#PANEL_COLLAPSED")) && (IsVisible(locator1 = "Panel#PANEL_COLLAPSED"))) {
			AssertClick(
				locator1 = "Panel#PANEL_COLLAPSED",
				value1 = "${key_panel}");
		}

		AssertElementPresent(locator1 = "Panel#PANEL_EXPANDED");

		AssertTextEquals.assertPartialText(
			locator1 = "WCEditWebContent#VERSION",
			value1 = "${version}");
	}

	macro viewVideoPreview {
		if (isSet(webContentTitle)) {
			WebContentNavigator.gotoPreviewEntryCP(webContentTitle = "${webContentTitle}");

			Pause(locator1 = "3000");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");
		}

		AssertVisible(
			key_service = "${service}",
			locator1 = "WCPreview#BODY_FIELD_VIDEO");
	}

	macro viewWCViewableByPermissions {
		PortletEntry.inputTitle(title = "Web Content Title");

		Panel.expandPanel(panel = "Permissions");

		AssertSelectedLabel(
			locator1 = "Select#PERMISSIONS",
			value1 = "Site Members");
	}

	macro viewWithStructureCP {
		if (!(isSet(predefinedValue))) {
			if ("${skipGotoEditCp}" != "true") {
				LexiconEntry.changeDisplayStyle(displayStyle = "list");

				WebContentNavigator.gotoEditCP(
					webContentTitle = "${webContentTitle}",
					webContentTitleEscapeCharacter = "${webContentTitleEscapeCharacter}");

				AssertVisible(locator1 = "WCEditWebContent#SIDEBAR");
			}

			if (isSet(webContentLocaleFieldLabel)) {
				PortletEntry.changeLocale(locale = "${webContentLocaleFieldLabel}");
			}

			if (isSet(webContentTitleTranslated)) {
				AssertTextEquals(
					locator1 = "TextInput#TITLE",
					value1 = "${webContentTitleTranslated}");
			}
			else {
				AssertTextEquals(
					locator1 = "TextInput#TITLE",
					value1 = "${webContentTitle}");
			}

			if (isSet(description)) {
				SelectFrame.selectFrameNoLoading(
					key_fieldLabel = "Description",
					locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

				AssertTextEquals(
					locator1 = "CKEditor#BODY",
					value1 = "${description}");

				SelectFrameTop(value1 = "relative=top");
			}
		}

		if ("${webContentBoolean}" == "true") {
			var webContentBooleanFieldLabel = "Boolean";

			AssertChecked.assertCheckedNotVisible(
				checkboxName = "${webContentBooleanFieldLabel}",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else if ("${webContentBoolean}" == "false") {
			var webContentBooleanFieldLabel = "Boolean";

			AssertNotChecked.assertNotCheckedNotVisible(
				checkboxName = "${webContentBooleanFieldLabel}",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		if (isSet(webContentColor)) {
			if (!(isSet(webContentColorFieldLabel))) {
				var webContentColorFieldLabel = "Color";
			}

			AssertTextEquals.assertValue(
				key_fieldFieldLabel = "${webContentColorFieldLabel}",
				locator1 = "TextInput#SELECTOR_INPUT",
				value1 = "${webContentColor}");
		}

		if (isSet(webContentDate)) {
			if (!(isSet(webContentDateFieldLabel))) {
				var webContentDateFieldLabel = "Date";
			}

			if ("${webContentDate}" == "__/__/____") {
				AssertAttributeValue(
					attribute1 = "placeholder",
					key_fieldFieldLabel = "${webContentDateFieldLabel}",
					locator1 = "WCEditWebContent#DATE_INPUT",
					value1 = "${webContentDate}");

				AssertAttributeValue(
					attribute1 = "value",
					key_fieldFieldLabel = "${webContentDateFieldLabel}",
					locator1 = "WCEditWebContent#DATE_INPUT",
					value1 = "");
			}
			else {
				AssertAttributeValue(
					attribute1 = "value",
					key_fieldFieldLabel = "${webContentDateFieldLabel}",
					locator1 = "WCEditWebContent#DATE_INPUT",
					value1 = "${webContentDate}");
			}
		}

		if (isSet(webContentGeolocation)) {
			if (!(isSet(webContentGeolocationFieldLabel))) {
				var webContentGeolocationFieldLabel = "Geolocation";
			}

			AssertElementPresent(
				key_fieldFieldLabel = "${webContentGeolocationFieldLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

			if (isSet(location)) {
				var lat = StringUtil.extractFirst("${location}", ",");
				var lng = StringUtil.extractLast("${location}", ",");

				Geolocation.assertMarkerPosition(
					lat = "${lat}",
					lng = "${lng}");
			}
		}

		if (isSet(webContentGrid)) {
			if (!(isSet(webContentGridFieldLabel))) {
				var webContentGridFieldLabel = "Grid";
			}

			var column = ${column} + 1;

			if ("${webContentGrid}" == "true") {
				AssertChecked.assertCheckedNotVisible(
					key_column = "${column}",
					key_fieldFieldLabel = "${webContentGridFieldLabel}",
					key_row = "${row}",
					locator1 = "WCEditWebContent#GRID_OPTION");
			}
			else if ("${webContentGrid}" == "false") {
				AssertNotChecked.assertNotCheckedNotVisible(
					key_column = "${column}",
					key_fieldFieldLabel = "${webContentGridFieldLabel}",
					key_row = "${row}",
					locator1 = "WCEditWebContent#GRID_OPTION");
			}
		}

		if (isSet(webContentImage)) {
			if (!(isSet(webContentImageFieldLabel))) {
				var webContentImageFieldLabel = "Image";
			}

			AssertTextEquals(
				key_fieldFieldLabel = "${webContentImageFieldLabel}",
				locator1 = "TextInput#SELECTOR_INPUT",
				value1 = "${webContentImage}");

			AssertElementPresent(
				key_fieldFieldLabel = "${webContentImageFieldLabel}",
				key_image = "/documents/",
				locator1 = "WCEditWebContent#IMAGE_PICKER_PREVIEW");

			if (isSet(webContentImageDescription)) {
				AssertTextEquals(
					key_fieldFieldLabel = "${webContentImageFieldLabel}",
					locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
					value1 = "${webContentImageDescription}");
			}
		}

		if (isSet(webContentLinkToPage)) {
			if (!(isSet(webContentLinkToPageFieldLabel))) {
				var webContentLinkToPageFieldLabel = "Link to Page";
			}

			var selectedPage = selenium.getElementValue("//label[normalize-space(text())='${webContentLinkToPageFieldLabel}']/following-sibling::div//div[contains(@class,'input-group')]//input[contains(@type,'text')]");

			if (contains("${selectedPage}", "${webContentLinkToPage}")) {
				echo("The ${selectedPage} is shown in field.");
			}
			else {
				TestUtils.fail(message = "The ${selectedPage} is not shown in field.");
			}
		}

		if (isSet(webContentMultipleSelection)) {
			if (!(isSet(webContentMultipleSelectionFieldLabel))) {
				var webContentMultipleSelectionFieldLabel = "Multiple Selection";
			}

			AssertChecked.assertCheckedNotVisible(
				key_fieldFieldLabel = "${webContentMultipleSelectionFieldLabel}",
				key_optionValue = "${webContentMultipleSelection}",
				locator1 = "WCEditWebContent#SELECTION_OPTION");
		}

		if (isSet(webContentNumeric)) {
			if (!(isSet(webContentNumericFieldLabel))) {
				var webContentNumericFieldLabel = "Numeric";
			}

			AssertTextEquals.assertValue(
				key_fieldFieldLabel = "${webContentNumericFieldLabel}",
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = "${webContentNumeric}");
		}

		if (isSet(webContentRichText)) {
			if (!(isSet(webContentRichTextFieldLabel))) {
				var webContentRichTextFieldLabel = "Rich Text";
			}

			SelectFrame.selectFrameNoLoading(
				key_fieldLabel = "${webContentRichTextFieldLabel}",
				locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

			AssertTextEquals(
				locator1 = "CKEditor#BODY",
				value1 = "${webContentRichText}");

			SelectFrameTop();
		}

		if (isSet(webContentSelectFromList)) {
			if (!(isSet(webContentSelectFromListFieldLabel))) {
				var webContentSelectFromListFieldLabel = "Select from List";
			}

			AssertTextEquals(
				key_fieldFieldLabel = "${webContentSelectFromListFieldLabel}",
				locator1 = "DDMField#SELECT_FROM_LIST",
				value1 = "${webContentSelectFromList}");
		}

		if (isSet(webContentSeparator)) {
			if (!(isSet(webContentSeparatorFieldLabel))) {
				var webContentSeparatorFieldLabel = "Separator";
			}

			AssertVisible(
				key_fieldFieldLabel = "${webContentSeparatorFieldLabel}",
				locator1 = "DDMField#SEPARATOR");
		}

		if (isSet(webContentSingleSelection)) {
			if (!(isSet(webContentSingleSelectionFieldLabel))) {
				var webContentSingleSelectionFieldLabel = "Single Selection";
			}

			AssertChecked.assertCheckedNotVisible(
				key_fieldFieldLabel = "${webContentSingleSelectionFieldLabel}",
				key_optionValue = "${webContentSingleSelection}",
				locator1 = "WCEditWebContent#SELECTION_OPTION");
		}

		if (isSet(webContentText)) {
			if (!(isSet(webContentTextFieldLabel))) {
				var webContentTextFieldLabel = "Text";
			}

			if ("${fieldType}" == "Multiple Lines") {
				WaitForElementPresent(
					key_fieldFieldLabel = "${webContentTextFieldLabel}",
					locator1 = "DDMField#MULTIPLE_LINES");

				var actual = TestUtils.getElementTextContent(element = "//label[normalize-space(text())='${webContentTextFieldLabel}']//following-sibling::textarea");

				TestUtils.assertEquals(
					actual = "${actual}",
					expected = "${webContentText}");
			}
			else {
				AssertTextEquals.assertValue(
					key_fieldFieldLabel = "${webContentTextFieldLabel}",
					locator1 = "WCEditWebContent#TEXT_INPUT",
					value1 = "${webContentText}");
			}
		}

		if (isSet(webContentUpload)) {
			if (!(isSet(webContentUploadFieldLabel))) {
				var webContentUploadFieldLabel = "Upload";
			}

			AssertTextEquals(
				key_fieldFieldLabel = "${webContentUploadFieldLabel}",
				locator1 = "TextInput#SELECTOR_INPUT",
				value1 = "${webContentUpload}");
		}

		if (isSet(webContentWebContent)) {
			if (!(isSet(webContentWebContentFieldLabel))) {
				var webContentWebContentFieldLabel = "Web Content";
			}

			AssertTextEquals(
				key_fieldFieldLabel = "${webContentWebContentFieldLabel}",
				locator1 = "TextInput#SELECTOR_INPUT",
				value1 = "${webContentWebContent}");
		}
	}

	macro viewWithWorkflowCP {
		WebContentNavigator.gotoViewStatus(
			webContentStatus = "PENDING",
			webContentTitle = "${webContentTitle}");

		AssertTextEquals(
			key_status = "Pending",
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Pending");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "${webContentTitle}");

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "${webContentContent}");

		SelectFrameTop();
	}

	macro viewWithWorkflowPGViaAP {
		AssertTextNotPresent(value1 = "${webContentTitle}");
	}

}