definition {

	macro assertCssValueIsGreaterThan {
		var actual = Css.getCssValue(
			attribute = "${attribute}",
			element = "${element}");

		var actual = StringUtil.extractLeadingDigits("${actual}");

		TestUtils.isGreaterThan(
			actual = "${actual}",
			expected = "${expected}");
	}

	macro getCssValue {
		WaitForSPARefresh();

		var javascript = '''
function getWebElement(locator) {
	return document.evaluate(locator, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

var computedStyle = getComputedStyle(getWebElement("${element}"));

return computedStyle.getPropertyValue("${attribute}");

		''';
		var cssValue = selenium.getEval("${javascript}");

		return "${cssValue}";
	}

	macro getPseudoElementCssValue {
		WaitForSPARefresh();

		var javascript = '''
function getWebElement(locator) {
	return document.evaluate(locator, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

var computedStyle = getComputedStyle(getWebElement("${element}"),'${pseudo}');

return computedStyle.getPropertyValue("${attribute}");

		''';
		var cssValue = selenium.getEval("${javascript}");

		return "${cssValue}";
	}

	macro getStyleValue {
		WaitForSPARefresh();

		var javascript = '''
return	Array.from(document.getElementById('${id}').sheet.rules).filter(rule => rule.selectorText == `.${className}`)[0].style.${styleName};
		''';
		var styleValue = selenium.getEval("${javascript}");

		return "${styleValue}";
	}

}