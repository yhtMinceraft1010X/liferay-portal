definition {

	macro addNewProperty {
		Click(locator1 = "ACSettings#NEW_PROPERTY_BUTTON");

		Type(
			locator1 = "ACSettings#PROPERTY_INPUT",
			value1 = "${propertyName}");

		Click(locator1 = "ACSettings#SAVE_BUTTON");
	}

	macro addUserProperty {
		Click(locator1 = "ACSettings#PROPERTIES_SELECT_USERS_BUTTON");

		Click(locator1 = "ACSettings#PROPERTIES_SELECT_USERS_OKAY_BUTTON");

		Click(locator1 = "ACSettings#PROPERTIES_ADD_USER_BUTTON");

		Click(locator1 = "ACSidebar#PROPERTY_SEARCH");

		Type(
			locator1 = "ACSidebar#PROPERTY_SEARCH",
			value1 = "${emailAddress}");

		KeyPress(
			locator1 = "ACSidebar#PROPERTY_SEARCH",
			value1 = "\ENTER");

		Click(
			emailAddress = "${emailAddress}",
			locator1 = "ACSettings#PROPERTIES_SELECT_USER_EMAIL");

		Click(locator1 = "ACSettings#PROPERTIES_SUBMIT_BUTTON");

		Alert.viewSuccessMessage();

		AssertElementPresent(
			emailAddress = "${emailAddress}",
			locator1 = "ACSettings#PROPERTIES_ASSET_LIST");
	}

	macro assertCannotAddProperty {
		AssertElementPresent(locator1 = "AppBuilder#SAVE_BUTTON_DISABLED");
	}

	@summary = "Asserts that the workspace is scoped by a specific Property"
	macro assertCurrentActiveProperty {
		AssertTextEquals(
			locator1 = "ACSidebar#CURRENT_PROPERTY",
			value1 = "${propertyName}");
	}

	@summary = "Asserts that active property not present in sidebar menu"
	macro assertCurrentActivePropertyNotPresent {
		AssertTextNotEquals(
			locator1 = "ACSidebar#CURRENT_PROPERTY",
			value1 = "${propertyName}");
	}

	@summary = "Asserts the property saved in settings"
	macro assertNewCreatedProperty {
		WaitForElementPresent(locator1 = "ACSettings#PROPERTY_NAME");

		AssertTextEquals.assertPartialText(
			locator1 = "ACSettings#PROPERTY_NAME",
			value1 = "${propertyName}");
	}

	macro assertNoProperties {
		var key_textValue = "No Properties Found";

		WaitForElementPresent(locator1 = "ACUtils#GENERIC_TEXT");

		for (var key_messageValue : list "Create a property to get started.,Access our documentation to learn more.") {
			AssertElementPresent(locator1 = "ACSettings#PROPERTIES_DEFAULT_SECONDARY_DESCRIPTION");
		}
	}

	macro assertPropertyHeader {
		AssertElementPresent(
			locator1 = "ACSettings#PROPERTY_NAME_HEADER",
			propertyName = "${propertyName}");
	}

	@summary = "Asserts the list of properties shown in the Property Menu"
	macro assertPropertyMenuList {
		for (var key_propertyName : list "${propertyList}") {
			AssertElementPresent(locator1 = "ACSidebar#PROPERTY_MENU_ITEM_BY_NAME");
		}
	}

	@summary = "Asserts property not present"
	macro assertPropertyNotPresent {
		ACUtils.searchBar(searchItem = "${propertyName}");

		AssertElementNotPresent(
			locator1 = "ACSettings#PROPERTIES_ASSET_TITLE_LIST",
			value1 = "${propertyName}");
	}

	@summary = "Asserts property settings page"
	macro assertPropertyTitle {
		AssertTextEquals(
			locator1 = "ACSettings#PROPERTIES_TITLE",
			value1 = "${propertyName}");
	}

	@summary = "Asserts property title on the properties page"
	macro assertPropertyTitleList {
		AssertTextEquals(
			locator1 = "ACSettings#PROPERTIES_ASSET_TITLE_LIST",
			value1 = "${propertyName}");
	}

	macro assertSitesOverviewPropertyHeader {
		AssertElementPresent(
			locator1 = "ACSites#OVERVIEW_HEADER_PROPERTY_NAME",
			propertyName = "${propertyName}");
	}

	@summary = "Clicks the Property Menu Dropdown Button in the sidebar"
	macro clickPropertyMenuButton {
		Click(locator1 = "ACSidebar#PROPERTY_MENU_BUTTON");
	}

	@summary = "Clicks a property in the property dropdown menu"
	macro clickPropertyMenuItem {
		var key_propertyName = "${propertyName}";

		Click(locator1 = "ACSidebar#PROPERTY_MENU_ITEM_BY_NAME");
	}

	@summary = "Delete a member inside a property"
	macro deleteUserFromProperty {
		var userEmail = "${emailAddress}";

		Click(locator1 = "ACSidebar#PROPERTY_SEARCH");

		Type(
			locator1 = "ACSidebar#PROPERTY_SEARCH",
			value1 = "${userEmail}");

		KeyPress(
			locator1 = "ACSidebar#PROPERTY_SEARCH",
			value1 = "\ENTER");

		Click(
			key_itemName = "${userEmail}",
			locator1 = "AppBuilder#VERTICAL_ELLIPSIS_BUTTON");

		MenuItem.clickNoError(menuItem = "Delete");

		Click(locator1 = "ACSettings#DELETE_CONFIRMATION_BUTTON");
	}

	macro editPropertyName {
		Click(locator1 = "Icon#EDIT_PENCIL");

		Type(
			locator1 = "ACSettings#PROPERTY_INPUT",
			value1 = "${propertyName}");

		Click(
			key_title = "Settings",
			locator1 = "Header#H2_TITLE");

		AssertVisible(
			locator1 = "ACSettings#HEADER_TITLE",
			title = "${propertyName}");
	}

	@summary = "Switchs to a specific property"
	macro switchProperty {
		ACProperties.clickPropertyMenuButton();

		Type(
			locator1 = "ACSidebar#PROPERTY_SEARCH",
			value1 = "${propertyName}");

		Click(locator1 = "ACSidebar#PROPERTY_NAME");
	}

}