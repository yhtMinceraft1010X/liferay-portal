definition {

	macro addMultipleSearchQuerySuccessfully {
		var key_queryList = "${query_list}";
		var flag = "0";
		var aux = "";

		for (var x : list "${key_queryList}") {
			if ("${flag}" == "0") {
				Click(locator1 = "Icon#PLUS");

				Type(
					locator1 = "ACDefinitions#SEARCH_QUERY_INPUT",
					value1 = "${x}");

				var flag = "1";
			}
			else {
				Click(
					key_query = "${aux}",
					locator1 = "ACDefinitions#SEARCH_QUERY_ADD_BUTTON");

				Type(
					key_index = "${flag}",
					locator1 = "ACDefinitions#SEARCH_QUERY_INPUT_INDEX",
					value1 = "${x}");

				var flag = ${flag} + 1;
			}

			var aux = "${x}";
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro addSearchQuerySuccessfully {
		Click(locator1 = "Icon#PLUS");

		Type(
			locator1 = "ACDefinitions#SEARCH_QUERY_INPUT",
			value1 = "${query}");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	@summary = "Navigates to a definition in the Definitions screen. \  @param definitionType the name of the definition that will be navigated to."
	macro assertIndividualAttributesSource {
		var key_dataSourceName = "${dataSourceName}";

		for (var attributeName : list "${attributeList}") {
			Type(
				locator1 = "ACSettings#SEARCH_BAR",
				value1 = "${attributeName}");

			ACDefinitions.openIndividualAttributeDetails(attributeName = "${attributeName}");

			AssertTextEquals(
				locator1 = "ACDefinitions#SOURCE_NAME",
				value1 = "${dataSourceName}");

			ACUtils.closeModal();

			ACUtils.clearSearchBar();
		}
	}

	macro deleteAllSearchQuery {
		ACUtils.launchAC();

		ACNavigation.goToSettings();

		ACSettings.goToDefinitions();

		ACDefinitions.goToDefinitionType(definitionType = "Search");

		while (IsElementPresent(key_query = "", locator1 = "ACDefinitions#SEARCH_QUERY_DELETE_BUTTON")) {
			Click(
				key_query = "",
				locator1 = "ACDefinitions#SEARCH_QUERY_DELETE_BUTTON");
		}

		Button.clickSave();
	}

	macro deleteSearchQuerySuccessfully {
		Click(
			key_query = "${query}",
			locator1 = "ACDefinitions#SEARCH_QUERY_DELETE_BUTTON");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro editSearchQuerySuccessfully {
		Type(
			locator1 = "ACDefinitions#SEARCH_QUERY_INPUT",
			value1 = "${query}");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro goToDefinitionType {
		var key_definitionType = "${definitionType}";

		Click(locator1 = "ACDefinitions#DEFINITION_TYPE");
	}

	macro hideAllEvents {
		var key_actionButton = "Hide";

		KeyPress(
			locator1 = "ACSettings#SELECT_ALL_CHECKBOX",
			value1 = "\SPACE");

		ACUtils.clickAnyButton(button = "${key_actionButton}");

		ACUtils.clickAnyButton(button = "${key_actionButton}");

		KeyPress(
			locator1 = "ACSettings#SELECT_ALL_CHECKBOX",
			value1 = "\SPACE");
	}

	macro noViewAddSearchQueryButton {
		AssertElementNotPresent(
			key_query = "${query}",
			locator1 = "ACDefinitions#SEARCH_QUERY_ADD_BUTTON");
	}

	macro noViewSearchQuery {
		AssertElementNotPresent(
			key_query = "${query}",
			locator1 = "ACDefinitions#PRESENT_SEARCH_QUERY_INPUT");
	}

	macro openIndividualAttributeDetails {
		var key_attributeName = "${attributeName}";

		Click(locator1 = "ACDefinitions#ATTRIBUTE_NAME");
	}

	macro unhideAllEvents {
		var key_actionButton = "Show";

		KeyPress(
			locator1 = "ACSettings#SELECT_ALL_CHECKBOX",
			value1 = "\SPACE");

		ACUtils.clickAnyButton(button = "${key_actionButton}");

		KeyPress(
			locator1 = "ACSettings#SELECT_ALL_CHECKBOX",
			value1 = "\SPACE");
	}

	macro unhideEvent {
		var key_actionButton = "Show";
		var key_nameList = "${customEventName}";

		WaitForPageLoad();

		while (IsElementNotPresent(locator1 = "ACUtils#NAME_LIST") && (maxIterations = "50")) {
			ACUtils.searchBar(searchItem = "${customEventName}");
		}

		MouseOver(locator1 = "ACUtils#NAME_LIST");

		Click(locator1 = "ACDefinitions#HIDE_UNHIDE_EVENT_BUTTON");
	}

	macro viewHiddenEvents {
		for (var customEventName : list "${customEventNameList}") {
			var key_actionButton = "Show";
			var key_nameList = "${customEventName}";

			AssertElementPresent(locator1 = "ACDefinitions#HIDE_EVENT_ICON");

			MouseOver(locator1 = "ACUtils#NAME_LIST");

			AssertElementPresent(locator1 = "ACDefinitions#HIDE_UNHIDE_EVENT_BUTTON");
		}
	}

	macro viewSearchQuery {
		AssertElementPresent(
			key_query = "${query}",
			locator1 = "ACDefinitions#PRESENT_SEARCH_QUERY_INPUT");
	}

	macro viewUnhideEvent {
		for (var customEventName : list "${customEventNameList}") {
			var key_actionButton = "Hide";
			var key_nameList = "${customEventName}";

			AssertElementNotPresent(locator1 = "ACDefinitions#HIDE_EVENT_ICON");

			MouseOver(locator1 = "ACUtils#NAME_LIST");

			AssertElementPresent(locator1 = "ACDefinitions#HIDE_UNHIDE_EVENT_BUTTON");
		}
	}

}