definition {

	macro assertDiscardIsUnavailableForInactivePublication {
		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		Click(
			key_publicationName = "${publicationName}",
			locator1 = "Publications#PUBLISHED_PUBLICATION_NAME");

		WaitForElementPresent(locator1 = "PublicationsChanges#CHANGE_HEADER");

		var key_changeCategory = "${changeCategory}";
		var key_changeTitle = "${changeTitle}";

		Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE");

		AssertElementNotPresent(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_DROPDOWN");
	}

	macro assertScheduledPublicationPublished {
		Click(
			key_navBarTitle = "History",
			locator1 = "Publications#MANAGE_PUBLICATIONS_NAVBAR_TITLE");

		Pause(locator1 = "240000");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		var key_publicationName = "${publicationName}";

		AssertTextEquals(
			locator1 = "Publications#LIST_PUBLISHED_STATUS",
			value1 = "Published");
	}

	macro cancelPublicationCreation {
		PublicationsNavigator.openPublicationsAdmin();

		Click(locator1 = "Button#PLUS");

		Type(
			locator1 = "Publications#PUBLICATION_NAME",
			value1 = "${publicationName}");

		Button.clickCancel();
	}

	macro createNewPublication {
		if ("${gotoPublicationsAdmin}" == "true") {
			PublicationsNavigator.openPublicationsAdmin();

			Click(locator1 = "Button#PLUS");
		}
		else {
			Click(locator1 = "Publications#PUBLICATIONS_INDICATOR_BUTTON");

			MenuItem.click(menuItem = "Create New Publication");
		}

		if (isSet(publicationName)) {
			Type(
				locator1 = "Publications#PUBLICATION_NAME",
				value1 = "${publicationName}");
		}

		if (isSet(publicationDescription)) {
			Type(
				locator1 = "Publications#PUBLICATION_DESCRIPTION",
				value1 = "${publicationDescription}");
		}

		Button.click(button = "Create");

		Alert.viewSuccessMessage();
	}

	macro deletePublication {
		PublicationsNavigator._gotoPublicationEllipsisItem(
			menuItem = "Delete",
			publicationName = "${publicationName}");

		AssertConfirm(value1 = "Are you sure you want to delete this publication? You will permanently lose the changes in this publication. You will not be able to undo this operation.");

		AssertTextEquals(
			locator1 = "Publications#MANAGE_PUBLICATIONS_PAGE_TITLE",
			value1 = "Publications");

		Alert.viewSuccessMessage();
	}

	macro disablePublications {
		ApplicationsMenu.gotoPortlet(
			category = "Publications",
			panel = "Applications",
			portlet = "Publications");

		Click.waitForMenuToggleJSClick(locator1 = "Publications#PUBLICATIONS_ELLIPSIS");

		MenuItem.click(menuItem = "Settings");

		Uncheck.uncheckToggleSwitch(locator1 = "Publications#PUBLICATIONS_TOGGLE_SWITCH");

		Click(locator1 = "Button#SAVE");
	}

	macro enablePublications {
		ApplicationsMenu.gotoPortlet(
			category = "Publications",
			panel = "Applications",
			portlet = "Publications");

		Check.checkToggleSwitch(locator1 = "Publications#PUBLICATIONS_TOGGLE_SWITCH");

		Click(locator1 = "Button#SAVE");
	}

	macro inviteUsers {
		PublicationsNavigator._gotoPublicationEllipsisItem(
			menuItem = "Invite Users",
			publicationName = "${publicationName}");

		if (isSet(publicationRole)) {
			Click(
				key_title = "Viewers can view. Viewers cannot edit, publish, or invite other users.",
				locator1 = "Button#ANY_TITLE");

			Click(
				key_publicationRole = "${publicationRole}",
				locator1 = "Publications#PUBLICATION_ROLE_BUTTON");
		}

		for (var keyword : list "${userInvite}") {
			Type(
				locator1 = "Publications#KEYWORD_TEXTFIELD",
				value1 = "${keyword}");

			KeyPress(
				locator1 = "Publications#KEYWORD_TEXTFIELD",
				value1 = "\ENTER");
		}

		Button.clickNoError(button = "Send");

		if ("${userMissingPublicationsRole}" == "true") {
			AssertConfirm(value1 = "You are inviting user ${userInvite} who does not have access to Publications. This user will be assigned the Publications User role to gain access to Publications.");
		}

		Alert.viewSuccessMessage();
	}

	macro publishPublication {
		Click(locator1 = "Publications#PUBLISH_BUTTON");

		Alert.viewSuccessMessage();

		PublicationsNavigator.openPublicationsHistory();

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		var key_publicationName = "${publicationName}";

		AssertTextEquals(
			locator1 = "Publications#LIST_PUBLISHED_STATUS",
			value1 = "Published");
	}

	macro revertPublication {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		var key_publicationName = "${publicationName}";

		Click(locator1 = "Publications#LIST_REVERT_BUTTON");

		AssertTextEquals(
			locator1 = "Publications#PUBLICATION_NAME",
			value1 = "Revert &quot;${publicationName}&quot;");

		if ("${publishNow}" == "true") {
			Click(
				key_radioName = "Now",
				locator1 = "Publications#REVERT_SCREEN_RADIO_OPTION",
				value1 = "Now");

			AssertTextEquals.assertPartialText(
				key_radioHelpMessage = "Revert your changes to production immediately",
				locator1 = "Publications#REVERT_SCREEN_RADIO_HELP",
				value1 = "Revert your changes to production immediately");
		}
		else {
			Click(
				key_radioName = "Later",
				locator1 = "Publications#REVERT_SCREEN_RADIO_OPTION",
				value1 = "Later");

			AssertTextEquals.assertPartialText(
				key_radioHelpMessage = "Make additional changes and publish them when you are ready",
				locator1 = "Publications#REVERT_SCREEN_RADIO_HELP",
				value1 = "Make additional changes and publish them when you are ready");
		}

		Button.click(button = "Revert and Create Publication");

		Alert.viewSuccessMessage();

		AssertTextPresent(
			key_publicationName = "Revert &quot;${publicationName}&quot;",
			locator1 = "Publications#PUBLICATIONS_INDICATOR_TITLE",
			value1 = "Revert &quot;${publicationName}&quot;");
	}

	macro schedulePublication {
		if ("${gotoPublicationsAdmin}" == "true") {
			PublicationsNavigator.openPublicationsAdmin();

			PublicationsNavigator._gotoPublicationEllipsisItem(
				menuItem = "Schedule",
				publicationName = "${publicationName}");
		}
		else if ("${reschedule}" == "true") {
			PublicationsNavigator.openPublicationsScheduled();

			PublicationsNavigator._gotoPublicationEllipsisItem(
				menuItem = "Reschedule",
				publicationName = "${publicationName}");

			// Workaround LPS-123416

			Click.mouseOverClick(locator1 = "Publications#DELETE_THE_ENTERED_TIME_BUTTON");
		}
		else {
			PublicationsNavigator.gotoReviewChanges();

			Click(locator1 = "Publications#SCHEDULE_NAV_BAR");
		}

		var publishDateDay = Time.getUTCDay();

		var publishDateMonth = Time.getUTCMonth();

		var publishDateYear = Time.getUTCYear();

		var publishDate = "${publishDateYear}-${publishDateMonth}-${publishDateDay}";

		Type(
			locator1 = "Publications#PUBLISH_DATE",
			value1 = "${publishDate}");

		var publishTimeHours = Time.getUTCHours();

		var publishTimeMinutes = Time.getUTCMinutes();

		if ("${utcMinutes}" == "58") {
			var publishTimeHours = ${publishTimeHours} + 1;
			var publishTimeMinutes = "00";
		}
		else if ("${utcMinutes}" == "59") {
			var publishTimeHours = ${publishTimeHours} + 1;
			var publishTimeMinutes = "01";
		}
		else {
			var publishTimeMinutes = ${publishTimeMinutes} + 2;
		}

		Click(locator1 = "Publications#PUBLISH_TIME_HOURS");

		DoubleClick.javaScriptDoubleClick(locator1 = "Publications#PUBLISH_TIME_HOURS");

		Type.sendKeys(
			locator1 = "Publications#PUBLISH_TIME_HOURS",
			value1 = "${publishTimeHours}");

		Click(locator1 = "Publications#PUBLISH_TIME_MINUTES");

		DoubleClick.javaScriptDoubleClick(locator1 = "Publications#PUBLISH_TIME_MINUTES");

		Type.sendKeys(
			locator1 = "Publications#PUBLISH_TIME_MINUTES",
			value1 = "${publishTimeMinutes}");

		if ("${reschedule}" == "true") {
			Click(locator1 = "Publications#RESCHEDULE_BUTTON");
		}
		else {
			Click(locator1 = "Publications#SCHEDULE_BUTTON");
		}

		Alert.viewSuccessMessage();
	}

	macro search {
		Search.searchCP(searchTerm = "${publicationName}");

		var key_publicationName = "${publicationName}";

		AssertTextEquals(
			locator1 = "Publications#PUBLISHED_PUBLICATION_NAME",
			value1 = "${publicationName}");
	}

	macro selectPublication {
		if ("${gotoPublicationsAdmin}" == "true") {
			PublicationsNavigator.openPublicationsAdmin();

			PublicationsNavigator._gotoPublicationEllipsisItem(
				menuItem = "Work on Publication",
				publicationName = "${publicationName}");
		}
		else {
			Click(locator1 = "Publications#PUBLICATIONS_INDICATOR_BUTTON");

			MenuItem.click(menuItem = "Select a Publication");

			SelectFrameTop(value1 = "relative=top");

			var key_publicationName = "${publicationName}";

			Click(
				locator1 = "Publications#SELECT_PUBLICATION_NAME",
				value1 = "${publicationName}");
		}

		AssertTextPresent(
			locator1 = "Publications#PUBLICATIONS_INDICATOR_TITLE",
			value1 = "${publicationName}");
	}

	macro unschedulePublication {
		PublicationsNavigator.openPublicationsScheduled();

		PublicationsNavigator._gotoPublicationEllipsisItem(
			menuItem = "Unschedule",
			publicationName = "${publicationName}");
	}

	macro viewAutomaticallyResolved {
		AssertElementPresent(locator1 = "Publications#AUTOMATICALLY_RESOLVED_TABLE");

		AssertElementPresent(
			key_entryTitle = "${entryTitle}",
			key_successMessage = "${successMessage}",
			locator1 = "Publications#CONFLICTING_CHANGES_SUCCESS_CONTENT");
	}

	macro viewConflictingChangesWarning {
		AssertElementPresent(
			key_warningMessage = "${warningMessage}",
			locator1 = "Message#WARNING_SPECIFIC");
	}

	macro viewNeedsManualResolution {
		AssertElementPresent(locator1 = "Publications#NEEDS_MANUAL_RESOLUTION_TABLE");

		AssertElementPresent(
			key_entryTitle = "${entryTitle}",
			key_warningMessage = "${warningMessage}",
			locator1 = "Publications#CONFLICTING_CHANGES_WARNING_CONTENT");

		AssertVisible(locator1 = "Publications#DISABLED_PUBLISH_BUTTON");
	}

	macro viewPublicationOrderInHistory {
		PublicationsNavigator.openPublicationsHistory();

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		var resultOrder = "0";

		for (var publicationName : list "${publicationList}") {
			var resultOrder = ${resultOrder} + 1;

			AssertTextEquals.assertPartialText(
				locator1 = "Publications#PUBLICATION_ORDER_IN_HISTORY",
				resultOrder = "${resultOrder}",
				value1 = "${publicationName}");
		}
	}

	macro viewPublicationPublished {
		PublicationsNavigator.openPublicationsHistory();

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		// Workaround LPS-115320

		Refresh();

		var key_publicationName = "${publicationName}";

		AssertTextEquals(
			locator1 = "Publications#LIST_PUBLISHED_STATUS",
			value1 = "Published");
	}

	macro workOnProduction {
		Click(locator1 = "Publications#PUBLICATIONS_INDICATOR_BUTTON");

		ClickNoError(
			key_menuItem = "Work on Production",
			locator1 = "MenuItem#ANY_MENU_ITEM");

		AssertConfirm(value1 = "Any changes made in production will immediately be live. Continue to production?");
	}

}