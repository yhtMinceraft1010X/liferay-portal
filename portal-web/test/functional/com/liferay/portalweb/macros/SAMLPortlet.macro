definition {

	@description = "Add a user attribute to attribute mapping that is invalid for user matching and then select it for user resolution"
	macro addAndSelectInvalidAttributeForUserMatching {
		Click(locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USER_RESOLUTION_ATTRIBUTE");

		SAMLPortlet.addIdentityProviderConnectionAttributeMapping(idpAttributeMapping = "${idpAttributeMapping}");

		Click(
			key_index = "0",
			locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USE_TO_MATCH_USERS_RADIO");

		Button.clickSave();
	}

	macro addIdentityProviderConnection {
		AssertClick(
			locator1 = "CPSAMLAdminIdentityProviderConnection#ADD_IDENTITY_PROVIDER_BUTTON",
			value1 = "Add Identity Provider");

		Type(
			locator1 = "TextInput#SAML_NAME_FIELD",
			value1 = "${idpNameId}");

		Type(
			locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_ENTITY_ID_FIELD",
			value1 = "${idpEntityId}");

		Check(locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_ENABLED_CHECKBOX");

		if (isSet(uploadMetadataXML)) {
			Click(locator1 = "CPSAMLAdmin#SAML_UPLOAD_METADATA_XML");

			Click.javaScriptClick(locator1 = "CPSAMLAdmin#SAML_CHOOSE_METADATA_XML_FILE");

			UploadDependencyFile.uploadFile(fileName = "${uploadMetadataXML}");

			var idPMetadataXML = selenium.getElementValue("CPSAMLAdmin#SAML_CHOOSE_METADATA_XML_FILE");

			echo("## * IdP Metadata XML File Name: ${idPMetadataXML}");
		}
		else {
			Type(
				locator1 = "TextInput#SAML_METADATA_URL_FIELD",
				value1 = "${idpMetadataURL}");
		}

		if (isSet(nameIdentifierFormat)) {
			Select(
				locator1 = "Select#SAML_NAME_IDENTIFIER_FORMAT_SELECT",
				value1 = "${nameIdentifierFormat}");
		}
		else {
			Select(
				locator1 = "Select#SAML_NAME_IDENTIFIER_FORMAT_SELECT",
				value1 = "Email Address");
		}

		if ("${userResolution}" == "none") {
			Click(locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USER_RESOLUTION_NONE");
		}
		else if ("${userResolution}" == "dynamic") {
			Click(locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USER_RESOLUTION_DYNAMIC");
		}
		else if ("${userResolution}" == "attribute") {
			Click(locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USER_RESOLUTION_ATTRIBUTE");
		}

		if (isSet(idpAttributeMappingText)) {
			SAMLPortlet.addIdentityProviderConnectionAttributeMappingWithCustomAttributes(
				idpAttributeMapping = "${idpAttributeMapping}",
				idpAttributeMappingText = "${idpAttributeMappingText}");
		}
		else if (isSet(idpAttributeMapping)) {
			SAMLPortlet.addIdentityProviderConnectionAttributeMapping(idpAttributeMapping = "${idpAttributeMapping}");
		}

		if (isSet(idpCustomFieldAttributeMappingText)) {
			SAMLPortlet.addIdentityProviderConnectionCustomFieldAttributeMappingWithCustomAttributes(
				idpCustomFieldAttributeMapping = "${idpCustomFieldAttributeMapping}",
				idpCustomFieldAttributeMappingText = "${idpCustomFieldAttributeMappingText}");
		}
		else if (isSet(idpCustomFieldAttributeMapping)) {
			SAMLPortlet.addIdentityProviderConnectionCustomFieldAttributeMapping(idpCustomFieldAttributeMapping = "${idpCustomFieldAttributeMapping}");
		}

		if ("${userResolution}" == "attribute") {
			if (isSet(customFieldUserMatching)) {
				Click(
					key_index = "${userMatchingAttributeIndex}",
					locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_CUSTOM_FIELD_USE_TO_MATCH_USERS_RADIO");
			}
			else {
				Click(
					key_index = "${userMatchingAttributeIndex}",
					locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USE_TO_MATCH_USERS_RADIO");
			}
		}

		if (isSet(idpKeepAliveURL)) {
			Type(
				locator1 = "CPSAMLAdmin#SAML_KEEP_ALIVE_URL",
				value1 = "${idpKeepAliveURL}");
		}

		PortletEntry.save();
	}

	macro addIdentityProviderConnectionAttributeMapping {
		var attributeRowId = "0";

		for (var userfieldExpressionName : list "${idpAttributeMapping}") {
			Select(
				key_index = "${attributeRowId}",
				locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USER_FIELD_EXPRESSION_DROPDOWN",
				value1 = "${userfieldExpressionName}");

			Type(
				key_index = "${attributeRowId}",
				locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_SAML_ATTRIBUTE_TEXT",
				value1 = "${userfieldExpressionName}");

			var attributeRowId = ${attributeRowId} + 1;

			Click(locator1 = "Button#ADD_ROW");
		}
	}

	@description = "This macro should be used when the values of the User Field Expression and SAML Attribute are different inside the Attribute Mapping"
	macro addIdentityProviderConnectionAttributeMappingWithCustomAttributes {
		var attributeRowId = "0";
		var attributeRowId2 = "0";

		for (var userfieldExpressionName : list "${idpAttributeMapping}") {
			Select(
				key_index = "${attributeRowId}",
				locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USER_FIELD_EXPRESSION_DROPDOWN",
				value1 = "${userfieldExpressionName}");

			var attributeRowId = ${attributeRowId} + 1;

			Click(locator1 = "Button#ADD_ROW");
		}

		for (var userfieldExpressionText : list "${idpAttributeMappingText}") {
			Type(
				key_index = "${attributeRowId2}",
				locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_SAML_ATTRIBUTE_TEXT",
				value1 = "${userfieldExpressionText}");

			var attributeRowId2 = ${attributeRowId2} + 1;
		}
	}

	macro addIdentityProviderConnectionCustomFieldAttributeMapping {
		var attributeRowId = "0";

		for (var userfieldExpressionName : list "${idpCustomFieldAttributeMapping}") {
			Select(
				key_index = "${attributeRowId}",
				locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_CUSTOM_FIELD_EXPRESSION_DROPDOWN",
				value1 = "${userfieldExpressionName}");

			Type(
				key_index = "${attributeRowId}",
				locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_CUSTOM_FIELD_ATTRIBUTE_TEXT",
				value1 = "${userfieldExpressionName}");

			var attributeRowId = ${attributeRowId} + 1;

			Click(locator1 = "Button#ADD_ROW_LAST");
		}
	}

	@description = "This macro should be used when the values of the Custom field User Field Expression and SAML Attribute are different inside the Attribute Mapping"
	macro addIdentityProviderConnectionCustomFieldAttributeMappingWithCustomAttributes {
		var attributeRowId = "0";
		var attributeRowId2 = "0";

		for (var userfieldExpressionName : list "${idpCustomFieldAttributeMapping}") {
			Select(
				key_index = "${attributeRowId}",
				locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_CUSTOM_FIELD_EXPRESSION_DROPDOWN",
				value1 = "${userfieldExpressionName}");

			var attributeRowId = ${attributeRowId} + 1;

			Click(locator1 = "Button#ADD_ROW_LAST");
		}

		for (var userfieldExpressionText : list "${idpCustomFieldAttributeMappingText}") {
			Type(
				key_index = "${attributeRowId2}",
				locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_CUSTOM_FIELD_ATTRIBUTE_TEXT",
				value1 = "${userfieldExpressionText}");

			var attributeRowId2 = ${attributeRowId2} + 1;
		}
	}

	@description = "Add Identity Provider Connection with only the Name and Entity ID filled out"
	macro addIdentityProviderConnectionWithBasicSetup {
		AssertClick(
			locator1 = "CPSAMLAdminIdentityProviderConnection#ADD_IDENTITY_PROVIDER_BUTTON",
			value1 = "Add Identity Provider");

		Type(
			locator1 = "TextInput#SAML_NAME_FIELD",
			value1 = "${idpEntityId}");

		Type(
			locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_ENTITY_ID_FIELD",
			value1 = "${idpEntityId}");
	}

	@description = "Add Identity Provider Connection with only the Name and Entity ID filled out and user mapping is selected but empty"
	macro addIdentityProviderConnectionWithBasicSetupWithEmptyUserMapping {
		AssertClick(
			locator1 = "CPSAMLAdminIdentityProviderConnection#ADD_IDENTITY_PROVIDER_BUTTON",
			value1 = "Add Identity Provider");

		Type(
			locator1 = "TextInput#SAML_NAME_FIELD",
			value1 = "${idpEntityId}");

		Type(
			locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_ENTITY_ID_FIELD",
			value1 = "${idpEntityId}");

		Click(locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USER_RESOLUTION_ATTRIBUTE");

		Click(
			key_index = "0",
			locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_USE_TO_MATCH_USERS_RADIO");

		Button.clickSave();
	}

	macro addServiceProviderConnection {
		AssertClick(
			locator1 = "CPSAMLAdminServiceProviderConnections#ADD_SERVICE_PROVIDER_BUTTON",
			value1 = "Add Service Provider");

		Type(
			locator1 = "TextInput#SAML_NAME_FIELD",
			value1 = "${spNameId}");

		Type(
			locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_ENTITY_ID_FIELD",
			value1 = "${spEntityId}");

		Check(locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_ENABLED_CHECKBOX");

		if (isSet(uploadMetadataXML)) {
			Click(locator1 = "CPSAMLAdmin#SAML_UPLOAD_METADATA_XML");

			Click.javaScriptClick(locator1 = "CPSAMLAdmin#SAML_CHOOSE_METADATA_XML_FILE");

			UploadDependencyFile.uploadFile(fileName = "${uploadMetadataXML}");

			var spMetadataXML = selenium.getElementValue("CPSAMLAdmin#SAML_CHOOSE_METADATA_XML_FILE");

			echo("## * SP Metadata XML File Name: ${spMetadataXML}");
		}
		else {
			Type(
				locator1 = "TextInput#SAML_METADATA_URL_FIELD",
				value1 = "${spMetadataURL}");
		}

		if (!(isSet(nameIdentifierAttributeName))) {
			var nameIdentifierAttributeName = "emailAddress";
		}

		Type(
			locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_NAME_IDENTIFIER_ATTRIBUTE_NAME_FIELD",
			value1 = "${nameIdentifierAttributeName}");

		if (isSet(nameIdentifierFormat)) {
			Select(
				locator1 = "Select#SAML_NAME_IDENTIFIER_FORMAT_SELECT",
				value1 = "${nameIdentifierFormat}");
		}

		if (isSet(spAttributes)) {
			Check(locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_ATTRIBUTE_ENABLE");

			Type(
				locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_ATTRIBUTE_TEXTAREA",
				value1 = "${spAttributes}");
		}

		if (isSet(spKeepAliveURL)) {
			Type(
				locator1 = "CPSAMLAdmin#SAML_KEEP_ALIVE_URL",
				value1 = "${spKeepAliveURL}");
		}

		PortletEntry.save();
	}

	macro configureIdentityProvider {
		if ("${signMetadata}" == "disable") {
			Uncheck(locator1 = "CPSAMLAdminIdentityProvider#IDENTITY_PROVIDER_SIGN_METADATA_CHECKBOX");
		}
		else {
			Check(locator1 = "CPSAMLAdminIdentityProvider#IDENTITY_PROVIDER_SIGN_METADATA_CHECKBOX");
		}

		if ("${authnRequestSignatureRequired}" == "disable") {
			Uncheck(locator1 = "CPSAMLAdminIdentityProvider#IDENTITY_PROVIDER_AUTHN_REQUEST_SIGNATURE_REQUIRED_CHECKBOX");
		}
		else {
			Check(locator1 = "CPSAMLAdminIdentityProvider#IDENTITY_PROVIDER_AUTHN_REQUEST_SIGNATURE_REQUIRED_CHECKBOX");
		}

		PortletEntry.save();
	}

	macro configureIdentityProviderConnection {
		Click.waitForMenuToggleJSClick(
			key_samlEntityId = "${samlEntityId}",
			locator1 = "CPSAMLAdmin#SAML_CONNECTION_ACTION_BUTTON");

		MenuItem.click(menuItem = "Edit");

		if ("${forceAuthn}" == "enable") {
			Check(locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_FORCE_AUTHN_CHECKBOX");
		}

		PortletEntry.save();
	}

	macro configureServiceProvider {
		if ("${ldapImport}" == "enable") {
			Check(locator1 = "CPSAMLAdminServiceProvider#SERVICE_PROVIDER_LDAP_IMPORT_ENABLED_CHECKBOX");
		}

		if ("${signAuthnRequests}" == "disable") {
			Uncheck(locator1 = "CPSAMLAdminServiceProvider#SERVICE_PROVIDER_SIGN_AUTHN_REQUESTS_CHECKBOX");
		}

		if ("${allowShowingTheLoginPortlet}" == "disable") {
			Uncheck(locator1 = "CPSAMLAdminServiceProvider#SERVICE_PROVIDER_ALLOW_SHOWING_THE_LOGIN_PORTLET_CHECKBOX");
		}

		PortletEntry.save();
	}

	macro configureServiceProviderConnection {
		Click.waitForMenuToggleJSClick(
			key_samlEntityId = "${samlEntityId}",
			locator1 = "CPSAMLAdmin#SAML_CONNECTION_ACTION_BUTTON");

		MenuItem.click(menuItem = "Edit");

		if ("${forceEncryption}" == "enable") {
			Check(locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_FORCE_ENCRYPTION");
		}

		PortletEntry.save();
	}

	macro deleteSAMLConnection {
		Click.waitForMenuToggleJSClick(
			key_samlEntityId = "${samlEntityId}",
			locator1 = "CPSAMLAdmin#SAML_CONNECTION_ACTION_BUTTON");

		ClickNoError(
			key_menuItem = "Delete",
			locator1 = "MenuItem#ANY_MENU_ITEM");

		AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	@description = "Edit attribute mapping of SP, in Identity Provider Configurations"
	macro editAttributeMappingOfSP {
		AssertClick(
			idpEntityId = "${idpEntityId}",
			locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_NAME",
			value1 = "${idpEntityId}");

		var attributeRowId = "1";

		for (var loop : list "${idpAttributeMappingOld}") {
			Click(
				key_rowIndexNumber = "${attributeRowId}",
				locator1 = "Button#DELETE_ROW_N");

			var attributeRowId = ${attributeRowId} + 1;
		}

		PortletEntry.save();

		AssertClick(
			idpEntityId = "${idpEntityId}",
			locator1 = "CPSAMLAdminIdentityProviderConnection#IDENTITY_PROVIDER_CONNECTION_NAME",
			value1 = "${idpEntityId}");

		if (isSet(idpAttributeMappingText)) {
			SAMLPortlet.addIdentityProviderConnectionAttributeMappingWithCustomAttributes(
				idpAttributeMapping = "${idpAttributeMappingNew}",
				idpAttributeMappingText = "${idpAttributeMappingText}");
		}
		else {
			SAMLPortlet.addIdentityProviderConnectionAttributeMapping(idpAttributeMapping = "${idpAttributeMappingNew}");
		}

		PortletEntry.save();
	}

	@description = "Edit the list of attributes sent by IdP, in Service Provider Configurations"
	macro editAttributesSentByIdP {
		AssertClick(
			locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_NAME",
			spEntityId = "${spEntityId}",
			value1 = "${spEntityId}");

		if (isSet(spAttributes)) {
			Check(locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_ATTRIBUTE_ENABLE");

			Type(
				locator1 = "CPSAMLAdminServiceProviderConnections#SERVICE_PROVIDER_CONNECTION_ATTRIBUTE_TEXTAREA",
				value1 = "${spAttributes}");
		}

		PortletEntry.save();
	}

}