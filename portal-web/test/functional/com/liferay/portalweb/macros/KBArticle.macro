definition {

	macro _gotoChildArticle {
		var key_kbChildArticleTitle = "${kbChildArticleTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "Wiki#CHILD_PAGE_HEADER",
			value1 = "Child Article");

		AssertTextEquals(
			locator1 = "KnowledgeBase#CHILD_PAGE_TITLE",
			value1 = "${kbChildArticleTitle}");

		AssertClick(
			locator1 = "KnowledgeBase#CHILD_PAGE_TITLE",
			value1 = "${kbChildArticleTitle}");
	}

	macro addChildArticleViaKBAdmin {
		var key_rowEntry = "${kbArticleTitle}";

		if (IsElementPresent(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS")) {
			Click(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");
		}
		else {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");
		}

		MenuItem.click(menuItem = "Add Child Article");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbChildArticleTitle}");

		CKEditor.addContent(content = "${kbChildArticleContent}");

		PortletEntry.publish();
	}

	macro addChildPGViaKBDisplay {
		AssertClick(
			key_kbTool = "Add Child Article",
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "Add Child Article");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitle}");

		CKEditor.addContent(content = "${kbArticleContent}");

		Panel.expandPanel(panel = "Configuration");

		if (isSet(kbArticleFriendlyURL)) {
			var kbArticleTitleFormatted = StringUtil.lowerCase("${kbArticleFriendlyURL}");
			var kbArticleTitleFormatted = StringUtil.replace("${kbArticleTitleFormatted}", " ", "-");

			Type(
				locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
				value1 = "${kbArticleTitleFormatted}");
		}
		else {
			var kbArticleTitleFormatted = StringUtil.lowerCase("${kbArticleTitle}");
			var kbArticleTitleFormatted = StringUtil.replace("${kbArticleTitleFormatted}", " ", "-");

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
				value1 = "${kbArticleTitleFormatted}");
		}

		if ("${cancel}" == "true") {
			Button.clickCancel();
		}
		else if ("${saveAsDraft}" == "true") {
			Button.clickSaveAsDraft();
		}
		else {
			AssertClick(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");
		}
	}

	macro addCP {
		if (isSet(kbTemplateTitle)) {
			LexiconEntry.gotoAddMenuItem(menuItem = "${kbTemplateTitle}");
		}
		else {
			LexiconEntry.gotoAddMenuItem(menuItem = "Basic Article");
		}

		AssertElementPresent(locator1 = "TextInput#TITLE");

		if (isSet(specialCharacters)) {
			Type.sendKeys(
				locator1 = "TextInput#TITLE",
				value1 = "${kbArticleTitle}");
		}
		else {
			Type(
				locator1 = "TextInput#TITLE",
				value1 = "${kbArticleTitle}");
		}

		Click.clickAt(locator1 = "TextInput#TITLE");

		Panel.expandPanel(panel = "Configuration");

		if (isSet(kbArticleFriendlyURL)) {
			var kbArticleTitleFormatted = StringUtil.lowerCase("${kbArticleFriendlyURL}");
			var kbArticleTitleFormatted = StringUtil.replace("${kbArticleTitleFormatted}", " ", "-");

			Type(
				locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
				value1 = "${kbArticleTitleFormatted}");
		}
		else {
			var kbArticleTitleFormatted = StringUtil.lowerCase("${kbArticleTitle}");
			var kbArticleTitleFormatted = StringUtil.replace("${kbArticleTitleFormatted}", " ", "-");

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
				value1 = "${kbArticleTitleFormatted}");
		}

		if ("${kbArticleAddViaSource}" == "true") {
			CKEditor.addSourceContent(content = "${kbArticleContentSource}");
		}
		else if ("${kbArticleAddViaTemplate}" == "true") {
			CKEditor.addContent(kbArticleContentEdit = "${kbArticleContent}");
		}
		else {
			CKEditor.addContent(content = "${kbArticleContent}");
		}

		if (isSet(embedVideo)) {
			WaitForLiferayEvent.initializeLiferayEventLog();

			Click.pauseClickAt(locator1 = "CKEditor#TOOLBAR_VIDEO_BUTTON");

			if ("${navTab}" == "Documents and Media") {
				ItemSelector.addVideoFromDM(
					depotName = "${depotName}",
					navTab = "${navTab}",
					videoShortcutPreview = "${videoShortcutPreview}",
					videoShortcutTitle = "${videoShortcutTitle}");

				if (isSet(viewInternalVideoPreview)) {
					SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

					Pause(locator1 = "5000");

					DMDocument.viewInternalVideoPreview(videoName = "${videoName}");
				}
			}
			else if (isSet(videoURL)) {
				ItemSelector.addVideo(
					extractedVideoShortcutTitle = "${extractedVideoShortcutTitle}",
					videoShortcutDescription = "${videoShortcutDescription}",
					videoShortcutPreview = "${videoShortcutPreview}",
					videoShortcutTitle = "${videoShortcutTitle}",
					videoURL = "${videoURL}");
			}
			else {
				ItemSelector.addVideoFromURL(
					navTab = "${navTab}",
					videoSourceURL = "${embedVideo}");
			}
		}

		if (isSet(kbArticleAttachment)) {
			KBArticle.selectAttachmentCP(kbArticleAttachment = "${kbArticleAttachment}");
		}

		if (isSet(kbArticleSourceURL)) {
			Type(
				locator1 = "CKEditor#SOURCE_URL",
				value1 = "${kbArticleSourceURL}");
		}

		if (isSet(kbArticleSection)) {
			AssertClick(
				key_kbArticleSection = "${kbArticleSection}",
				locator1 = "KnowledgeBaseArticle#SECTIONS_SELECT",
				value1 = "${kbArticleSection}");
		}

		if (isSet(assetType)) {
			RelatedAssets.selectAsset(
				assetTitle = "${assetTitle}",
				assetType = "${assetType}");
		}

		if (isSet(categoryName)) {
			Panel.expandPanel(panel = "Categorization");

			AssetCategorization.addCategory(
				categoryName = "${categoryName}",
				vocabularyName = "${vocabularyName}");
		}

		if ("${kbWorkflowAction}" == "Submit for Publication") {
			AssertClick(
				locator1 = "Button#SUBMIT_FOR_PUBLICATION",
				value1 = "Submit for Publication");
		}
		else if ("${saveAsDraft}" == "true") {
			Button.clickSaveAsDraft();
		}
		else {
			AssertClick(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");
		}

		if ("${kbArticleInvalidContent}" == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "Please enter valid content.");
		}
		else if ("${kbArticleDuplicateFriendlyURL}" == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "Please enter a unique friendly URL.");
		}
		else if ("${kbMissingRequiredCategory}" == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "Please select at least one category for ${vocabularyName}.");
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro addCPWithInvalidAttachmentSize {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Basic Article");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitle}");

		CKEditor.addContent(content = "${kbArticleContent}");

		KBArticle.selectAttachmentCP(kbArticleAttachment = "${kbArticleAttachment}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_INVALID_SIZE_ERROR",
			value1 = "Please enter a file with a valid file size no larger than ${maxFileSize}KB.");

		PortletEntry.publish();
	}

	macro addCPWithInvalidTitle {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Basic Article");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitle}");

		CKEditor.addContent(content = "${kbArticleContent}");

		AssertClick(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		Alert.viewRequiredField();
	}

	macro addCPWithTextFieldCustomField {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Basic Article");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitle}");

		CKEditor.addContent(content = "${kbArticleContent}");

		Panel.expandPanel(panel = "Custom Fields");

		Type(
			locator1 = "TextInput#CUSTOM_FIELD",
			value1 = "${customFieldText}");

		PortletEntry.publish();
	}

	macro addPGViaAP {
		AssetPublisherPortlet.addAsset(assetType = "Knowledge Base Article");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitle}");

		CKEditor.addContent(content = "${kbArticleContent}");

		AssertClick(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");
	}

	macro cancelAddKBArticle {
		LexiconEntry.gotoAddMenuItem(menuItem = "Basic Article");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitle}");

		CKEditor.addContent(content = "${kbArticleContent}");

		Button.clickCancel();
	}

	macro configureEmailCP {
		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(emailFrom)) {
			AssertClick(
				locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_EMAIL_FROM",
				value1 = "Email From");

			Type(
				locator1 = "TextInput#EMAIL_FROM_NAME",
				value1 = "${userName}");

			Type(
				locator1 = "TextInput#EMAIL_FROM_ADDRESS",
				value1 = "${userEmailAddress}");

			PortletEntry.save();
		}

		if (isSet(suggestionReceived)) {
			AssertClick(
				locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_SUGGESTION_RECEIVED",
				value1 = "Suggestion Received Email");

			SelectFrame.selectFrameNoLoading(locator1 = "KnowledgeBaseConfiguration#SUGGESTION_RECEIVED_EMAIL_EDITOR_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "[$COMMENT_CREATE_DATE$] <a href=&quot;[$ARTICLE_URL$]&quot;>View your received suggestion here</a>");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			PortletEntry.save();
		}

		if (isSet(suggestionInProgress)) {
			AssertClick(
				locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_SUGGESTION_IN_PROGRESS",
				value1 = "Suggestion in Progress Email");

			SelectFrame.selectFrameNoLoading(locator1 = "KnowledgeBaseConfiguration#SUGGESTION_IN_PROGRESS_EMAIL_EDITOR_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "[$COMMENT_CREATE_DATE$] <a href=&quot;[$ARTICLE_URL$]&quot;>View your suggestion that is in progress here</a>");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			PortletEntry.save();
		}

		if (isSet(suggestionResolved)) {
			AssertClick(
				locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_SUGGESTION_RESOLVED",
				value1 = "Suggestion Resolved Email");

			SelectFrame.selectFrameNoLoading(locator1 = "KnowledgeBaseConfiguration#SUGGESTION_RESOLVED_EMAIL_EDITOR_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "[$COMMENT_CREATE_DATE$] <a href=&quot;[$ARTICLE_URL$]&quot;>View your resolved suggestion here</a>");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			PortletEntry.save();
		}

		SelectFrame(value1 = "relative=top");
	}

	macro configureKBArticleDisplayPG {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		if (isSet(kbFolderName)) {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			AssertClick(
				key_kbFolderName = "${kbFolderName}",
				locator1 = "KnowledgeBaseSelectParent#FOLDER_TITLE_LINK",
				value1 = "${kbFolderName}");
		}
		else {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");
		}

		Click(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBaseSelectParent#SELECT_BUTTON");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro configureKBDisplaySettingsPG {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertClick(
			locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_DISPLAY_SETTINGS",
			value1 = "Display Settings");

		if ("${subscribe}" == "true") {
			Check(locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_SUBSCRIPTIONS_CHECKBOX");
		}
		else if ("${subscribe}" == "false") {
			Uncheck(locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_SUBSCRIPTIONS_CHECKBOX");
		}

		if ("${history}" == "true") {
			Check(locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_HISTORY_CHECKBOX");
		}
		else if ("${history}" == "false") {
			Uncheck(locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_HISTORY_CHECKBOX");
		}

		if ("${print}" == "true") {
			Check(locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_PRINT_CHECKBOX");
		}
		else if ("${print}" == "false") {
			Uncheck(locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_PRINT_CHECKBOX");
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro configureKBFolderDisplay {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		AssertClick(
			key_kbFolderName = "${kbFolderName}",
			locator1 = "KnowledgeBaseSelectParent#SELECT_FOLDER_BUTTON",
			value1 = "Select");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		PortletEntry.save();
	}

	macro configureKBSocialBookmarkSites {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertClick(
			locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_DISPLAY_SETTINGS",
			value1 = "Display Settings");

		if (isSet(enableSocialBookmarkSites)) {
			KBArticle.enableSocialBookmarkSites(
				enableSocialBookmarkSites = "${enableSocialBookmarkSites}",
				socialBookmarkSite = "${socialBookmarkSite}");
		}

		if (isSet(disableSocialBookmarkSites)) {
			KBArticle.disableSocialBookmarkSites(
				disableSocialBookmarkSites = "${disableSocialBookmarkSites}",
				socialBookmarkSite = "${socialBookmarkSite}");
		}

		PortletEntry.save();
	}

	macro deleteCP {
		if (IsElementPresent(locator1 = "Icon#DELETE")) {
			ClickNoError(locator1 = "Icon#DELETE");
		}
		else {
			Click(
				key_rowEntry = "${kbArticleTitle}",
				locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");

			MenuItem.click(menuItem = "Delete");
		}

		AssertConfirm(value1 = "Are you sure you want to delete the selected entries? They will be deleted immediately.");

		Alert.viewSuccessMessage();

		AssertTextNotPresent(
			locator1 = "Message#ERROR",
			value1 = "Your request failed to complete.");

		AssertTextNotPresent(
			locator1 = "Message#ERROR",
			value1 = "An unexpected error occurred while importing articles: File name is null.");
	}

	macro deletePG {
		ClickNoError(
			key_kbTool = "Delete",
			locator1 = "KnowledgeBase#KB_TOOLS");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		if (isSet(deleteViaKbArticle)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#INFO",
				value1 = "Please configure this portlet to make it visible to all users.");
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro disableSocialBookmarkSites {
		for (var socialBookmarkSite : list "${disableSocialBookmarkSites}") {
			AddSelection(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_CURRENT_SELECT",
				value1 = "${socialBookmarkSite}");

			Click(locator1 = "Button#MOVE_CURRENT_TO_AVAILABLE");

			AssertTextEquals.assertPartialText(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_AVAILABLE_SELECT",
				value1 = "${socialBookmarkSite}");
		}
	}

	macro editCP {
		Click(
			key_rowEntry = "${kbArticleTitle}",
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "A new version is created automatically if this content is modified.");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitleEdit}");

		if (isSet(kbArticleContentEdit)) {
			CKEditor.addContent(kbArticleContentEdit = "${kbArticleContentEdit}");
		}

		if (isSet(kbArticleAttachment)) {
			KBArticle.selectAttachmentCP(kbArticleAttachment = "${kbArticleAttachment}");
		}

		if (isSet(customFieldTextEdit)) {
			Panel.expandPanel(panel = "Custom Fields");

			Type(
				locator1 = "TextInput#CUSTOM_FIELD",
				value1 = "${customFieldTextEdit}");
		}

		if ("${cancel}" == "true") {
			Button.clickCancel();
		}
		else if ("${saveAsDraft}" == "true") {
			PortletEntry.saveAsDraft();
		}
		else {
			PortletEntry.publish();
		}
	}

	macro editPGViaKBDisplay {
		AssertClick(
			key_kbTool = "Edit",
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "Edit");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "A new version is created automatically if this content is modified.");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitleEdit}");

		var kbArticleContentEdit = "${kbArticleContentEdit}";

		CKEditor.addContent(kbArticleContentEdit = "${kbArticleContentEdit}");

		if ("${cancel}" == "true") {
			Button.clickCancel();
		}
		else if ("${saveAsDraft}" == "true") {
			Button.clickSaveAsDraft();
		}
		else {
			AssertClick(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");
		}
	}

	macro editPGViaLocalizedKBDisplay {
		var key_editLocalized = "Editar";
		var key_kbArticleTitle = "${kbArticleTitle}";
		var key_localizedText = "Editor de texto enriquecido";

		AssertClick(
			key_kbTool = "${key_editLocalized}",
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "${key_editLocalized}");

		AssertTextEquals(
			locator1 = "Portlet#H3_HEADER",
			value1 = "${kbArticleTitle}");

		AssertElementPresent(locator1 = "TextInput#TITLE");

		Type(
			locator1 = "TextInput#TITLE",
			value1 = "${kbArticleTitleEdit}");

		var kbArticleContentEdit = "${kbArticleContentEdit}";

		CKEditor.addContent(kbArticleContentEdit = "${kbArticleContentEdit}");

		if (IsElementPresent(locator1 = "Home#PORTAL_LOCALIZATION_TRANSLATION_LANGUAGE_MESSAGE")) {
			Click(locator1 = "Home#PORTAL_LOCALIZATION_IGNORE_BUTTON");
		}

		AssertClick(
			locator1 = "Button#PUBLISH_LOCALIZED",
			value1 = "Publicar");

		VerifyElementPresent(locator1 = "Message#SUCCESS");
	}

	macro enableSocialBookmarkSites {
		for (var socialBookmarkSite : list "${enableSocialBookmarkSites}") {
			AddSelection(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_AVAILABLE_SELECT",
				value1 = "${socialBookmarkSite}");

			Click(locator1 = "Button#MOVE_AVAILABLE_TO_CURRENT");

			AssertTextEquals.assertPartialText(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_CURRENT_SELECT",
				value1 = "${socialBookmarkSite}");
		}
	}

	macro gotoChildArticleDescriptiveDetails {
		AssertClick.assertPartialTextClickAt(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_CHILD_ARTICLE_LINK",
			value1 = "Child Article");
	}

	macro gotoKBArticleViaKBDisplayHierarchyNavigationPG {
		AssertClick(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}");
	}

	macro gotoKBChildArticleViaKBDisplayHierarchyNavigationPG {
		var key_kbArticleTitle = "${kbArticleTitle}";
		var key_kbChildArticleTitle = "${kbChildArticleTitle}";

		AssertClick(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}");

		AssertClick.assertTextClickNoMouseOver(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD",
			value1 = "${kbChildArticleTitle}");
	}

	macro gotoKBGrandchildArticleViaKBDisplayHierarchyNavigationPG {
		var key_kbArticleTitle = "${kbArticleTitle}";
		var key_kbChildArticleTitle = "${kbChildArticleTitle}";

		AssertClick(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}");

		AssertClick.assertTextClickNoMouseOver(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD",
			value1 = "${kbChildArticleTitle}");

		AssertClick.assertTextClickNoMouseOver(
			key_kbGrandchildArticleTitle = "${kbGrandchildArticleTitle}",
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_GRANDCHILD",
			value1 = "${kbGrandchildArticleTitle}");
	}

	macro gotoNextArticlePG {
		AssertClick(
			locator1 = "KnowledgeBaseArticle#NEXT",
			value1 = "${kbDisplayNextArticle}");
	}

	macro gotoPreviousArticle {
		AssertClick(
			locator1 = "KnowledgeBaseArticle#PREVIOUS",
			value1 = "${kbDisplayPreviousArticle}");
	}

	macro gotoSuggestionsNavigationCP {
		AssertClick(
			locator1 = "KnowledgeBase#ADMIN_TABS_SUGGESTIONS",
			value1 = "Suggestions");
	}

	macro gotoViaKBAdminCP {
		var key_kbArticleTitle = "${kbArticleTitle}";

		if (isSet(hasChildArticle)) {
			AssertClick(
				locator1 = "KnowledgeBase#ARTICLE_DESCRIPTIVE_ARTICLE_TITLE",
				value1 = "${kbArticleTitle}");
		}
		else {
			AssertClick(
				locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
				value1 = "${kbArticleTitle}");
		}
	}

	macro gotoViaKBDisplayPG {
		AssertClick(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}");

		Pause(locator1 = "3000");
	}

	macro importCP {
		LexiconEntry.gotoAddDropdownMenuItem(menuItem = "Import");

		UploadDependencyFile.uploadArchiveFile(fileName = "${kbZipFile}");

		if ("${applyNumericalPrefix}" == "true") {
			Check(locator1 = "Checkbox#PRIORITIZATION_STRATEGY");
		}
		else {
			Uncheck(locator1 = "Checkbox#PRIORITIZATION_STRATEGY");
		}

		Button.clickSave();

		Alert.viewSuccessMessageText(successMessage = "Your request completed successfully.");
	}

	macro moveArticleCP {
		var key_rowEntry = "${kbArticleTitle}";

		if (IsElementPresent(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS")) {
			Click(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");
		}
		else {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");
		}

		MenuItem.click(menuItem = "Move");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_TITLE_LABEL",
			value1 = "Current Parent");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_TITLE_FIELD",
			value1 = "${kbArticleCurrentParent}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_PRIORITY_LABEL",
			value1 = "Priority");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_TITLE_LABEL",
			value1 = "New Parent");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_PRIORITY_LABEL",
			value1 = "Priority");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");
	}

	macro moveArticleViaKBDisplayPG {
		WaitForLiferayEvent.initializeLiferayEventLog();

		AssertClick(
			key_kbTool = "Move",
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "Move");

		AssertTextEquals(
			locator1 = "Portlet#H3_HEADER",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_TITLE_LABEL",
			value1 = "Current Parent");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_TITLE_FIELD",
			value1 = "Home");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_PRIORITY_LABEL",
			value1 = "Priority");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_TITLE_LABEL",
			value1 = "New Parent");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_PRIORITY_LABEL",
			value1 = "Priority");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");
	}

	macro openToAddKBArticle {

		// You can use this navigation when you need to access the configuration quickly without checking the UI.

		var baseURL = "${baseURL}";

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var groupId = JSONWebcontentSetter.setGroupId(
			groupName = "${groupName}",
			site = "${site}");

		var parentResourceClassNameId = JSONClassname._getClassNameId(value = "com.liferay.knowledge.base.model.KBFolder");

		if (!(isSet(parentResourcePrimKey))) {
			var parentResourcePrimKey = "0";
		}

		// Articles accessed in admin will stay in admin after publishing.

		Open(locator1 = "${baseURL}/group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_knowledge_base_web_portlet_AdminPortlet&_com_liferay_knowledge_base_web_portlet_AdminPortlet_mvcPath=%2Fadmin%2Fedit_article.jsp&_com_liferay_knowledge_base_web_portlet_AdminPortlet_redirect=%2Fgroup%2F${siteURLKey}%2F~%2Fcontrol_panel%2Fmanage%3Fp_p_id%3Dcom_liferay_knowledge_base_web_portlet_AdminPortlet%26p_p_lifecycle%3D0%26p_p_state%3Dmaximized%26p_v_l_s_g_id%3D${groupId}%26p_p_auth%3D6eOinWLB&_com_liferay_knowledge_base_web_portlet_AdminPortlet_parentResourceClassNameId=${parentResourceClassNameId}&_com_liferay_knowledge_base_web_portlet_AdminPortlet_parentResourcePrimKey=${parentResourcePrimKey}");
	}

	macro openToKBArticleInSite {

		// You can use this navigation when you need to access the configuration quickly without checking the UI.

		var baseURL = "${baseURL}";

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (isSet(folderName)) {
			var resourcePrimKey = JSONKnowledgeBase._getKBResourcePrimKey(
				folderName = "${folderName}",
				groupName = "${groupName}",
				kbArticleTitle = "${kbArticleTitle}",
				site = "${site}");
		}
		else {
			var resourcePrimKey = JSONKnowledgeBase._getKBResourcePrimKey(
				groupName = "${groupName}",
				kbArticleTitle = "${kbArticleTitle}",
				site = "${site}");
		}

		var resourceClassNameId = JSONClassname._getClassNameId(value = "com.liferay.knowledge.base.model.KBArticle");

		Open(locator1 = "${baseURL}/group/${siteURLKey}/~/control_panel/manage/-/knowledge_base_admin/article/${resourcePrimKey}/maximized?_com_liferay_knowledge_base_web_portlet_AdminPortlet_resourceClassNameId=${resourceClassNameId}");
	}

	macro selectAllCP {
		PortletEntry.selectAll();

		AssertElementPresent(locator1 = "Icon#DELETE");
	}

	macro selectArticleCP {
		Check(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBase#ARTICLE_DESCRIPTIVE_ARTICLE_CHECKBOX");

		AssertElementPresent.pauseAssertVisible(locator1 = "Icon#DELETE");
	}

	macro selectAttachmentCP {
		if (IsElementNotPresent(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_EXPANDED")) {
			Click(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_COLLAPSED");
		}

		AssertElementPresent(locator1 = "Button#SELECT_FILES");

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "${kbArticleAttachment}");
	}

	macro selectParentArticleCP {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Click(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBaseSelectParent#SELECT_BUTTON",
			value1 = "Select");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_TITLE_FIELD",
			value1 = "${kbArticleTitle}");

		Click(locator1 = "Button#MOVE");

		Alert.viewSuccessMessage();
	}

	macro selectParentViaKBDisplayPG {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Click(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBaseSelectParent#SELECT_BUTTON",
			value1 = "Select");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_TITLE_FIELD",
			value1 = "${kbArticleTitle}");

		Click(locator1 = "Button#MOVE");

		Alert.viewSuccessMessage();

		SelectFrame(value1 = "relative=top");
	}

	macro selectPGViaKBArticle {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		AssertClick(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBaseSelectParent#SELECT_BUTTON",
			value1 = "Select");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Button.clickSave();

		SelectFrame(value1 = "relative=top");
	}

	macro subscribeCP {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Subscribe");

		Alert.viewSuccessMessage();
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Knowledge Base");

		if (IsElementPresent(locator1 = "KnowledgeBase#ARTICLE_DESCRIPTIVE_ARTICLE_TITLE_GENERIC")) {
			Check.checkAll(locator1 = "KnowledgeBase#ARTICLE_TABLE_SELECT_ALL_CHECKBOX");

			Click(locator1 = "Icon#DELETE");

			AssertConfirm(value1 = "Are you sure you want to delete the selected entries? They will be deleted immediately.");

			Alert.viewSuccessMessage();
		}
	}

	macro viewArticleHistoryPG {
		AssertClick(
			locator1 = "KnowledgeBaseArticle#HISTORY",
			value1 = "History");

		Check(
			key_versionNumber = "${kbArticleVersionNew}",
			locator1 = "KnowledgeBaseArticle#HISTORY_SELECT_VERSION_CHECKBOX",
			value1 = "${kbArticleVersionNew}");

		Check(
			key_versionNumber = "${kbArticleVersionOld}",
			locator1 = "KnowledgeBaseArticle#HISTORY_SELECT_VERSION_CHECKBOX",
			value1 = "${kbArticleVersionOld}");

		AssertClick(
			locator1 = "Button#COMPARE_VERSIONS",
			value1 = "Compare Versions");

		if (isSet(kbArticleContentRemovedDiff)) {
			AssertTextEquals(
				key_kbArticleContentRemovedDiff = "${kbArticleContentRemovedDiff}",
				locator1 = "KnowledgeBaseArticle#HISTORY_CONTENT_REMOVED_DIFF",
				value1 = "${kbArticleContentRemovedDiff}");
		}

		if (isSet(kbArticleContentAddedDiff)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#HISTORY_CONTENT_ADDED_DIFF",
				value1 = "${kbArticleContentAddedDiff}");
		}

		if ("${viewNoXmlInTitle}" == "true") {
			AssertTextNotPresent(
				locator1 = "KnowledgeBaseArticle#TITLE",
				value1 = "xml");
		}
	}

	macro viewAttachmentCP {
		Click(
			key_rowEntry = "${kbArticleTitle}",
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		AssertClick(
			locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_COLLAPSED",
			value1 = "Attachments");

		AssertElementPresent(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_SAVED_ATTACHMENTS_CONTAINER");
	}

	macro viewBlogsEntryRelatedAsset {
		var key_kbArticleRelatedAssetTitle = "${kbArticleRelatedAssetTitle}";

		AssertClick.assertTextClickAt(
			locator1 = "AssetRelatedAssets#KB_RELATED_ASSETS_LINKS",
			value1 = "${kbArticleRelatedAssetTitle}");

		AssertTextEquals(
			locator1 = "BlogsEntry#CONTENT_GENERIC",
			value1 = "Blogs Entry Content");

		AssertTextEquals(
			locator1 = "BlogsEntry#TITLE_GENERIC",
			value1 = "Blogs Entry Title");
	}

	macro viewChildArticleCP {
		KBArticle._gotoChildArticle(kbChildArticleTitle = "${kbChildArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "${kbChildArticleTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "KnowledgeBaseArticle#CONTENT",
			value1 = "${kbChildArticleContent}");
	}

	macro viewChildArticleHierarchyViaKBDisplayPG {
		var key_kbArticleTitle = "${kbArticleTitle}";

		AssertClick(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}");

		var childCount = "0";
		var kbParentChild = "${kbArticleTitle} Child";

		while (IsElementPresent(locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD_GENERIC")) {
			var childCount = ${childCount} + 1;
			var kbChildArticleTitle = "${kbParentChild} ${childCount}";
			var key_kbArticleTitle = "${kbArticleTitle}";

			if (IsElementPresent(locator1 = "xpath=//div[@class='kbarticle-navigation']/ul/li[contains(.,'${key_kbArticleTitle}')]/ul[${childCount}]")) {
				var key_kbChildArticleTitle = "${kbChildArticleTitle}";

				AssertClick.assertTextClickNoMouseOver(
					locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD",
					value1 = "${kbChildArticleTitle}");
			}
		}
	}

	macro viewChildArticlePG {
		AssertClick.assertTextClickNoMouseOver(
			key_kbArticleTitle = "${kbArticleTitle}",
			key_kbChildArticleTitle = "${kbChildArticleTitle}",
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD",
			value1 = "${kbChildArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbChildArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_CONTENT",
			value1 = "${kbChildArticleContent}");
	}

	macro viewCP {
		var key_kbArticleTitle = "${kbArticleTitle}";

		AssertTextEquals(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "${kbArticleTitle}");

		if ("${kbWorkflowStatus}" == "Pending") {
			AssertTextEquals(
				locator1 = "KnowledgeBase#ARTICLE_TABLE_ARTICLE_STATUS",
				value1 = "Pending");
		}

		if ("${kbStatus}" == "Draft") {
			AssertTextEquals(
				locator1 = "KnowledgeBase#ARTICLE_TABLE_ARTICLE_STATUS",
				value1 = "Draft");
		}

		AssertClick(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#CONTENT",
			value1 = "${kbArticleContent}");

		if (isSet(embedVideo)) {
			Pause(locator1 = "5000");

			if ("${service}" == "twitch") {
				AssertVisible(
					key_service = "${service}",
					locator1 = "BlogsEntry#CONTENT_VIDEO");
			}
			else if ("${service}" == "facebook") {
				AssertVisible(
					key_service = "${service}",
					locator1 = "BlogsEntry#CONTENT_VIDEO");
			}
			else if ("${internalVideo}" == "true") {
				DMDocument.viewInternalVideoPreview(videoName = "${videoName}");
			}
			else {
				AssertElementPresent(
					key_service = "youtube",
					locator1 = "BlogsEntry#CONTENT_VIDEO");

				SelectFrame.selectFrameNoLoading(locator1 = "IFrame#EMBEDDED_VIDEO_IFRAME");

				AssertElementPresent(locator1 = "CKEditor#VIDEO_BUTTON_PLAY");
			}
		}

		if (isSet(kbChildArticleTitle)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#ADMIN_VIEW_CHILD_ARTICLE_TITLE",
				value1 = "${kbChildArticleTitle}");

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#ADMIN_VIEW_CHILD_ARTICLE_CONTENT",
				value1 = "${kbChildArticleContent}");
		}

		if (isSet(kbArticleRelatedAssetTitle)) {
			AssertTextEquals(
				locator1 = "AssetRelatedAssets#HEADER",
				value1 = "RELATED ASSETS");

			AssertTextEquals(
				key_kbArticleRelatedAssetTitle = "${kbArticleRelatedAssetTitle}",
				locator1 = "AssetRelatedAssets#KB_RELATED_ASSETS_LINKS",
				value1 = "${kbArticleRelatedAssetTitle}");
		}

		if (isSet(categoryName)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#CATEGORY_HEADER",
				value1 = "${vocabularyName}: ${categoryName}");

			AssertTextEquals(
				key_categoryName = "${categoryName}",
				locator1 = "KnowledgeBaseArticle#CATEGORY_LINKS",
				value1 = "${categoryName}");
		}

		if ("noAttachment" == "true") {
			AssertAlertNotPresent(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_SAVED_ATTACHMENTS_CONTAINER");
		}
	}

	macro viewCPWithHTML {
		AssertClick(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#HTML_BOLD_CONTENT",
			value1 = "${kbArticleContent}");
	}

	macro viewDefaultCP {
		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No articles were found.");

		AssertElementNotPresent(locator1 = "KnowledgeBase#ARTICLE_TABLE_KB_GENERIC");
	}

	macro viewDefaultKBDisplaySettingsPG {
		AssertElementPresent(locator1 = "KnowledgeBaseArticle#SUBSCRIBE");

		AssertElementPresent(locator1 = "KnowledgeBaseArticle#HISTORY");

		AssertElementPresent(locator1 = "KnowledgeBaseArticle#PRINT");
	}

	macro viewDefaultViaKBDisplayPG {
		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "Please configure this portlet to make it visible to all users.");

		AssertElementNotPresent(locator1 = "KnowledgeBase#DISPLAY_TITLE");
	}

	macro viewFriendlyURLCP {
		Click(
			key_rowEntry = "${kbArticleTitle}",
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS_2");

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panel = "Configuration");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
			value1 = "${kbArticleFriendlyURL}");
	}

	macro viewImageViaContentCmd {
		AssertElementPresent(locator1 = "KnowledgeBaseArticle#CONTENT_IMAGE");
	}

	macro viewKBArticlePriorityCP {
		var key_kbArticleTitle = "${kbArticleTitle}";

		AssertTextEquals(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_PRIORITY",
			value1 = "Priority ${kbPriority}");
	}

	macro viewKBArticleWithAttachmentCP {
		Click(
			key_rowEntry = "${kbArticleTitle}",
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "A new version is created automatically if this content is modified.");

		AssertTextEquals(
			locator1 = "ControlMenu#HEADING",
			value1 = "${kbArticleTitle}");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "${kbArticleContent}");

		SelectFrame(value1 = "relative=top");

		if (IsElementNotPresent(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_EXPANDED")) {
			Click(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_COLLAPSED");
		}

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#ATTACHMENTS_SAVED_ATTACHMENTS_CONTAINER",
			value1 = "${kbArticleAttachment}");
	}

	macro viewKBDisplayPG {
		if ("${sourceURL}" == "true") {
			AssertClick(
				locator1 = "KnowledgeBaseArticle#EDIT_ON_GITHUB",
				value1 = "Edit On GitHub");

			SelectWindow(
				key_pageTitle = "Google",
				locator1 = "Google#PAGE_TITLE");

			var url = selenium.getLocation();

			if ("${url}" != "https://www.google.com/[#]gws_rd=ssl") {
				AssertLocation(value1 = "https://www.google.com/?gws_rd=ssl");
			}
			else {
				AssertLocation(value1 = "https://www.google.com/[#]gws_rd=ssl");
			}

			Close(
				key_pageTitle = "Google",
				locator1 = "Google#PAGE_TITLE");
		}

		if ("${subscribe}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#SUBSCRIBE");
		}
		else if ("${subscribe}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#SUBSCRIBE");
		}

		if ("${history}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#HISTORY");
		}
		else if ("${history}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#HISTORY");
		}

		if ("${print}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#PRINT");
		}
		else if ("${print}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#PRINT");
		}
	}

	macro viewNavigationLinksPG {
		if ("${previous}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#PREVIOUS");
		}
		else if ("${previous}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#PREVIOUS");
		}

		if ("${next}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#NEXT");
		}
		else if ("${next}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#NEXT");
		}
	}

	macro viewNoHierarchyPG {
		AssertElementNotPresent(
			key_kbArticleTitle = "${kbArticleTitle}",
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT");

		AssertElementPresent(locator1 = "KnowledgeBase#FOLDER_NAVIGATION_MENULIST");
	}

	macro viewNoPGViaKBDisplay {
		AssertTextNotPresent(value1 = "${kbArticleTitle}");
	}

	macro viewParentArticleHierarchyViaKBDisplayPG {
		var count = "0";

		while (IsElementPresent(locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_GENERIC")) {
			var count = ${count} + 1;
			var kbParentTitle = "${kbArticleTitle} ${count}";

			if (IsElementPresent(locator1 = "xpath=//div[@class='kbarticle-navigation']/ul[${count}]")) {
				AssertClick(
					key_kbArticleTitle = "${kbParentTitle}",
					locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
					value1 = "${kbParentTitle}");
			}
		}
	}

	macro viewPG {
		AssertTextEquals.assertPartialText(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_CONTENT",
			value1 = "${kbArticleContent}");

		if (isSet(embedVideo)) {
			AssertElementPresent(
				key_service = "youtube",
				locator1 = "BlogsEntry#CONTENT_VIDEO");

			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#EMBEDDED_VIDEO_IFRAME");

			AssertElementPresent(locator1 = "CKEditor#VIDEO_BUTTON_PLAY");
		}

		if (isSet(customFieldName)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#CUSTOM_FIELD_NAME",
				value1 = "${customFieldName}");

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#CUSTOM_FIELD_VALUE",
				value1 = "${customFieldValue}");
		}
	}

	macro viewPGViaAP {
		var key_assetContent = "${kbArticleContent}";
		var key_assetTitle = "${kbArticleTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${kbArticleTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${kbArticleContent}");
	}

	macro viewSourceURLCP {
		if (isSet(kbChildArticleTitle)) {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");
		}
		else {
			Click(
				key_rowEntry = "${kbArticleTitle}",
				locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");
		}

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panel = "Configuration");

		AssertTextEquals(
			locator1 = "CKEditor#SOURCE_URL",
			value1 = "${kbArticleSourceURL}");
	}

	macro viewSourceURLPG {
		AssertClick(
			key_kbTool = "Edit",
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "Edit");

		Panel.expandPanel(panel = "Configuration");

		AssertTextEquals(
			locator1 = "CKEditor#SOURCE_URL",
			value1 = "${kbArticleSourceURL}");
	}

	macro viewUploadFailed {
		if ("${kbImportFailed}" == "true") {
			Alert.viewRequestFailedToComplete();
		}
		else {
			AssertTextNotPresent(value1 = "Your request failed to complete.");
		}
	}

	macro viewViaKBDisplayPG {
		AssertTextEquals.assertPartialText(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_CONTENT",
			value1 = "${kbArticleContent}");

		if (isSet(kbArticleRelatedAssetTitle)) {
			AssertTextEquals(
				locator1 = "AssetRelatedAssets#HEADER",
				value1 = "RELATED ASSETS");

			AssertTextEquals(
				key_kbArticleRelatedAssetTitle = "${kbArticleRelatedAssetTitle}",
				locator1 = "AssetRelatedAssets#KB_RELATED_ASSETS_LINKS",
				value1 = "${kbArticleRelatedAssetTitle}");
		}
	}

	macro viewViaNextLinkPG {
		AssertClick(
			locator1 = "KnowledgeBaseArticle#NEXT",
			value1 = "${kbArticleTitle}");

		AssertTextPresent(
			locator1 = "KnowledgeBase#DISPLAY_CONTENT",
			value1 = "${kbArticleContent}");
	}

}