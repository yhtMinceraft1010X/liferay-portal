definition {

	macro _addItemPage {
		if (!(isSet(privacy))) {
			var privacy = "Pages";
		}

		Navigator.gotoNavItem(navItem = "${privacy}");

		Portlet.expandTree();

		for (var pageName : list "${pageNames}") {
			Portlet.selectTreeNode(nodeName = "${pageName}");
		}
	}

	macro _addItemSubmenu {
		PortletEntry.inputName(name = "${submenuName}");
	}

	macro _addItemURL {
		PortletEntry.inputName(name = "${urlName}");

		Type(
			locator1 = "TextInput#URL",
			value1 = "${url}");

		if ("${target}" == "Blank") {
			while (IsNotChecked.isNotCheckedNotVisible(checkboxName = "Open in a new tab.", locator1 = "Checkbox#ANY_CHECKBOX")) {
				Click.clickAtNotVisible(
					checkboxName = "Open in a new tab.",
					locator1 = "Checkbox#ANY_CHECKBOX");
			}

			Pause(locator1 = "3000");
		}
		else if ("${target}" == "Self") {
			while (IsChecked.isNotCheckedNotVisible(checkboxName = "Open in a new tab.", locator1 = "Checkbox#ANY_CHECKBOX")) {
				Click.clickAtNotVisible(
					checkboxName = "Open in a new tab.",
					locator1 = "Checkbox#ANY_CHECKBOX");
			}

			Pause(locator1 = "3000");
		}
	}

	macro _editItemPage {
		Check.checkToggleSwitch(locator1 = "SiteNavigationMenu#USE_CUSTOM_NAME_CHECKBOX");

		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = "${name}");
		}
	}

	macro _editItemSubmenu {
		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = "${name}");
		}
	}

	macro _editItemURL {
		if (isSet(name)) {
			Type(
				locator1 = "TextInput#NAME",
				value1 = "${name}");
		}
		else if (isSet(url)) {
			Type(
				locator1 = "TextInput#URL",
				value1 = "${url}");
		}
	}

	macro addItem {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(locator1 = "Button#PLUS");

		MenuItem.click(menuItem = "${item}");

		Pause(locator1 = "1000");

		IFrame.selectConfigurationFrame();

		if ("${item}" == "Page") {
			NavigationMenusAdmin._addItemPage(
				pageNames = "${pageNames}",
				privacy = "${privacy}");

			Button.click(button = "Select");
		}

		if ("${item}" == "Document") {
			LexiconCard.clickCard(card = "${assetTitle}");
		}

		if ("${item}" == "Web Content Article") {
			Click(
				key_listEntry = "${assetTitle}",
				locator1 = "LexiconList#LIST_ENTRY_TITLE");
		}

		if ("${item}" == "Blogs Entry") {
			LexiconCard.clickCard(card = "${assetTitle}");
		}

		if ("${item}" == "Category") {
			Portlet.expandTree();

			var i = "1";

			for (var assetTitle : list "${assetTitleList}") {
				AssertVisible(
					key_nodeName = "${assetTitle}",
					locator1 = "Treeview#NODE_ITEM");

				Click(
					key_nodeName = "${assetTitle}",
					locator1 = "Treeview#NODE_UNSELECTED");

				if ("${i}" == "1") {
					AssertTextEquals(
						locator1 = "Search#SEARCH_INFO",
						value1 = "${i} Item Selected");
				}
				else {
					AssertTextEquals(
						locator1 = "Search#SEARCH_INFO",
						value1 = "${i} Items Selected");
				}

				var i = ${i} + 1;
			}

			SelectFrame.selectFrameTop();

			Button.clickSelect();
		}

		if ("${item}" == "Submenu") {
			NavigationMenusAdmin._addItemSubmenu(submenuName = "${submenuName}");

			Button.clickAdd();
		}

		if ("${item}" == "URL") {
			NavigationMenusAdmin._addItemURL(
				target = "${target}",
				url = "${url}",
				urlName = "${urlName}");

			Button.clickAdd();
		}

		if ("${item}" == "Vocabulary") {
			var i = "1";

			for (var assetTitle : list "${assetTitleList}") {
				Click.mouseDownMouseUp(
					key_card = "${assetTitle}",
					locator1 = "Card#CARD");

				var i = ${i} + 1;
			}

			SelectFrame.selectFrameTop();

			Button.clickSelect();
		}

		Alert.viewSuccessMessage();

		IFrame.selectTopFrame();
	}

	macro addMenu {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${menuName}");

		Modal.save();
	}

	macro addPage {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(locator1 = "Button#PLUS");

		MenuItem.click(menuItem = "Page");

		Pause(locator1 = "1000");

		IFrame.selectConfigurationFrame();

		Portlet.expandTree();

		for (var pageName : list "${pageNames}") {
			Portlet.selectTreeNode(nodeName = "${pageName}");
		}

		Button.click(button = "Select");

		Alert.viewSuccessMessage();

		IFrame.selectTopFrame();
	}

	macro addTranslation {
		NavigationMenusAdmin.openItemSidebar(itemName = "${itemName}");

		Pause(locator1 = "3000");

		if (IsElementPresent(locator1 = "SiteNavigationMenu#USE_CUSTOM_NAME_CHECKBOX")) {
			Check.checkToggleSwitch(locator1 = "SiteNavigationMenu#USE_CUSTOM_NAME_CHECKBOX");
		}

		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = "${locale}");

		PortletEntry.inputName(name = "${translation}");

		Button.clickSave();
	}

	macro changeDisplayTemplate {
		Select(
			key_fieldLabel = "Display Template",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "${displayTemplate}");
	}

	macro configureMenuType {
		if ("${menuType}" == "Primary Navigation") {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = "${menuType}",
				rowEntry = "${navigationMenu}");

			if (isSet(oldPrimaryNavigationMenu)) {
				AssertConfirm(value1 = "Do you want to replace ${navigationMenu} for ${oldPrimaryNavigationMenu} as primary navigation? This action will affect all the pages using primary navigation.");
			}
		}
		else {
			LexiconEntry.gotoEntryMenuItem(
				menuItem = "${menuType}",
				rowEntry = "${navigationMenu}");
		}

		AssertVisible(
			key_rowEntry = "${navigationMenu}",
			key_rowText = "${menuType}",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_TEXT");
	}

	macro deleteAllCP {
		PortletEntry.selectAll();

		Click(
			key_text = "trash",
			locator1 = "ManagementBar#ANY_ICON");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();
	}

	macro deleteCP {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Delete",
			rowEntry = "${navigationMenuName}");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();
	}

	macro deleteItem {
		Click(
			key_itemName = "${itemName}",
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_CLOSE");

		if (IsElementPresent(locator1 = "Modal#HEADER")) {
			AssertTextEquals(
				locator1 = "Modal#HEADER",
				value1 = "Delete Item");

			AssertTextEquals.assertPartialText(
				locator1 = "Modal#BODY",
				value1 = "The item you want to delete has children that also can be removed.");

			Check.checkNotVisible(
				key_text = "${actionName}",
				locator1 = "TextInput#ANY");

			Button.clickDelete();
		}
	}

	macro editItem {
		NavigationMenusAdmin.openItemSidebar(itemName = "${itemName}");

		if ("${item}" == "Page") {
			if (isSet(pageNames)) {
				Click(locator1 = "Button#CHOOSE");

				Pause(locator1 = "1000");

				IFrame.selectConfigurationFrame();

				Portlet.expandTree();

				for (var pageName : list "${pageNames}") {
					Portlet.selectTreeNode(nodeName = "${pageName}");
				}

				SelectFrameTop();

				Button.click(button = "Select");

				IFrame.selectTopFrame();
			}
			else {
				NavigationMenusAdmin._editItemPage(name = "${name}");
			}
		}
		else if ("${item}" == "Submenu") {
			NavigationMenusAdmin._editItemSubmenu(submenuName = "${submenuName}");
		}
		else if ("${item}" == "URL") {
			NavigationMenusAdmin._editItemURL(
				name = "${name}",
				url = "${url}");
		}
		else if ("${item}" == "Category") {
			Click(
				ariaLabel = "Change Item",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			SelectFrame(value1 = "relative=top");

			AssertTextEquals(
				locator1 = "Modal#HEADER",
				value1 = "Select Category");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Portlet.expandTree();

			AssertVisible(
				key_nodeName = "${assetTitle}",
				locator1 = "Treeview#NODE_ITEM");

			Click(
				key_nodeName = "${assetTitle}",
				locator1 = "Treeview#NODE_UNSELECTED");

			SelectFrame.selectFrameTop();

			InputField.viewText(
				fieldLabel = "Item",
				text = "${assetTitle}");

			AssertTextEquals(
				locator1 = "Sidebar#TITLE",
				value1 = "${itemName}");
		}

		if (isSet(customField)) {
			Type(
				key_fieldLabel = "${customField}",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "${fieldValue}");
		}

		if ("${showWarningMessage}" == "true") {
			NavigationMenusAdmin.viewItemWarningMessage();
		}
		else if ("${showWarningMessage}" == "false") {
			NavigationMenusAdmin.viewItemWarningMessageNotPresent();
		}

		if (!(isSet(configureWithoutSave))) {
			PortletEntry.save();
		}
	}

	macro editMenu {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${navigationMenuName}");
	}

	macro markAsPrimaryNavigation {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Primary Navigation",
			rowEntry = "${newMenuName}");

		AssertConfirm(value1 = "Do you want to replace ${newMenuName} for ${oldMenuName} as primary navigation? This action will affect all the pages using primary navigation.");
	}

	macro openItemSidebar {
		Click(
			key_itemName = "${itemName}",
			locator1 = "SiteNavigationMenu#ITEM_ENTRY");

		AssertTextEquals(
			key_itemName = "${itemName}",
			locator1 = "SiteNavigationMenu#SIDEBAR_ITEM_NAME",
			value1 = "${itemName}");

		AssertElementPresent(locator1 = "SiteNavigationMenu#SIDEBAR");
	}

	macro openNavigationMenusAdmin {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_site_navigation_admin_web_portlet_SiteNavigationAdminPortlet");
	}

	macro openPreviewMenu {
		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(
			key_text = "view",
			locator1 = "Icon#ANY");
	}

	macro toggleAutomaticallyAddNewPagesToMenu {
		Click(locator1 = "SiteNavigationMenu#SIDEBAR_COG");

		if ("${toggleValue}" == "enable") {
			Check(
				checkboxName = "When creating a new page, the page will be automatically added to this menu unless the user deselects it.",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else if ("${toggleValue}" == "disable") {
			Uncheck(
				checkboxName = "When creating a new page, the page will be automatically added to this menu unless the user deselects it.",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else {
			fail("Set ${toggleValue} to enable or disable");
		}

		Button.clickSave();
	}

	macro viewDisplayTemplate {
		AssertSelectedLabel(
			key_fieldLabel = "Display Template",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "${displayTemplate}");
	}

	macro viewItem {
		AssertElementPresent(
			key_itemName = "${itemName}",
			locator1 = "SiteNavigationMenu#ITEM_ENTRY");
	}

	macro viewItemNested {
		var list1 = ListUtil.newListFromString("${itemNameList}");
		var list2 = ListUtil.newListFromString("${parentItemNameList}");
		var size = ListUtil.size("${list1}");
		var i = "0";

		while ("${i}" != "${size}") {
			var itemName = ListUtil.get("${list1}", "${i}");
			var parentItemName = ListUtil.get("${list2}", "${i}");

			var parentItemId = JSONSitenavigationSetter.setSiteNavigationMenuItemId(
				groupName = "${groupName}",
				site = "${site}",
				siteNavigationMenuItemName = "${parentItemName}",
				siteNavigationMenuName = "${siteNavigationMenuName}");

			AssertElementPresent(
				key_itemName = "${itemName}",
				key_parentItemId = "${parentItemId}",
				locator1 = "SiteNavigationMenu#ITEM_ENTRY_NESTED");

			var i = ${i} + 1;
			var i = StringUtil.valueOf("${i}");
		}
	}

	macro viewItemNotNested {
		for (var itemName : list "${itemNameList}") {
			AssertElementPresent(
				key_itemName = "${itemName}",
				key_parentItemId = "0",
				locator1 = "SiteNavigationMenu#ITEM_ENTRY_NESTED");
		}
	}

	macro viewItemNotPresent {
		for (var itemName : list "${itemNameList}") {
			AssertElementNotPresent(
				key_itemName = "${itemName}",
				locator1 = "SiteNavigationMenu#ITEM_ENTRY");
		}
	}

	macro viewItemOrder {
		AssertTextEquals.assertPartialText(
			key_index = "${index}",
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_N",
			value1 = "${itemName}");
	}

	macro viewItemStatus {
		AssertTextEquals(
			key_itemName = "${itemName}",
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_STATUS",
			value1 = "${itemStatus}");
	}

	macro viewItemWarningIcon {
		AssertVisible(
			key_card = "${itemName}",
			key_icon = "warning",
			locator1 = "Card#CARD_STICKER");
	}

	macro viewItemWarningIconNotPresent {
		AssertElementNotPresent(
			key_card = "${itemName}",
			key_icon = "warning",
			locator1 = "Card#CARD_STICKER");
	}

	macro viewItemWarningMessage {
		if (isSet(itemName)) {
			NavigationMenusAdmin.openItemSidebar(itemName = "${itemName}");
		}

		AssertElementPresent(
			key_warningMessage = "No Display Page",
			locator1 = "Message#WARNING_SPECIFIC");

		AssertTextEquals(
			locator1 = "Message#SUBTITLE",
			value1 = "This item does not have a display page. Items without display page do not have links and are hidden from menus.");
	}

	macro viewItemWarningMessageNotPresent {
		if (isSet(itemName)) {
			NavigationMenusAdmin.openItemSidebar(itemName = "${itemName}");
		}

		AssertElementNotPresent(
			key_warningMessage = "No Display Page",
			locator1 = "Message#WARNING_SPECIFIC");

		AssertElementNotPresent(
			locator1 = "Message#SUBTITLE",
			value1 = "This item does not have a display page. Items without display page do not have links and are hidden from menus.");
	}

	macro viewMenuTitle {
		LexiconTable.viewTableEntryTitle(tableEntry = "${navigationMenu}");
	}

	macro viewMenuType {
		AssertTextEquals(
			key_markedAs = "${menuType}",
			key_rowEntry = "${rowEntry}",
			locator1 = "SiteNavigationMenu#MENU_MARKED_AS",
			value1 = "${menuType}");
	}

}