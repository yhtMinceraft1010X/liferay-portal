definition {

	var password = "test";
	var userEmailAddress = "test@liferay.com";

	macro _clickSignInButton {
		var localizedSignIn = User._getSignInText(localization = "${localization}");

		Button.click(button = "${localizedSignIn}");
	}

	macro _clickSignInLink {
		var localizedSignIn = User._getSignInText(localization = "${localization}");

		if (IsElementNotPresent(locator1 = "TextInput#EMAIL_ADDRESS")) {
			if (isSet(localization)) {
				AssertClick(
					locator1 = "UserBar#USER_SIGN_IN",
					value1 = "${localizedSignIn}");
			}
			else if (IsElementPresent(locator1 = "UserBar#USER_SIGN_IN")) {
				AssertClick(
					locator1 = "UserBar#USER_SIGN_IN",
					value1 = "Sign In");

				if ("${samlMultiIdPs}" == "true") {
					Select(
						key_fieldLabel = "Identity Provider",
						locator1 = "Select#GENERIC_SELECT_FIELD",
						value1 = "${idpName}");

					Button.click(button = "Sign In");
				}
			}
			else if (IsElementPresent(key_text = "Sign In", locator1 = "Button#ANY")) {
				Button.click(button = "Sign In");
			}
		}
	}

	macro _getSignInText {
		if ("${localization}" == "JA") {
			var localizedSignIn = "ログイン";
		}
		else if ("${localization}" == "ZH") {
			var localizedSignIn = "登录";
		}
		else if ("${localization}" == "IT") {
			var localizedSignIn = "Accedi";
		}
		else if ("${localization}" == "ES") {
			var localizedSignIn = "Acceder";
		}
		else {
			var localizedSignIn = "Sign In";
		}

		return "${localizedSignIn}";
	}

	macro _login {
		SignIn._signIn(
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}");
	}

	macro acceptEndUserLicenseAgreement {
		if (IsElementPresent(locator1 = "Button#I_AGREE")) {
			AssertClick(
				locator1 = "Button#I_AGREE",
				value1 = "I Agree");

			AssertElementNotPresent(locator1 = "Button#I_AGREE");
		}
	}

	macro acceptEndUserLicenseAgreementLocalized {
		var key_localizedAgree = "${localizedAgree}";

		if (IsElementPresent(locator1 = "Button#I_AGREE_LOCALIZED")) {
			AssertClick(
				locator1 = "Button#I_AGREE_LOCALIZED",
				value1 = "${localizedAgree}");

			AssertElementNotPresent(locator1 = "Button#I_AGREE_LOCALIZED");
		}
	}

	macro activateCP {
		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Inactive");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Activate",
			rowEntry = "${userScreenName}");

		Alert.viewSuccessMessage();

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		var key_userScreenName = "${userScreenName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
			value1 = "${userName}");

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}");
	}

	macro addAddressViaMyAccount {
		Click(locator1 = "NavBar#ADDRESSES");

		Click(locator1 = "Button#ADD_ADDRESS");

		Type(
			locator1 = "TextInput#STREET_1",
			value1 = "${userAddressStreet1}");

		if (isSet(userAddressCountry)) {
			Select(
				locator1 = "Select#COUNTRY",
				value1 = "${userAddressCountry}");
		}

		if (isSet(userAddressRegion)) {
			Select(
				locator1 = "Select#REGION",
				value1 = "${userAddressRegion}");
		}

		if (isSet(userAddressPostalCode)) {
			Type(
				locator1 = "TextInput#POSTAL_CODE",
				value1 = "${userAddressPostalCode}");
		}

		if (isSet(userAddressType)) {
			Select(
				locator1 = "Select#TYPE",
				value1 = "${userAddressType}");
		}

		Type(
			locator1 = "TextInput#CITY",
			value1 = "${userAddressCity}");

		Check(locator1 = "Checkbox#MAKE_PRIMARY");

		Check(locator1 = "Checkbox#MAILING");

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();

		SelectFrame(value1 = "relative=top");
	}

	macro addContactInformation {
		if (isSet(contactType)) {
			var key_contactType = "${contactType}";

			Click.mouseDownMouseUp(locator1 = "UsersAndOrganizationsEditUser#CONTACT_ADD_BUTTON");

			if ("${makePrimary}" == "true") {
				Check(
					checkboxName = "Make Primary",
					locator1 = "Checkbox#ANY_CHECKBOX");
			}

			// Addresses

			if (isSet(street1)) {
				Type(
					locator1 = "TextInput#STREET_1",
					value1 = "${street1}");
			}

			if (isSet(city)) {
				Type(
					locator1 = "TextInput#CITY",
					value1 = "${city}");
			}

			if (isSet(country)) {
				Select(
					locator1 = "Select#COUNTRY",
					value1 = "${country}");
			}

			if (isSet(region)) {
				Select(
					locator1 = "Select#REGION",
					value1 = "${region}");
			}

			if (isSet(postalCode)) {
				Type(
					locator1 = "TextInput#POSTAL_CODE",
					value1 = "${postalCode}");
			}

			// Phone Numbers

			if (isSet(number)) {
				Type(
					locator1 = "TextInput#NUMBER",
					value1 = "${number}");
			}

			if (isSet(extension)) {
				Type(
					locator1 = "TextInput#EXTENSION",
					value1 = "${extension}");
			}

			// Additional Email Addresses

			if (isSet(address)) {
				Type(
					locator1 = "TextInput#ADDRESS",
					value1 = "${address}");
			}

			// Websites

			if (isSet(url)) {
				Type(
					locator1 = "TextInput#URL",
					value1 = "${url}");
			}
		}

		// Instant Messenger

		if (isSet(skype)) {
			Type(
				locator1 = "TextInput#SKYPE",
				value1 = "${skype}");
		}

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();
	}

	macro addCP {

		// TODO LRQA-73479 Refactor so separate macros to add user can be used in this single macro EX: Organization.addUser

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		if (isSet(userBirthday)) {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_BIRTHDAY_FIELD",
				value1 = "${userBirthday}");
		}

		if (isSet(userMiddleName)) {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_MIDDLE_NAME_FIELD",
				value1 = "${userMiddleName}");
		}

		if (isSet(userJobTitle)) {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_JOB_TITLE_FIELD",
				value1 = "${userJobTitle}");
		}

		if (isSet(userGender)) {
			Select(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_GENDER_SELECT",
				value1 = "${userGender}");
		}

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		if (isSet(userTag)) {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_TAG_FIELD_INPUT",
				value1 = "${userTag}");

			KeyPress(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_TAG_FIELD_INPUT",
				value1 = "\ENTER");
		}

		if (isSet(userComment)) {
			Type(
				locator1 = "TextArea#COMMENTS",
				value1 = "${userComment}");
		}

		if (isSet(lat) && isSet(lng)) {
			Geolocation.setMarkerPosition(
				lat = "${lat}",
				lng = "${lng}");
		}

		var browserType = PropsUtil.get("browser.type");

		if ("${browserType}" == "safari") {
			Button.clickSave();
		}
		else {
			AssertClick(
				locator1 = "Button#SUBMIT",
				value1 = "Save");
		}

		if ("${userEmailAddressVariation}" == "Invalid") {
			AssertTextEquals(
				locator1 = "Message#ERROR_ENTER_A_VALID_EMAIL_ADDRESS",
				value1 = "Please enter a valid email address.");
		}
		else if ("${userEmailAddressVariation}" == "Null") {
			Alert.viewRequiredField();
		}
		else if ("${userEmailAddressVariation}" == "Root") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_ENTER_A_VALID_EMAIL_ADDRESS",
				value1 = "Please enter a valid email address.");
		}
		else if ("${userScreenNameVariation}" == "Invalid") {
			AssertTextEquals(
				locator1 = "Message#ERROR_FORM_VALIDATION",
				value1 = "The screen name cannot be an email address or a reserved word, such as postfix. It must contain only alphanumeric or the following special characters: -._.");
		}
		else {
			var userEmailAddress = StringUtil.lowerCase("${userEmailAddress}");
			var userScreenName = StringUtil.lowerCase("${userScreenName}");

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
				value1 = "${userScreenName}");

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
				value1 = "${userEmailAddress}");

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
				value1 = "${userFirstName}");

			if (isSet(userMiddleName)) {
				AssertTextEquals(
					locator1 = "UsersAndOrganizationsEditUser#DETAILS_MIDDLE_NAME_FIELD",
					value1 = "${userMiddleName}");
			}

			if (isSet(userJobTitle)) {
				AssertTextEquals(
					locator1 = "UsersAndOrganizationsEditUser#DETAILS_JOB_TITLE_FIELD",
					value1 = "${userJobTitle}");
			}

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
				value1 = "${userLastName}");

			if (isSet(userTag)) {
				AssertTextEquals(
					key_userTag = "${userTag}",
					locator1 = "UsersAndOrganizationsEditUser#DETAILS_TAG_FIELD",
					value1 = "${userTag}");
			}

			if (isSet(userComment)) {
				AssertTextEquals(
					locator1 = "TextArea#COMMENTS",
					value1 = "${userComment}");
			}
		}

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	macro addMultipleCP {
		for (var userEmail : list "${usersEmailsList}") {
			var userEmailAddress = "${userEmail}";
			var userName = StringUtil.replace("${userEmail}", "@liferay.com", "");

			ApplicationsMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations");

			User.addCP(
				userBirthday = "${userBirthday}",
				userEmailAddress = "${userEmailAddress}",
				userEmailAddressVariation = "${userEmailAddressVariation}",
				userFirstName = "${userName}",
				userGender = "${userGender}",
				userLastName = "${userName}",
				userMiddleName = "${userMiddleName}",
				userScreenName = "${userName}",
				userScreenNameVariation = "${userScreenNameVariation}");
		}
	}

	macro addPersonalSiteCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoProfileAndDashboard();

		if ("${personalSite}" == "Public") {
			AssertTextEquals(
				key_subtitle = "Profile",
				locator1 = "UsersAndOrganizationsEditUser#PERSONAL_SITE_LABEL",
				value1 = "PROFILE");

			Select(
				locator1 = "UsersAndOrganizationsEditUser#PERSONAL_SITE_MY_PROFILE",
				value1 = "${siteTemplateName}");
		}
		else {
			AssertTextEquals(
				key_subtitle = "Dashboard",
				locator1 = "UsersAndOrganizationsEditUser#PERSONAL_SITE_LABEL",
				value1 = "DASHBOARD");

			Select(
				locator1 = "UsersAndOrganizationsEditUser#PERSONAL_SITE_MY_DASHBOARD",
				value1 = "${siteTemplateName}");
		}

		PortletEntry.save();
	}

	macro addReservedEmailAddressCP {
		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		Button.clickSave();

		Alert.viewErrorMessage(errorMessage = "The email address you requested is reserved.");
	}

	macro addReservedScreenNameCP {
		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_1",
			value1 = "The screen name you requested is reserved.");
	}

	macro advancedSearchViaFriendsDirectoryPG {
		Click(locator1 = "NavBar#SEARCH_TOGGLE_ADVANCED");

		if ("${searchField}" == "First Name") {
			Type(
				locator1 = "TextInput#FIRST_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Middle Name") {
			Type(
				locator1 = "TextInput#MIDDLE_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Last Name") {
			Type(
				locator1 = "TextInput#LAST_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Screen Name") {
			Type(
				locator1 = "TextInput#SCREEN_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Email Address") {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
				value1 = "${searchTerm}");
		}

		KeyPress(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "\RETURN");

		if ("${searchNoResults}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");

			var key_userScreenName = "${userScreenName}";

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_FIRST_NAME_LINK");

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK");

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_SCREEN_NAME_LINK");
		}
		else {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_FIRST_NAME_LINK",
				value1 = "${userFirstName}");

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK",
				value1 = "${userLastName}");

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}");
		}
	}

	macro advancedSearchViaMySitesDirectoryPG {
		Click(locator1 = "NavBar#SEARCH_TOGGLE_ADVANCED");

		if ("${searchField}" == "First Name") {
			Type(
				locator1 = "TextInput#FIRST_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Middle Name") {
			Type(
				locator1 = "TextInput#MIDDLE_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Last Name") {
			Type(
				locator1 = "TextInput#LAST_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Screen Name") {
			Type(
				locator1 = "TextInput#SCREEN_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Email Address") {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
				value1 = "${searchTerm}");
		}

		KeyPress(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "\RETURN");

		if ("${searchNoResults}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");

			var key_userScreenName = "${userScreenName}";

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_FIRST_NAME_LINK");

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK");

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_SCREEN_NAME_LINK");
		}
		else {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_FIRST_NAME_LINK",
				value1 = "${userFirstName}");

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK",
				value1 = "${userLastName}");

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}");
		}
	}

	macro advancedSearchViaPortalDirectoryPG {
		Click(locator1 = "NavBar#SEARCH_TOGGLE_ADVANCED");

		if ("${searchField}" == "First Name") {
			Type(
				locator1 = "TextInput#FIRST_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Middle Name") {
			Type(
				locator1 = "TextInput#MIDDLE_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Last Name") {
			Type(
				locator1 = "TextInput#LAST_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Screen Name") {
			Type(
				locator1 = "TextInput#SCREEN_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Email Address") {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
				value1 = "${searchTerm}");
		}

		KeyPress(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "\RETURN");

		if ("${searchNoResults}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");

			var key_userScreenName = "${userScreenName}";

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_FIRST_NAME_LINK");

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK");

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_SCREEN_NAME_LINK");
		}
		else {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_FIRST_NAME_LINK",
				value1 = "${userFirstName}");

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK",
				value1 = "${userLastName}");

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}");
		}
	}

	macro advancedSearchViaSiteMembersDirectoryPG {
		Click(locator1 = "NavBar#SEARCH_TOGGLE_ADVANCED");

		if ("${searchField}" == "First Name") {
			Type(
				locator1 = "TextInput#FIRST_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Middle Name") {
			Type(
				locator1 = "TextInput#MIDDLE_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Last Name") {
			Type(
				locator1 = "TextInput#LAST_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Screen Name") {
			Type(
				locator1 = "TextInput#SCREEN_NAME",
				value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Email Address") {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
				value1 = "${searchTerm}");
		}

		KeyPress(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "\RETURN");

		if ("${searchNoResults}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");

			var key_userScreenName = "${userScreenName}";

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_FIRST_NAME_LINK");

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK");

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_SCREEN_NAME_LINK");
		}
		else {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_FIRST_NAME_LINK",
				value1 = "${userFirstName}");

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK",
				value1 = "${userLastName}");

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}");
		}
	}

	macro answerPasswordReminder {
		Pause(locator1 = "3000");

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#REMINDER_QUERY")) {
			Type(
				locator1 = "TextInput#REMINDER_QUERY",
				value1 = "test");

			Click(locator1 = "Button#SUBMIT");
		}
	}

	macro answerPasswordReminderLocalized {
		Pause(locator1 = "3000");

		var key_localizedAnswer = "${localizedAnswer}";

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#ANSWER_LOCALIZED")) {
			Type(
				locator1 = "TextInput#ANSWER_LOCALIZED",
				value1 = "test");

			Button.click(button = "${localizedSaveButton}");

			Button.viewNotPresent(button = "${localizedSaveButton}");
		}
	}

	macro assignAccountCP {
		User.openUsersAdmin();

		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoMemberships();

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ACCOUNTS_SELECT_LINK",
			value1 = "SELECT");

		SelectFrame(
			key_title = "Select Account",
			locator1 = "IFrame#MODAL_ANY");

		for (var accountName : list "${accountName}") {
			Check(
				key_tableEntry = "${accountName}",
				locator1 = "LexiconTable#TABLE_ENTRY_CHECKBOX");
		}

		SelectFrame(value1 = "relative=top");

		Button.clickAdd();

		PortletEntry.save();
	}

	macro assignAssetLibraryRole {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoRoles();

		AssertTextEquals(
			locator1 = "Message#EMPTY_DEPOT_ROLE",
			value1 = "This user is not assigned any asset library roles.");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#DEPOT_ROLES_SELECT_LINK",
			value1 = "SELECT");

		SelectFrame(locator1 = "IFrame#SELECT_DEPOT_ROLE");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#DEPOT_ROLES_SELECT_BUTTON",
			roleTitle = "${roleTitle}",
			value1 = "Choose");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			key_roleTitle = "${roleTitle}",
			locator1 = "UsersAndOrganizationsEditUser#DEPOT_ROLES_TITLE",
			value1 = "${roleTitle}");

		PortletEntry.save();
	}

	macro assignOrgRoleCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoRoles();

		AssertClick(
			key_roleType = StringUtil.replace("Organization Role", " ", ""),
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_LINK",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#SELECT_ORGANIZATION_ROLE");

		var key_roleTitle = "${roleTitle}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_ROLE_NAME",
			value1 = "${roleTitle}");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_ORGANIZATION_SELECT_CHOOSE_BUTTON",
			value1 = "Choose");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_ROLE_NAME",
			value1 = "${roleTitle}");

		PortletEntry.save();
	}

	macro assignRegularRoleCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoRoles();

		WaitForLiferayEvent.initializeLiferayEventLog();

		AssertClick(
			key_roleType = StringUtil.replace("Regular Role", " ", ""),
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_LINK",
			value1 = "Select");

		Pause(locator1 = "3000");

		SelectFrame(locator1 = "IFrame#SELECT_REGULAR_ROLE");

		var key_roleTitle = "${roleTitle}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_ROLE_NAME",
			value1 = "${roleTitle}");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_REGULAR_SELECT_CHOOSE_BUTTON",
			value1 = "Choose");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_ROLE_NAME",
			value1 = "${roleTitle}");

		PortletEntry.save();
	}

	macro assignSiteRoleCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoRoles();

		AssertClick(
			key_roleType = StringUtil.replace("Site Role", " ", ""),
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_LINK",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#SELECT_SITE_ROLE");

		var key_roleTitle = "${siteRoleName}";
		var key_siteRoleName = "${siteRoleName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SITE_ROLES_TABLE_TITLE",
			value1 = "${siteRoleName}");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_REGULAR_SELECT_CHOOSE_BUTTON",
			value1 = "Choose");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SITE_ROLES_TABLE_TITLE",
			value1 = "${siteRoleName}");

		PortletEntry.save();
	}

	macro assignUserGroupCP {
		UserNavigator.gotoMemberships();

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#USER_GROUPS_SELECT_LINK",
			value1 = "Select");

		Pause(locator1 = "3000");

		SelectFrame(locator1 = "IFrame#SELECT_USER_GROUP");

		AssertTextEquals(
			key_userGroupName = "${userGroupName}",
			locator1 = "UsersAndOrganizationsEditUser#USER_GROUPS_TABLE_NAME",
			value1 = "${userGroupName}");

		AssertClick(
			key_dmDocumentTypeName = "${userGroupName}",
			locator1 = "DocumentsAndMediaSelectDocument#DOCUMENTS_TABLE_CHOOSE",
			value1 = "Choose");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			key_userGroupName = "${userGroupName}",
			locator1 = "UsersAndOrganizationsEditUser#USER_GROUPS_TABLE_NAME",
			value1 = "${userGroupName}");

		AssertElementPresent(
			key_userGroupName = "${userGroupName}",
			locator1 = "UsersAndOrganizationsEditUser#USER_GROUPS_TABLE_REMOVE");

		PortletEntry.save();
	}

	macro attemptImpersonateCP {
		Search.searchCP(searchTerm = "${userScreenName}");

		var key_rowEntry = "${userScreenName}";

		if (isSet(notAdmin)) {
			AssertElementNotPresent(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

			AssertElementNotPresent(locator1 = "UsersAndOrganizations#USER_TABLE_IMPERSONATE");
		}
		else {
			Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

			MenuItem.viewNotPresent(menuItem = "Impersonate User");
		}
	}

	macro basicSearchCP {
		if ("${userBasicSearch}" == "Basic") {
			Search.searchCP(searchTerm = "${userScreenName}");

			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userName}");

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
				value1 = "${userScreenName}");

			Search.searchCP(searchTerm = "user1*");

			AssertTextPresent(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");
		}
		else if ("${userBasicSearch}" == "Full Name") {
			var fullName = '''"${userFirstName} ${userLastName}"''';

			Search.searchCP(searchTerm = "${fullName}");

			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userName}");

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
				value1 = "${userScreenName}");

			var fullName = '''"${userFirstName} 1 ${userLastName}"''';

			Search.searchCP(searchTerm = "${fullName}");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");
		}
		else if ("${userBasicSearch}" == "Quotes") {
			var quotes = '''"${userScreenName}"''';

			Search.searchCP(searchTerm = "${quotes}");

			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userName}");

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
				value1 = "${userScreenName}");
		}
	}

	macro bulkActivateCP {
		if (isSet(userFirstNameList)) {
			for (var userFirstName : list "${userFirstNameList}") {
				LexiconEntry.selectEntry(rowEntry = "${userFirstName}");
			}
		}
		else {
			PortletEntry.selectAll();

			if (IsChecked(key_rowEntry = "Test Test", locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX")) {
				Click(
					key_rowEntry = "Test Test",
					locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
			}

			AssertNotChecked.assertNotCheckedNotVisible(
				key_rowEntry = "Test Test",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
		}

		Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Activate");

		Alert.viewSuccessMessage();
	}

	macro bulkDeactivateCP {
		if (isSet(userFirstNameList)) {
			for (var userFirstName : list "${userFirstNameList}") {
				LexiconEntry.selectEntry(rowEntry = "${userFirstName}");
			}
		}
		else {
			PortletEntry.selectAll();

			if (IsChecked(key_rowEntry = "Test Test", locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX")) {
				Click(
					key_rowEntry = "Test Test",
					locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
			}

			AssertNotChecked.assertNotCheckedNotVisible(
				key_rowEntry = "Test Test",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
		}

		if ("${deactivateType}" == "Management Toolbar") {
			Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Deactivate");
		}
		else {
			ClickNoError(locator1 = "Icon#DEACTIVATE");
		}

		AssertConfirm(value1 = "Are you sure you want to deactivate the selected users?");

		Alert.viewSuccessMessage();
	}

	macro bulkDeleteCP {
		if (isSet(userFirstNameList)) {
			for (var userFirstName : list "${userFirstNameList}") {
				LexiconEntry.selectEntry(rowEntry = "${userFirstName}");
			}
		}
		else {
			PortletEntry.selectAll();
		}

		if ("${deactivateType}" == "Management Toolbar") {
			Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");
		}
		else {
			ClickNoError(locator1 = "Icon#DELETE");
		}

		AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to permanently delete the selected users?");

		Alert.viewSuccessMessage();
	}

	macro changePasswordCP {
		UserNavigator.gotoPassword();

		if ("${userPassword}" == "Invalid") {
			Type(
				locator1 = "TextInput#CURRENT_PASSWORD",
				value1 = "");

			Type(
				locator1 = "TextInput#NEW_PASSWORD",
				value1 = "test1");

			Type(
				locator1 = "TextInput#ENTER_AGAIN",
				value1 = "test1");

			Button.clickSave();

			Alert.viewRequiredField();

			User.logoutPG();

			User.loginUserPG(
				password = "test",
				userEmailAddress = "${userEmailAddress}");

			User.logoutPG();

			User.loginPG(
				authenticationMethod = "${authenticationMethod}",
				newPassword = "${newPassword}",
				nodePort = "${nodePort}",
				password = "test",
				userEmailAddress = "test@liferay.com",
				userScreenName = "${userScreenName}");
		}
		else {
			Type(
				locator1 = "TextInput#CURRENT_PASSWORD",
				value1 = "test");

			Type(
				locator1 = "TextInput#NEW_PASSWORD",
				value1 = "test1");

			Type(
				locator1 = "TextInput#ENTER_AGAIN",
				value1 = "test1");

			PortletEntry.save();

			User.logoutPG();

			User.loginUserPG(
				password = "test1",
				userEmailAddress = "${userEmailAddress}");

			User.logoutPG();

			User.loginPG(
				authenticationMethod = "${authenticationMethod}",
				newPassword = "${newPassword}",
				nodePort = "${nodePort}",
				password = "test",
				userEmailAddress = "test@liferay.com",
				userScreenName = "${userScreenName}");
		}
	}

	macro changeProfileImage {
		Button.click(button = "Change");

		IFrame.selectModalFrame();

		AssertElementPresent(locator1 = "UsersAndOrganizationsEditUser#UPLOAD_IMAGE_SELECT");

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#UPLOAD_FILE",
			value1 = "${imageName}");

		Pause(locator1 = "3000");

		WaitForElementPresent(locator1 = "UsersAndOrganizationsEditUser#USER_PORTRAIT_CROPPER");

		WaitForElementNotPresent(
			key_text = "Done",
			locator1 = "Button#ANY_DISABLED");

		Button.click(button = "Done");

		IFrame.selectTopFrame();

		AssertVisible(
			key_imageName = "${imageName}",
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_PROFILE_IMAGE");
	}

	macro confirmPassword {
		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#CONFIRM_PASSWORD");

		Click(locator1 = "TextInput#PASSWORD_CONFIRM");

		Type(
			locator1 = "TextInput#PASSWORD_CONFIRM",
			value1 = "${password}");

		Button.clickConfirm();

		SelectFrameTop();

		Alert.viewSuccessMessage();

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	macro createAccount {
		SignInNavigator.gotoCreateAccount();

		Type(
			locator1 = "TextInput#FIRST_NAME",
			value1 = "${userFirstName}");

		Type(
			locator1 = "TextInput#LAST_NAME",
			value1 = "${userLastName}");

		Type(
			locator1 = "TextInput#SCREEN_NAME",
			value1 = "${userScreenName}");

		Type(
			locator1 = "TextInput#EMAIL_ADDRESS",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "TextInput#PASSWORD",
			value1 = "${newPassword}");

		Type(
			locator1 = "TextInput#ENTER_AGAIN",
			value1 = "${newPassword}");

		Button.clickSave();

		Alert.viewSuccessMessageText(successMessage = "Thank you for creating an account. Use your password to log in.");
	}

	@description = "Create a new Portal user named ${userFirstName} that is associated with the OpenID ${openIDURL}."
	macro createUserViaOpenID {
		Navigator.openURL();

		Navigator.gotoLoginPage();

		AssertClick(
			locator1 = "Link#OPENID",
			value1 = "OpenID");

		Type(
			locator1 = "SignInOpenID#OPENID_FIELD",
			value1 = "${openIdurl}");

		Click(locator1 = "Button#SIGN_IN");

		Type(
			locator1 = "OpenIDLogin#YAHOO_LOGIN_USERNAME_FIELD",
			value1 = "${openIdUsername}");

		KeyPress(
			locator1 = "OpenIDLogin#YAHOO_LOGIN_USERNAME_FIELD",
			value1 = "\RETURN");

		Type(
			locator1 = "TextInput#PASSWORD_TYPE",
			value1 = "${openIdPassword}");

		KeyPress(
			locator1 = "TextInput#PASSWORD_TYPE",
			value1 = "\RETURN");

		if (IsElementPresent(locator1 = "OpenIDLogin#YAHOO_LOGIN_SKIP_SECURE_BUTTON")) {
			Click(locator1 = "OpenIDLogin#YAHOO_LOGIN_SKIP_SECURE_BUTTON");
		}

		Type(
			locator1 = "TextInput#FIRST_NAME",
			value1 = "${userFirstName}");

		Type(
			locator1 = "TextInput#LAST_NAME",
			value1 = "${userLastName}");

		Type(
			locator1 = "TextInput#SCREEN_NAME",
			value1 = "${userScreenName}");

		Type(
			locator1 = "TextInput#EMAIL_ADDRESS",
			value1 = "${userEmailAddress}");

		Button.clickSave();
	}

	macro deactivateCP {
		if ("${deactivateType}" == "Actions") {
			User.singleDeactivateCP(userFirstName = "${userFirstName}");
		}
		else {
			User.bulkDeactivateCP(
				deactivateType = "${deactivateType}",
				userFirstNameList = "${userFirstNameList}");
		}
	}

	macro deleteCP {
		ManagementBar.setFilterAndOrder(filterBy = "Inactive");

		if ("${deactivateType}" == "Actions") {
			User.singleDeleteCP(userFirstName = "${userFirstName}");
		}
		else {
			User.bulkDeleteCP(
				deactivateType = "${deactivateType}",
				userFirstNameList = "${userFirstNameList}");
		}
	}

	macro deletePersonalDataCP {
		Search.searchCP(searchTerm = "${userFirstName}");

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Delete Personal Data",
			rowEntry = "${userFirstName}");

		AssertConfirm(value1 = "The user must be deactivated before starting the data erasure process. Are you sure you want to deactivate the user?");

		Alert.viewSuccessMessage();

		AssertElementPresent(
			key_firstName = "${userFirstName}",
			key_lastName = "${userLastName}",
			locator1 = "DataErasure#HEADER");
	}

	macro deleteProfileImage {
		Button.click(button = "Delete");

		AssertVisible(
			key_imageName = "user_portrait",
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_PROFILE_IMAGE");
	}

	macro editAddressCP {
		UserNavigator.gotoContact();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		if (isSet(addressType)) {
			Select(
				locator1 = "Select#TYPE",
				value1 = "${addressType}");
		}

		if (isSet(street1)) {
			Type(
				locator1 = "TextInput#STREET_1",
				value1 = "${street1}");
		}

		if (isSet(city)) {
			Type(
				locator1 = "TextInput#CITY",
				value1 = "${city}");
		}

		if (isSet(country)) {
			Select(
				locator1 = "Select#COUNTRY",
				value1 = "${country}");
		}

		if (isSet(postalCode)) {
			Type(
				locator1 = "TextInput#POSTAL_CODE",
				value1 = "${postalCode}");
		}

		PortletEntry.save();
	}

	macro editCategorizationCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		AssertElementPresent(locator1 = "UsersAndOrganizationsEditUser#CATEGORIZATION_LABEL");

		AssertElementPresent(
			key_vocabularyName = "${vocabularyName}",
			locator1 = "UsersAndOrganizationsEditUser#VOCABULARY_LABEL");

		AssertElementPresent.assertVisible(
			key_vocabularyName = "${vocabularyName}",
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_CATEGORY_SELECT",
			value1 = "Select");

		AssertClick(
			key_vocabularyName = "${vocabularyName}",
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_CATEGORY_SELECT",
			value1 = "Select");

		AssertTextEquals(
			locator1 = "Modal#HEADER",
			value1 = "Select ${vocabularyName}");

		AssetCategorization.selectCategory(categoryName = "${categoryName}");

		PortletEntry.save();
	}

	macro editDetailsViaProfile {
		Click.javaScriptClick(locator1 = "Icon#EDIT_PENCIL");

		Portlet.viewSpecificPG(portletName = "Account Settings");

		AssertElementPresent.assertElementPresent(locator1 = "TextInput#FIRST_NAME");

		if (isSet(userContact)) {
			User.editAddressCP(
				addressType = "${addressType}",
				city = "${city}",
				country = "${country}",
				postalCode = "${postalCode}",
				street1 = "${street1}");
		}
	}

	macro editDisplaySettingsCP {
		User.searchCP(searchTerm = "${userScreenName}");

		var key_rowEntry = "${userScreenName}";

		Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Select(
			locator1 = "Select#DEFAULT_LANGUAGE",
			value1 = "${languageName}");

		PortletEntry.save();
	}

	macro editEmailAddressCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Button.clickSave();

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#CONFIRM_PASSWORD");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_CONFIRM_PASSWORD_FIELD",
			value1 = "${password}");

		Button.clickConfirm();

		Alert.viewSuccessMessage();
	}

	macro editPassword {
		UserNavigator.gotoPassword();

		if (isSet(currentPassword)) {
			Type(
				locator1 = "TextInput#CURRENT_PASSWORD",
				value1 = "${currentPassword}");
		}

		if (!(isSet(newPassword))) {
			var newPassword = "password";
		}

		Type(
			locator1 = "TextInput#NEW_PASSWORD",
			value1 = "${newPassword}");

		Type(
			locator1 = "TextInput#ENTER_AGAIN",
			value1 = "${newPassword}");

		if (IsElementPresent(checkboxName = "Require Password Reset", locator1 = "Checkbox#ANY_CHECKBOX")) {
			if ("${requirePasswordReset}" == "true") {
				Check(
					checkboxName = "Require Password Reset",
					locator1 = "Checkbox#ANY_CHECKBOX");
			}
			else {
				Uncheck(
					checkboxName = "Require Password Reset",
					locator1 = "Checkbox#ANY_CHECKBOX");
			}
		}

		PortletEntry.save();
	}

	macro editPasswordCP {
		JSONUserAPI._disablePasswordChangeRequired();

		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		User.editPassword(
			currentPassword = "${currentPassword}",
			newPassword = "${newPassword}",
			requirePasswordReset = "${requirePasswordReset}");

		User.logoutPG();

		if ("${samlEnabled}" == "true") {
			User.viewLoggedOutPG();
		}

		User.loginPG(
			authenticationMethod = "${authenticationMethod}",
			newPassword = "${newPassword}",
			nodePort = "${nodePort}",
			password = "${newPassword}",
			userEmailAddress = "${userEmailAddress}",
			userScreenName = "${userScreenName}");

		User.logoutPG();

		if ("${samlEnabled}" == "true") {
			User.viewLoggedOutPG();
		}

		User.loginPG(
			authenticationMethod = "${authenticationMethod}",
			nodePort = "${nodePort}",
			password = "test",
			userEmailAddress = "test@liferay.com",
			userScreenName = "${userScreenName}");
	}

	macro editPasswordInvalidCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		if (!(isSet(newPassword))) {
			var newPassword = "password";
		}

		UserNavigator.gotoPassword();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_NEW_PASSWORD_FIELD",
			value1 = "${newPassword}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_ENTER_AGAIN_FIELD",
			value1 = "${newPassword}");

		Button.clickSave();

		if ("${passwordTooShort}" == "true") {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "That password is too short. Please make sure your password is at least 6 characters long.");
		}
		else if (isSet(minimumNumbers)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "That password must contain at least ${minimumNumbers} numbers.");
		}
		else if (isSet(regex)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "That password does not comply with the regular expression ${regex}. Please enter a different password.");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "That password is invalid. Please enter in a different password.");
		}
	}

	macro editPrimary {
		if ("${makePrimary}" == "true") {
			Check(
				checkboxName = "Make Primary",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}
		else if ("${makePrimary}" == "false") {
			Uncheck(
				checkboxName = "Make Primary",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();
	}

	macro editUserAlertsAndAnnouncementsDeliveryCP {
		UserNavigator.gotoAlertsAndAnnouncementsDelivery();

		if ("${checkbox}" == "Enable") {
			for (var deliveryOption : list "${deliveryOptions}") {
				Check(
					key_tableEntry = "${deliveryOption}",
					locator1 = "LexiconTable#TABLE_ENTRY_CHECKBOX");
			}
		}

		PortletEntry.save();
	}

	macro editUserAssetLibraryCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoMemberships();

		AssertElementPresent.assertVisible(
			locator1 = "UsersAndOrganizationsEditUser#DEPOT_SELECT_LINK",
			value1 = "SELECT");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#DEPOT_SELECT_LINK",
			value1 = "SELECT");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconEntry.gotoEntry(rowEntry = "${depotName}");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals.assertPartialText(
			key_siteName = "${depotName}",
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${depotName}");

		PortletEntry.save();
	}

	macro editUserDisplaySettingsCP {
		var key_userScreenName = "${userScreenName}";

		Pause(locator1 = "1000");

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}");

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}");

		User.editUserDisplaySettingsTimeZonePacific(displaySettingsGreeting = "${displaySettingsGreeting}");
	}

	macro editUserDisplaySettingsTimeZonePacific {
		UserNavigator.gotoDisplaySettings();

		if (IsTextNotEqual(locator1 = "Select#LOS_ANGELES_TIME_ZONE", value1 = "(UTC -07:00) Pacific Daylight Time")) {
			Select(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -08:00) Pacific Standard Time");
		}
		else {
			Select(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -07:00) Pacific Daylight Time");
		}

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DISPLAY_SETTINGS_GREETING_FIELD",
			value1 = "${displaySettingsGreeting}");

		PortletEntry.save();

		UserNavigator.gotoDisplaySettings();

		if (IsTextNotEqual(locator1 = "Select#LOS_ANGELES_TIME_ZONE", value1 = "(UTC -07:00) Pacific Daylight Time")) {
			AssertSelectedLabel(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -08:00) Pacific Standard Time");
		}
		else {
			AssertSelectedLabel(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -07:00) Pacific Daylight Time");
		}

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#DISPLAY_SETTINGS_GREETING_FIELD",
			value1 = "${displaySettingsGreeting}");
	}

	macro editUserGenderCP {
		LexiconEntry.gotoEntry(rowEntry = "${userName}");

		Select(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_GENDER_SELECT",
			value1 = "${userGender}");

		PortletEntry.save();
	}

	macro editUserInformation {
		AssertElementPresent.assertElementPresent(locator1 = "TextInput#FIRST_NAME");

		if (isSet(userFirstNameEdit)) {
			Type(
				locator1 = "TextInput#FIRST_NAME",
				value1 = "${userFirstNameEdit}");
		}

		if (isSet(userLastNameEdit)) {
			Type(
				locator1 = "TextInput#LAST_NAME",
				value1 = "${userLastNameEdit}");
		}

		if (isSet(userMiddleNameEdit)) {
			Type(
				locator1 = "TextInput#MIDDLE_NAME",
				value1 = "${userMiddleNameEdit}");
		}

		if (isSet(userCustomField)) {
			Type(
				key_fieldLabel = "${userCustomFieldLabel}",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "${userCustomField}");
		}

		PortletEntry.save();

		if (isSet(userScreenNameEdit)) {
			Type(
				locator1 = "TextInput#SCREEN_NAME",
				value1 = "${userScreenNameEdit}");

			Button.clickSave();

			User.confirmPassword(password = "${password}");
		}

		if (isSet(userEmailAddressEdit)) {
			Type(
				locator1 = "TextInput#EMAIL_ADDRESS",
				value1 = "${userEmailAddressEdit}");

			Button.clickSave();

			User.confirmPassword(password = "${password}");
		}
	}

	macro editUserJobTitleCP {
		LexiconEntry.gotoEntry(rowEntry = "${userName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_JOB_TITLE_FIELD",
			value1 = "${userJobTitle}");

		PortletEntry.save();
	}

	macro editUserOrganizationCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoOrganizations();

		var key_orgName = "${orgName}";

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ORGANIZATIONS_SELECT_LINK",
			value1 = "Select");

		SelectFrame(locator1 = "UsersAndOrganizationsSelectOrganization#SELECT_ORGANIZATION_IFRAME");

		Search.searchCP(searchTerm = "${orgName}");

		AssertTextEquals(
			locator1 = "ContentRow#ORGANIZATION_TABLE_NAME",
			value1 = "${orgName}");

		AssertClick(
			locator1 = "UsersAndOrganizationsSelectOrganization#ORGANIZATION_TABLE_CHOOSE_BUTTON",
			value1 = "Choose");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "ContentRow#ORGANIZATION_TABLE_NAME",
			value1 = "${orgName}");

		PortletEntry.save();
	}

	macro editUserSiteCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoMemberships();

		var key_siteName = "${siteName}";

		WaitForLiferayEvent.initializeLiferayEventLog();

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#SITES_SELECT_LINK",
			value1 = "SELECT");

		SelectFrame(locator1 = "IFrame#SELECT_USER_SITES");

		Type(
			locator1 = "TextInput#SITE_SEARCH_KEYWORDS",
			value1 = "${siteName}");

		var browserType = PropsUtil.get("browser.type");

		if ("${browserType}" != "safari") {
			KeyPress(
				locator1 = "TextInput#SEARCH",
				value1 = "\RETURN");

			AssertTextEquals.assertPartialText(
				locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
				value1 = "${siteName}");

			Click(locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK");
		}
		else {
			Click.javaScriptClick(locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK");
		}

		SelectFrame(value1 = "relative=top");

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${siteName}");

		PortletEntry.save();
	}

	macro editUserSuffixCP {
		LexiconEntry.gotoEntry(rowEntry = "${userName}");

		Select(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SUFFIX_SELECT",
			value1 = "${userSuffix}");

		PortletEntry.save();
	}

	macro editUserTagCP {
		LexiconEntry.gotoEntry(rowEntry = "${userName}");

		if ("${addTagMethod}" == "Select") {
			User.selectUserTagCP(tagNameList = "${tagNameList}");
		}
		else {
			for (var tagName : list "${tagNameList}") {
				var tagName = StringUtil.lowerCase("${tagName}");

				AssetCategorization.addTag(tagName = "${tagName}");
			}
		}

		PortletEntry.save();
	}

	macro exportPersonalDataCP {
		Search.searchCP(searchTerm = "${userFirstName}");

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Export Personal Data",
			rowEntry = "${userFirstName}");

		AssertElementPresent(
			key_firstName = "${userFirstName}",
			key_lastName = "${userLastName}",
			locator1 = "ExportPersonalData#HEADER");
	}

	@summary = "Log into Liferay via '${userScreenName}' using URL navigation"
	macro firstLoginByScreenNamePG {
		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}");
		}
		else {
			Navigator.openURL();
		}

		UserBar.signOut();

		JSONUser.agreeToTermsAndAnswerReminderQueryByScreenName(
			portalURL = "${virtualHostsURL}",
			userScreenName = "${userScreenName}");

		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}/web/guest?SM_USER=${userEmailAddress}");
		}
		else {
			var baseURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${baseURL}/web/guest?SM_USER=${userScreenName}");
		}

		// TODO Remove below macro after password reminder gets completely cleaned out with JSON

		User.resetPassword(newPassword = "${newPassword}");

		User.answerPasswordReminder();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	@summary = "Log into Liferay using URL navigation"
	macro firstLoginPG {
		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(
				domain = "${domain}",
				url = "${virtualHostsURL}");
		}
		else {
			Navigator.openURL();
		}

		UserBar.signOut();

		JSONUser.agreeToTermsAndAnswerReminderQuery(
			portalURL = "${virtualHostsURL}",
			userEmailAddress = "${userEmailAddress}");

		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}/web/guest?SM_USER=${userEmailAddress}");
		}
		else {
			var baseURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${baseURL}/web/guest?SM_USER=${userEmailAddress}");
		}

		// TODO Remove below macro after password reminder gets completely cleaned out with JSON

		User.resetPassword(newPassword = "${newPassword}");

		User.answerPasswordReminder();

		if (IsElementNotPresent(locator1 = "UserBar#USER_AVATAR_IMAGE")) {
			takeScreenshot();

			echo("URL login failed, falling back to UI login.");

			User.firstLoginUI(
				idpName = "${idpName}",
				password = "${password}",
				rememberMeChecked = "${rememberMeChecked}",
				specificURL = "${virtualHostsURL}",
				userEmailAddress = "${userEmailAddress}",
				userScreenName = "${userScreenName}");
		}
		else {
			WaitForLiferayEvent.initializeLiferayEventLog();
		}
	}

	@summary = "Log into Liferay using the UI"
	macro firstLoginUI {
		if (isSet(specificURL)) {
			Navigator.openSpecificURL(
				domain = "${domain}",
				url = "${specificURL}");
		}
		else {
			Navigator.openURL();
		}

		User._clickSignInLink(
			idpName = "${idpName}",
			localization = "${localization}",
			samlMultiIdPs = "${samlMultiIdPs}");

		if ("${authenticationMethod}" == "By Screen Name") {
			Type(
				locator1 = "TextInput#SCREEN_NAME",
				value1 = "${userScreenName}");
		}
		else if ("${authenticationMethod}" == "By User ID") {
			Type.typePause(
				key_text = "ID",
				locator1 = "TextInput#ANY",
				value1 = "${userId}");
		}
		else {
			Type.typePause(
				locator1 = "TextInput#EMAIL_ADDRESS",
				value1 = "${userEmailAddress}");
		}

		Type.typePause(
			locator1 = "TextInput#PASSWORD",
			value1 = "${password}");

		if (isSet(rememberMeChecked) && ("${rememberMeChecked}" == "true")) {
			Check(locator1 = "Checkbox#REMEMBER_ME");
		}

		User._clickSignInButton(localization = "${localization}");

		if (isSet(localizedAgree)) {
			User.acceptEndUserLicenseAgreementLocalized(localizedAgree = "${localizedAgree}");
		}
		else if (IsElementPresent(locator1 = "Button#I_AGREE")) {
			SignIn.agreeToTermsOfUse();
		}

		if (IsElementPresent(locator1 = "TextInput#PASSWORD_2")) {
			User.resetPassword(
				localizedSaveButton = "${localizedSaveButton}",
				newPassword = "${newPassword}");
		}

		if (isSet(localizedAnswer)) {
			User.answerPasswordReminderLocalized(
				localizedAnswer = "${localizedAnswer}",
				localizedSaveButton = "${localizedSaveButton}");
		}
		else if (IsElementPresent(locator1 = "Select#QUESTION")) {
			SignIn.setPasswordReminder();
		}

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	macro forgotPasswordSendResetLink {
		SignInNavigator.gotoForgotPassword();

		Type(
			locator1 = "TextInput#EMAIL_ADDRESS",
			value1 = "${userEmailAddress}");

		Button.clickNext();

		AssertClick(
			locator1 = "Button#SEND_PASSWORD_RESET_LINK",
			value1 = "Send Password Reset Link");

		Alert.viewSuccessMessageText(successMessage = "Your request completed successfully.");
	}

	macro gotoAddPage {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Manage Pages",
			rowEntry = "${userName}");
	}

	macro gotoEditCP {
		var key_userScreenName = "${userScreenName}";

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}");

		AssertTextEquals.assertPartialText(
			locator1 = "Portlet#HEADER",
			value1 = "Edit User");
	}

	macro impersonateCP {
		Pause(locator1 = "1000");

		if (isSet(userName)) {
			var userScreenName = "${userName}";
		}

		Search.searchCP(searchTerm = "${userScreenName}");

		var key_rowEntry = "${userScreenName}";

		Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

		MenuItem.click(menuItem = "Impersonate User");

		if (isSet(siteName)) {
			SelectWindow(locator1 = "title=Home - ${siteName}");
		}
		else {
			SelectWindow.selectPopUp(locator1 = "null");
		}

		UserBar.gotoDropdown();
	}

	@summary = "Log into Liferay Portal as '${userScreenName}' using the password '${password}'"
	macro loginByScreenNamePG {
		JSONUser.agreeToTermsAndAnswerReminderQueryByScreenName(
			creatorPassword = "${password}",
			portalURL = "${virtualHostsURL}",
			userScreenName = "${userScreenName}");

		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}/web/guest?SM_USER=${userScreenName}");
		}
		else {
			var baseURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${baseURL}/web/guest?SM_USER=${userScreenName}");
		}

		// TODO Remove below macro after password reminder gets completely cleaned out with JSON

		User.resetPassword(newPassword = "${newPassword}");

		User.answerPasswordReminder();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	@summary = "Log into Liferay Portal as '${userEmailAddress}' using the password '${password}'"
	macro loginPG {
		JSONUser.agreeToTermsAndAnswerReminderQuery(
			portalURL = "${virtualHostsURL}",
			userEmailAddress = "${userEmailAddress}");

		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}/web/guest?SM_USER=${userEmailAddress}");
		}
		else if (isSet(nodePort)) {
			var baseURL = "http://localhost:${nodePort}";

			Navigator.openSpecificURL(url = "${baseURL}/web/guest?SM_USER=${userEmailAddress}");
		}
		else {
			var baseURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${baseURL}/web/guest?SM_USER=${userEmailAddress}");
		}

		// TODO Remove below macro after password reminder gets completely cleaned out with JSON

		User.resetPassword(newPassword = "${newPassword}");

		User.answerPasswordReminder();

		if (IsElementNotPresent(locator1 = "UserBar#USER_AVATAR_IMAGE")) {
			takeScreenshot();

			echo("URL login failed, falling back to UI login.");

			User.firstLoginUI(
				idpName = "${idpName}",
				password = "${password}",
				rememberMeChecked = "${rememberMeChecked}",
				specificURL = "${virtualHostsURL}",
				userEmailAddress = "${userEmailAddress}",
				userScreenName = "${userScreenName}");
		}
		else {
			WaitForLiferayEvent.initializeLiferayEventLog();
		}
	}

	macro loginUserInvalidPG {
		Navigator.openURL();

		var count = "0";

		if (!(isSet(loginAttempts))) {
			var loginAttempts = "1";
		}

		if (!(isSet(errorMessage))) {
			var errorMessage = "This account is locked. Please contact an administrator to have this account unlocked.";
		}

		while ("${count}" != "${loginAttempts}") {
			var count = ${count} + 1;

			User.firstLoginUI(
				password = "${password}",
				userEmailAddress = "${userEmailAddress}");

			if ("${count}" == "${maximumFailure}") {
				AssertTextEquals.assertPartialText(
					locator1 = "Message#ERROR_DISMISSIBLE",
					value1 = "${errorMessage}");
			}
			else {
				AssertTextEquals.assertPartialText(
					locator1 = "Message#ERROR_DISMISSIBLE",
					value1 = "Authentication failed. Please try again.");
			}
		}
	}

	@description = "Log into Liferay Portal as ${userEmailAddress} using the password ${password}."
	macro loginUserPG {
		Navigator.openURL();

		User._login(
			password = "${password}",
			userEmailAddress = "${userEmailAddress}");

		if (IsElementPresent(locator1 = "UserBar#USER_AVATAR_IN_NAVIGATION_USER_PERSONAL_BAR_PORTLET")) {
			AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
		}
	}

	@description = "Log into Liferay Portal as ${userEmailAddress} using the password ${password} with CAS authentication enabled."
	macro loginUserWithCASEnabledPG {
		Navigator.openURL();

		Navigator.gotoLoginPage();

		Type(
			locator1 = "CAS#NETID_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "CAS#PASSWORD_FIELD",
			value1 = "${userPassword}");

		AssertClick(
			locator1 = "CAS#LOGIN_BUTTON",
			value1 = "LOGIN");

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	@description = "Log into Facebook as ${facebookEmail} using the password ${facebookPassword}."
	macro loginUserWithFacebookSSOEnabledPG {
		Navigator.openURL();

		Navigator.gotoLoginPage();

		AssertClick(
			locator1 = "Link#FACEBOOK",
			value1 = "Facebook");

		SelectWindow(locator1 = "title=Log into Facebook | Facebook");

		Type(
			locator1 = "FacebookLogin#LOGIN_EMAIL_FIELD",
			value1 = "${facebookEmail}");

		Type(
			locator1 = "FacebookLogin#LOGIN_PASSWORD_FIELD",
			value1 = "${facebookPassword}");

		Click(locator1 = "FacebookLogin#LOGIN_BUTTON");

		Alert.confirmSecurity();

		SelectWindow.selectWindowTopNoSPARefresh();

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#EMAIL_ADDRESS")) {
			if (IsElementPresent(locator1 = "Button#SUBMIT")) {
				Click(locator1 = "Button#SUBMIT");

				Pause(locator1 = "30000");
			}

			SelectWindow.selectWindowNoSPARefresh(locator1 = "title=Terms of Use");

			if (IsElementPresent.pauseIsElementPresent(locator1 = "Button#I_AGREE", value1 = "I Agree")) {
				AssertClick(
					locator1 = "Button#I_AGREE",
					value1 = "I Agree");
			}

			User.resetPassword(newPassword = "${newPassword}");

			if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#ANSWER")) {
				Type(
					locator1 = "TextInput#ANSWER",
					value1 = "test");

				Button.click(button = "Save");
			}
		}

		SelectWindow.selectWindowTopNoSPARefresh();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	macro loginUserWithGoogleSSOEnabledPG {
		GoogleLogin.accountSignIn(
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}");

		GoogleLogin.acceptConditions();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	macro loginUserWithOpenIDConnectEnabledPG {
		OpenIDConnect.accountSignIn(
			specificURL = "${specificURL}",
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}");

		OpenIDConnect.acceptConditions();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	@description = "Log into Portal as ${userFirstName} via OpenID ${openIDURL}."
	macro loginUserWithOpenIDEnabledPG {
		Navigator.openURL();

		Navigator.gotoLoginPage();

		AssertClick(
			locator1 = "Link#OPENID",
			value1 = "OpenID");

		Type(
			locator1 = "SignInOpenID#OPENID_FIELD",
			value1 = "${openIdurl}");

		Click(locator1 = "Button#SIGN_IN");

		if (IsElementPresent.pauseIsElementPresent(locator1 = "Button#I_AGREE", value1 = "I Agree")) {
			AssertClick(
				locator1 = "Button#I_AGREE",
				value1 = "I Agree");
		}

		User.resetPassword();

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#ANSWER")) {
			Type(
				locator1 = "TextInput#ANSWER",
				value1 = "test");

			Button.clickSave();
		}

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	@description = "Log into OpenAM as ${userScreenName} using the password ${password}."
	macro loginUserWithOpenSSOEnabledPG {
		Navigator.openSpecificURL(url = "${hostsURL}");

		Navigator.gotoLoginPage();

		Type(
			locator1 = "TextInput#TEXT",
			value1 = "${userScreenName}");

		Type(
			locator1 = "TextInput#PASSWORD_TYPE",
			value1 = "${password}");

		Click(locator1 = "OpenAM#LOG_IN");

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	macro logoutAndLoginPG {
		Navigator.openURL();

		UserBar.signOut();

		User.loginPG(
			authenticationMethod = "${authenticationMethod}",
			nodePort = "${nodePort}",
			userEmailAddress = "${userLoginEmailAddress}",
			userScreenName = "${userScreenName}");
	}

	@description = "Log out of Liferay Portal."
	macro logoutPG {
		if (isSet(specificURL)) {
			Navigator.openSpecificURL(url = "${specificURL}");
		}
		else {
			Navigator.openURL();
		}

		UserBar.signOut();
	}

	macro makePrimary {
		Click.waitForMenuToggleJSClick(
			key_rowEntry = "${rowEntry}",
			locator1 = "Icon#TABLE_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Make Primary");
	}

	macro openUsersAdmin {
		Navigator.openWithAppendToBaseURL(
			baseURL = "${baseURL}",
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_users_admin_web_portlet_UsersAdminPortlet");
	}

	macro removeAccountCP {
		User.openUsersAdmin();

		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoMemberships();

		for (var accountName : list "${accountName}") {
			Click(
				key_entryName = "${accountName}",
				locator1 = "LexiconTable#TABLE_ENTRY_DELETE");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro removeContactInformation {
		Click.waitForMenuToggleJSClick(
			key_rowEntry = "${rowEntry}",
			locator1 = "Icon#TABLE_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Remove");
	}

	macro removeUserAssetLibraryCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoMemberships();

		Click(
			key_entryName = "${depotName}",
			locator1 = "LexiconTable#TABLE_ENTRY_DELETE");

		PortletEntry.save();
	}

	macro resetPassword {
		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#PASSWORD")) {
			if (isSet(newPassword)) {
				Type(
					locator1 = "TextInput#PASSWORD_1",
					value1 = "${newPassword}");

				Type(
					locator1 = "TextInput#PASSWORD_2",
					value1 = "${newPassword}");
			}
			else {
				Type(
					locator1 = "TextInput#PASSWORD_1",
					value1 = "test");

				Type(
					locator1 = "TextInput#PASSWORD_2",
					value1 = "test");
			}

			if (isSet(localizedSaveButton)) {
				Button.click(button = "${localizedSaveButton}");
			}
			else {
				Button.clickSubmitButton();

				AssertElementNotPresent(locator1 = "TextInput#ENTER_AGAIN");
			}
		}
	}

	macro searchCP {
		Search.searchCP(searchTerm = "${searchTerm}");

		AssertElementPresent(locator1 = "Search#SEARCH_INFO");
	}

	macro selectUserTagCP {
		AssertElementPresent.assertVisible(
			locator1 = "AssetCategorization#TAGS_SELECT_BUTTON",
			value1 = "Select");

		Click(locator1 = "AssetCategorization#TAGS_SELECT_BUTTON");

		IFrame.selectTagFrame();

		for (var tagName : list "${tagNameList}") {
			var tagName = StringUtil.lowerCase("${tagName}");

			Check(
				key_rowEntry = "${tagName}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
		}

		SelectFrameTop();

		AssertClick(
			locator1 = "Button#DONE",
			value1 = "Done");

		for (var tagName : list "${tagNameList}") {
			var tagName = StringUtil.lowerCase("${tagName}");

			AssertTextEquals(
				key_tagName = "${tagName}",
				locator1 = "AssetCategorization#TAG",
				value1 = "${tagName}");
		}
	}

	macro setPasswordByResetLink {
		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_NEW_PASSWORD_FIELD",
			value1 = "${newPassword1}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_ENTER_AGAIN_FIELD",
			value1 = "${newPassword2}");

		Button.clickSave();

		User.acceptEndUserLicenseAgreement();

		User.answerPasswordReminder();
	}

	macro signInPG {
		User._clickSignInLink(
			idpName = "${idpName}",
			localization = "${localization}",
			samlMultiIdPs = "${samlMultiIdPs}");

		if ("${authenticationMethod}" == "By Screen Name") {
			Type(
				locator1 = "TextInput#SCREEN_NAME",
				value1 = "${userScreenName}");
		}
		else if ("${authenticationMethod}" == "By User ID") {
			Type.typePause(
				key_text = "ID",
				locator1 = "TextInput#ANY",
				value1 = "${userId}");
		}
		else {
			Type.typePause(
				locator1 = "TextInput#EMAIL_ADDRESS",
				value1 = "${userEmailAddress}");
		}

		Type.typePause(
			locator1 = "TextInput#PASSWORD",
			value1 = "${password}");

		if (isSet(rememberMeChecked) && ("${rememberMeChecked}" == "true")) {
			Check(locator1 = "Checkbox#REMEMBER_ME");
		}

		User._clickSignInButton(localization = "${localization}");

		if (isSet(localizedAgree)) {
			User.acceptEndUserLicenseAgreementLocalized(localizedAgree = "${localizedAgree}");
		}
		else if (IsElementPresent(locator1 = "Button#I_AGREE")) {
			SignIn.agreeToTermsOfUse();
		}

		if (isSet(emailVerification)) {
			AssertTextEquals(
				locator1 = "Message#INFO",
				value1 = "Please enter your verification code.");

			Type(
				locator1 = "SignInCreateAccount#EMAIL_VERIFICATION_CODE_FIELD",
				value1 = "${emailVerification}");

			AssertClick(
				locator1 = "Button#VERIFY",
				value1 = "Verify");
		}

		User.resetPassword(newPassword = "${newPassword}");

		if (isSet(localizedAnswer)) {
			User.answerPasswordReminderLocalized(
				localizedAnswer = "${localizedAnswer}",
				localizedSaveButton = "${localizedSaveButton}");
		}
		else if (IsElementPresent(locator1 = "Select#QUESTION")) {
			SignIn.setPasswordReminder();
		}

		AssertVisible(locator1 = "UserBar#USER_AVATAR_IMAGE");

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	macro singleDeactivateCP {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Deactivate",
			rowEntry = "${userFirstName}");

		AssertConfirm(value1 = "Are you sure you want to deactivate this?");

		Alert.viewSuccessMessage();
	}

	macro singleDeleteCP {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Delete",
			rowEntry = "${userFirstName}");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro tearDownCP {
		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Active");

		while (IsElementPresent(key_rowNumber = "2", locator1 = "ContentRow#ENTRY_CONTENT_ROW_NUMBER")) {
			Click.waitForMenuToggleJSClick(
				key_rowNumber = "2",
				locator1 = "ContentRow#ENTRY_CONTENT_ROW_NUMBER_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Deactivate");

			AssertConfirm(value1 = "Are you sure you want to deactivate this?");
		}

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Inactive");

		if (IsElementPresent(locator1 = "ContentRow#ENTRY_CONTENT_ROW_1")) {
			PortletEntry.selectAll();

			ClickNoError(locator1 = "Icon#DELETE");

			AssertConfirm(value1 = "Are you sure you want to permanently delete the selected users?");

			Alert.viewSuccessMessage();
		}

		AssertElementPresent(locator1 = "Message#EMPTY_INFO");
	}

	macro tearDownSpecificUser {
		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Active");

		User.searchCP(searchTerm = "${userScreenName}");

		if (IsElementPresent(locator1 = "ContentRow#ENTRY_CONTENT_ROW_1")) {
			PortletEntry.selectAll();

			ClickNoError(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

			AssertConfirm(value1 = "Are you sure you want to deactivate the selected users?");

			Alert.viewSuccessMessage();
		}

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Inactive");

		if (IsElementPresent(locator1 = "ContentRow#ENTRY_CONTENT_ROW_1")) {
			PortletEntry.selectAll();

			ClickNoError(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

			AssertConfirm(value1 = "Are you sure you want to permanently delete the selected users?");

			Alert.viewSuccessMessage();
		}
	}

	macro unassignRegularRoleCP {
		UserNavigator.gotoUser(userScreenName = "${userScreenName}");

		UserNavigator.gotoRoles();

		var key_regularRoleName = "${regularRoleName}";

		Click(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_REGULAR_ROLES_REMOVE_ROLE",
			value1 = "${regularRoleName}");

		PortletEntry.save();

		AssertElementNotPresent(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_REGULAR_ROLES_TABLE_TITLE",
			value1 = "${regularRoleName}");
	}

	macro unlockUserAccount {
		Pause(locator1 = "1000");

		var key_userScreenName = "${userScreenName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}");

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}");

		AssertTextEquals(
			locator1 = "Message#ERROR_3",
			value1 = "Warning:This user account has been locked due to excessive failed login attempts.");

		AssertClick(
			locator1 = "Button#UNLOCK",
			value1 = "Unlock");

		Alert.viewSuccessMessage();
	}

	macro verifyEmail {
		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#EMAIL_VERIFICATION_CODE")) {
			var bodySpecificText = MockMock.getBodySpecificText(
				asset = "${portalURL}: Email Address Verification",
				content = "Please verify your email address for ${portalURL}",
				extractFirstText = "&",
				recipient = "${recipient}",
				sender = "Joe Bloggs",
				specificText = "ticketKey=",
				subject = "${portalURL}: Email Address Verification");

			Navigator.openURL();

			Type(
				locator1 = "TextInput#EMAIL_VERIFICATION_CODE",
				value1 = "${bodySpecificText}");

			Button.clickVerifyButton();

			AssertElementNotPresent(locator1 = "TextInput#EMAIL_VERIFICATION_CODE");
		}
	}

	macro viewAddress {
		var key_primaryValue = "${street1}";

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizations#USER_ADDRESS_TABLE",
			value1 = "${city}");

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizations#USER_ADDRESS_TABLE",
			value1 = "${country}");

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizations#USER_ADDRESS_TABLE",
			value1 = "${postalCode}");

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizations#USER_ADDRESS_TABLE",
			value1 = "${region}");

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizations#USER_ADDRESS_TABLE",
			value1 = "${street1}");

		if (isSet(addressType)) {
			AssertTextEquals.assertPartialText(
				locator1 = "UsersAndOrganizations#USER_ADDRESS_TABLE_ADDRESS_TYPE",
				value1 = "${addressType}");
		}
	}

	macro viewCaptchaPG {
		if ("${captchaType}" == "captcha") {
			AssertElementPresent.assertElementPresent(locator1 = "SignInCreateAccount#CAPTCHA_IMAGE");
		}
		else if ("${captchaType}" == "recaptcha") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#RECAPTCHA");

			AssertElementPresent.assertElementPresent(locator1 = "SignInCreateAccount#RECAPTCHA_LABEL");
		}
	}

	macro viewContactInformation {
		if (isSet(searchContainerType)) {
			var key_searchContainerType = "${searchContainerType}";

			// Phone Numbers

			if (isSet(number)) {
				AssertTextEquals.assertPartialText(
					locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_PHONE_NUMBER_TABLE",
					value1 = "${number}");
			}

			if (isSet(numberType)) {
				AssertTextEquals.assertPartialText(
					locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_TYPE_TABLE",
					value1 = "${numberType}");
			}

			if (isSet(extension)) {
				AssertTextEquals.assertPartialText(
					locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_EXTENSION_TABLE",
					value1 = "${extension}");
			}

			// Additional Email Addresses

			if (isSet(address)) {
				AssertTextEquals.assertPartialText(
					locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_EMAIL_ADDRESS_TABLE",
					value1 = "${address}");
			}

			if (isSet(addressCount)) {
				var i = "0";

				while ("${i}" != "${addressCount}") {
					var i = ${i} + 1;

					AssertTextEquals.assertPartialText(
						locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_CONTAINER_TABLE",
						value1 = "${addressPrefix}${i}@liferay.com");
				}
			}

			// Websites

			if (isSet(url)) {
				AssertTextEquals.assertPartialText(
					locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_EMAIL_ADDRESS_TABLE",
					value1 = "${url}");
			}

			if (isSet(websiteType)) {
				AssertTextEquals.assertPartialText(
					locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_TYPE_TABLE",
					value1 = "${websiteType}");
			}
		}

		// Instant Messenger

		if (isSet(skype)) {
			AssertTextEquals.assertValue(
				locator1 = "TextInput#SKYPE",
				value1 = "${skype}");
		}
	}

	macro viewCP {
		if ("${userEmailAddressVariation}" == "At") {
			Pause(locator1 = "1000");

			Search.searchCP(searchTerm = "${userEmailAddress}");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");
		}
		else if ("${userEmailAddressVariation}" == "Period") {
			Pause(locator1 = "1000");

			Search.searchCP(searchTerm = "${userEmailAddress}");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");
		}
		else if ("${userScreenNameVariation}" == "Invalid") {
			Pause(locator1 = "1000");

			Search.searchCP(searchTerm = "${userScreenName}");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found.");
		}
		else {
			UserNavigator.gotoUser(userScreenName = "${userScreenName}");

			User.viewUserInfomation(
				userEmailAddress = "${userEmailAddress}",
				userFirstName = "${userFirstName}",
				userLastName = "${userLastName}",
				userScreenName = "${userScreenName}");
		}
	}

	macro viewExpiredSessionErrorMessage {
		AssertTextEquals.assertPartialText(
			locator1 = "Home#ERROR_MESSAGE_EXPIRED_SESSION",
			value1 = "${message}");
	}

	macro viewIsPrimary {
		if (isSet(primaryValue)) {
			var key_primaryValue = "${primaryValue}";

			AssertElementPresent(locator1 = "UsersAndOrganizations#USER_ADDRESS_PRIMARY_TABLE");
		}

		if (isSet(searchContainerType)) {
			var key_contactInfoPrimaryValue = "${contactInfoPrimaryValue}";
			var key_searchContainerType = "${searchContainerType}";

			AssertElementPresent(locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_PRIMARY_TABLE");
		}
	}

	macro viewLoggedInPG {
		if ("${authenticationMethod}" == "By Screen Name") {
			AssertElementNotPresent(locator1 = "TextInput#SCREEN_NAME");
		}
		else {
			AssertElementNotPresent(locator1 = "TextInput#EMAIL_ADDRESS");
		}

		AssertElementNotPresent(locator1 = "TextInput#PASSWORD");

		AssertElementNotPresent(locator1 = "Checkbox#REMEMBER_ME");

		AssertElementNotPresent(locator1 = "Button#SIGN_IN");

		AssertVisible(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	macro viewLoggedOutPG {
		AssertElementNotPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		AssertElementNotPresent(locator1 = "ControlMenu#ADD");

		AssertTextEquals(
			locator1 = "UserBar#USER_SIGN_IN",
			value1 = "Sign In");
	}

	macro viewLoggedOutWithCASEnabledPG {
		AssertTextEquals(
			locator1 = "CAS#APP_NAME_HEADER",
			value1 = "Central Authentication Service (CAS)");

		AssertTextEquals(
			locator1 = "CAS#LOGOUT_SUCCESSFUL_HEADER",
			value1 = "Logout successful");

		AssertTextEquals(
			locator1 = "CAS#LOGOUT_SUCCESSFUL_MESSAGE_1",
			value1 = "You have successfully logged out of the Central Authentication Service.");

		AssertTextEquals(
			locator1 = "CAS#LOGOUT_SUCCESSFUL_MESSAGE_2",
			value1 = "For security reasons, exit your web browser.");
	}

	macro viewLoginPG {
		if ("${authenticationMethod}" == "By Screen Name") {
			AssertElementPresent(locator1 = "TextInput#SCREEN_NAME");
		}
		else {
			AssertElementPresent(locator1 = "TextInput#EMAIL_ADDRESS");
		}

		AssertElementPresent(locator1 = "TextInput#PASSWORD");

		AssertElementPresent(locator1 = "Checkbox#REMEMBER_ME");

		if ("${loginPg}" == "Full Screen") {
			AssertElementNotPresent(locator1 = "UserBar#USER_SIGN_IN");
		}
		else {
			AssertTextEquals(
				locator1 = "Button#SIGN_IN",
				value1 = "Sign In");
		}
	}

	macro viewNotPrimary {
		if (isSet(primaryValue)) {
			var key_primaryValue = "${primaryValue}";

			AssertElementNotPresent(locator1 = "UsersAndOrganizations#USER_ADDRESS_PRIMARY_TABLE");
		}

		if (isSet(searchContainerType)) {
			var key_contactInfoPrimaryValue = "${contactInfoPrimaryValue}";
			var key_searchContainerType = "${searchContainerType}";

			AssertElementNotPresent(locator1 = "UsersAndOrganizations#USER_CONTACT_INFORMATION_PRIMARY_TABLE");
		}
	}

	macro viewNoUsersFoundCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No users were found.");
	}

	macro viewSessionNotExpired {
		AssertElementNotPresent(locator1 = "Home#ERROR_MESSAGE_EXPIRED_SESSION");

		if (!(isSet(noSignin))) {
			AssertElementNotPresent(locator1 = "UserBar#USER_SIGN_IN");
		}
	}

	macro viewSignIn {
		AssertElementPresent(locator1 = "UserBar#USER_SIGN_IN");
	}

	macro viewSignInPresent {
		AssertElementPresent(locator1 = "UserBar#USER_SIGN_IN");
	}

	macro viewUnableToAssignRoleToUserCP {
		AssertElementNotPresent(
			key_roleType = StringUtil.replace("${roleType}", " ", ""),
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_LINK",
			value1 = "Select");

		if (contains("${roleType}", "Site")) {
			var emptyMessage = "This user does not belong to a site to which a site role can be assigned.";
		}

		if (contains("${roleType}", "Organization")) {
			var emptyMessage = "This user does not belong to an organization to which an organization role can be assigned.";
		}

		AssertTextEquals(
			key_roleType = "${roleType}",
			locator1 = "Message#ROLE_EMPTY_MUTED_INFO",
			value1 = "${emptyMessage}");
	}

	macro viewUserCustomFieldsCP {
		var key_customFieldName = "${customFieldName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#CUSTOM_FIELDS_LABEL",
			value1 = "${customFieldName}");

		if (isSet(startingValue)) {
			if ("${customFieldType}" == "Text Field") {
				AssertTextEquals(
					key_fieldLabel = "${customFieldName}",
					locator1 = "TextInput#GENERIC_TEXT_INPUT",
					value1 = "${startingValue}");
			}
		}
	}

	macro viewUserInfomation {
		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		if (isSet(userBirthday)) {
			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_BIRTHDAY_FIELD",
				value1 = "${userBirthday}");
		}

		if (isSet(userJobTitle)) {
			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_JOB_TITLE_FIELD",
				value1 = "${userJobTitle}");
		}

		if (isSet(userId)) {
			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
				value1 = "${userId}");
		}
	}

	macro viewUserInfomationOrganizationSitesCP {
		UserNavigator.gotoMemberships();

		var key_siteName = "${siteName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${orgName}");
	}

	macro viewUserInfomationRolesCP {
		UserNavigator.gotoRoles();

		var key_roleTitle = "${roleTitle}";

		if ("${roleType}" == "Inherited Site Roles") {
			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#ROLES_INHERITED_SITE_ROLES_TABLE_TITLE",
				value1 = "${roleTitle}");
		}
		else {
			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#ROLES_SELECT_ROLE_NAME",
				value1 = "${roleTitle}");
		}
	}

	macro viewUserInfomationSitesCP {
		UserNavigator.gotoMemberships();

		var key_siteName = "${siteName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${siteName}");
	}

	macro viewUserInfomationUserGroupsCP {
		UserNavigator.gotoMemberships();

		var key_userGroupName = "${userGroupName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#USER_GROUPS_TABLE_NAME",
			value1 = "${userGroupName}");
	}

	macro viewUserTableName {
		AssertTextEquals(
			key_userScreenName = "${key_userScreenName}",
			locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
			value1 = "${userfn} ${userln}");
	}

	macro viewWelcomeMEssageHTML {
		AssertHTMLSourceTextPresent(
			locator1 = "JSONWS#SECURITY_RESULT",
			value1 = "Welcome ${userfn} ${userln}!");
	}

}