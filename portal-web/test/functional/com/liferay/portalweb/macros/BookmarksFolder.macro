definition {

	var assetType = "Bookmarks Folder";

	macro addCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Folder");

		PortletEntry.inputName(name = "${folderName}");

		PortletEntry.inputDescription(description = "${folderDescription}");

		PortletEntry.save();

		BookmarksFolder.viewFolder(
			folderDescription = "${folderDescription}",
			folderName = "${folderName}");
	}

	macro addNullCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Folder");

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "TextInput#REQUIRED_ALERT",
			value1 = "Name");

		AssertTextEquals.assertPartialText(
			locator1 = "TextInput#REQUIRED_ALERT",
			value1 = "Required");

		Alert.viewRequiredField();
	}

	macro addNullSubfolderCP {
		var key_assetName = "${folderName}";
		var key_folderName = "${folderName}";

		AssertClick(
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${folderName}");

		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Folder");

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "TextInput#REQUIRED_ALERT",
			value1 = "Name");

		AssertTextEquals.assertPartialText(
			locator1 = "TextInput#REQUIRED_ALERT",
			value1 = "Required");

		Alert.viewRequiredField();
	}

	macro addPG {
		Portlet.clickPortletPlusIconPG(portletName = "Bookmarks");

		MenuItem.click(menuItem = "Folder");

		PortletEntry.inputName(name = "${folderName}");

		PortletEntry.inputDescription(description = "${folderDescription}");

		PortletEntry.save();

		BookmarksFolder.viewFolder(
			folderDescription = "${folderDescription}",
			folderName = "${folderName}");
	}

	macro addSubfolderCP {
		var key_assetName = "${folderName}";

		AssertClick(
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${folderName}");

		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Folder");

		var key_folderName = "${subfolderName}";

		PortletEntry.inputName(name = "${subfolderName}");

		PortletEntry.inputDescription(description = "${subfolderDescription}");

		PortletEntry.save();

		BookmarksFolder.viewFolder(
			folderDescription = "${subfolderDescription}",
			folderName = "${subfolderName}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${folderName}");
	}

	macro addSubfolderPG {
		Portlet.clickPortletPlusIconPG(portletName = "Bookmarks");

		MenuItem.click(menuItem = "Folder");

		PortletEntry.inputName(name = "${folderName}");

		PortletEntry.inputDescription(description = "${folderDescription}");

		PortletEntry.save();

		BookmarksFolder.viewFolder(
			folderDescription = "${folderDescription}",
			folderName = "${folderName}");
	}

	macro deletePG {
		AssertTextEquals(
			key_assetName = "${folderName}",
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		Click.waitForMenuToggleJSClick(locator1 = "Icon#VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Delete");

		VerifyElementPresent(locator1 = "Message#SUCCESS");

		JSONRecycleBin.emptyRecycleBin();
	}

	macro editCP {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${folderName}");

		PortletEntry.inputName(name = "${folderNameEdit}");

		PortletEntry.inputDescription(description = "${folderDescriptionEdit}");

		PortletEntry.save();

		BookmarksFolder.viewFolder(
			folderDescription = "${folderDescriptionEdit}",
			folderName = "${folderNameEdit}");
	}

	macro editPG {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${folderName}");

		PortletEntry.inputName(name = "${folderNameEdit}");

		PortletEntry.inputDescription(description = "${folderDescriptionEdit}");

		PortletEntry.save();

		BookmarksFolder.viewFolder(
			folderDescription = "${folderDescriptionEdit}",
			folderName = "${folderNameEdit}");
	}

	macro editSubfolderCP {
		AssertClick(
			key_assetName = "${folderName}",
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${folderName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${subfolderName}");

		PortletEntry.inputName(name = "${editSubfolderName}");

		PortletEntry.inputDescription(description = "${editSubfolderDescription}");

		PortletEntry.save();

		BookmarksFolder.viewFolder(
			folderDescription = "${editSubfolderDescription}",
			folderName = "${editSubfolderName}");
	}

	macro gotoPG {
		AssertClick.assertPartialTextClickAt(
			key_assetName = "${folderName}",
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		Breadcrumb.viewActiveEntry(breadcrumbName = "${folderName}");
	}

	macro gotoSubfolderPG {
		Navigator.gotoSitePage(
			pageName = "${pageName}",
			siteName = "${siteName}");

		while (IsElementPresent.pauseIsElementPresent(locator1 = "Icon#BACK")) {
			Click(locator1 = "Icon#BACK");
		}

		var key_assetName = "${folderName}";

		AssertClick.assertPartialTextClickAt(
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		var key_assetName = "${subfolderName}";

		AssertClick.assertPartialTextClickAt(
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${subfolderName}");

		Breadcrumb.viewActiveEntry(breadcrumbName = "${subfolderName}");
	}

	macro mergeSubfolderToFolderCP {
		AssertClick(
			key_assetName = "${folderName}",
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${folderName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${subfolderName}");

		Click(locator1 = "Bookmarks#PARENT_FOLDER_PANEL");

		Check.checkToggleSwitch(locator1 = "Checkbox#MERGE_WITH_PARENT_FOLDER");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Bookmark.viewBookmark(
			bookmarkName = "${bookmarkName}",
			bookmarkURL = "${bookmarkURL}",
			folderName = "${bookmarkName}");
	}

	macro moveSubfolderToRecycleBinPG {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Delete",
			rowEntry = "${subfolderName}");

		VerifyElementPresent(locator1 = "Message#SUCCESS");
	}

	macro moveToRecycleBinCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Bookmarks");

		AssertTextEquals(
			key_assetName = "${folderName}",
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Delete",
			rowEntry = "${folderName}");

		VerifyElementPresent(locator1 = "Message#SUCCESS");
	}

	macro subscribePG {
		AssertTextEquals.assertPartialText(
			key_assetDescription = "${folderDescription}",
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_DESCRIPTION",
			value1 = "${folderDescription}");

		Click.clickAt(locator1 = "Icon#INFO");

		Pause(locator1 = "1000");

		Click(locator1 = "Icon#SUBSCRIBE");

		Alert.viewSuccessMessage();
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Bookmarks");

		if (IsElementNotPresent(locator1 = "Message#EMPTY_INFO")) {
			PortletEntry.selectAll();

			Click(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

			VerifyElementPresent(locator1 = "Message#SUCCESS");

			AssertElementPresent(locator1 = "Message#EMPTY_INFO");
		}

		JSONRecycleBin.emptyRecycleBin();
	}

	macro viewFolder {
		AssertTextEquals(
			key_assetName = "${folderName}",
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "${folderName}");

		AssertTextEquals(
			key_assetDescription = "${folderDescription}",
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_DESCRIPTION",
			value1 = "${folderDescription}");
	}

}