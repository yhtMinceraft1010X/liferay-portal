definition {

	macro configureAdministratorUserPG {
		Type(
			locator1 = "TextInput#FIRST_NAME",
			value1 = "${administratorFirstName}");

		Type(
			locator1 = "TextInput#LAST_NAME",
			value1 = "${administratorLastName}");

		Type(
			locator1 = "TextInput#EMAIL",
			value1 = "${administratorEmail}");
	}

	macro configureDatabasePG {
		if (IsElementNotPresent(locator1 = "SetupWizard#DATABASE_CHANGE_USE_CONFIGURED_DATABASE_LINK")) {
			AssertClick(
				locator1 = "SetupWizard#DATABASE_CHANGE_LINK",
				value1 = "(Change)");
		}

		if (isSet(databaseName)) {
			var originalDatabaseName = PropsUtil.get("database.mysql.schema");
			var jdbcURL = StringUtil.replace("${jdbcURL}", "${originalDatabaseName}", "${databaseName}");
		}

		Select(
			locator1 = "SetupWizard#DATABASE_CHANGE_DATABASE_TYPE_SELECT",
			value1 = "${databaseType}");

		Type(
			locator1 = "SetupWizard#DATABASE_CHANGE_JDBC_URL_FIELD",
			value1 = "${jdbcURL}");

		Type(
			locator1 = "SetupWizard#DATABASE_CHANGE_JDBC_DRIVER_CLASS_NAME_FIELD",
			value1 = "${jdbcDriverClassName}");

		Type(
			locator1 = "SetupWizard#DATABASE_CHANGE_USER_NAME_FIELD",
			value1 = "${databaseUserName}");

		Type(
			locator1 = "SetupWizard#DATABASE_CHANGE_PASSWORD_FIELD",
			value1 = "${databasePassword}");
	}

	macro configureDefaultLanguagePG {
		Select(
			locator1 = "SetupWizard#DEFAULT_LANGUAGE",
			value1 = "${defaultLanguage}");
	}

	macro configureDefaultPG {
		SetupWizard.viewDefaultPortalNamePG();

		SetupWizard.viewDefaultAdministratorUserPG();

		Type(
			locator1 = "TextInput#EMAIL",
			value1 = "test@liferay.com");

		SetupWizard.viewDefaultDatabasePG();

		SetupWizard.finishConfigurationPG();

		SetupWizard.viewConfigurationSavedPG();

		Portlet.shutdownServer();

		Portlet.startServer(
			base_branch = "${base_branch}",
			deleteLiferayHome = "false");

		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}");
		}
		else {
			Navigator.openURL();
		}

		User.acceptEndUserLicenseAgreement();

		User.resetPassword(newPassword = "${newPassword}");

		User.answerPasswordReminder();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		Click(locator1 = "Button#DONE");

		User.viewLoggedInPG();
	}

	@summary = "Configure JDBC to ${databaseType} for Liferay with the Setup Wizard"
	macro configurePG {
		if (isSet(portalName)) {
			SetupWizard.configurePortalNamePG(portalName = "${portalName}");
		}
		else {
			SetupWizard.viewDefaultPortalNamePG();
		}

		SetupWizard.configureAdministratorUserPG(
			administratorEmail = "${administratorEmail}",
			administratorFirstName = "${administratorFirstName}",
			administratorLastName = "${administratorLastName}");

		SetupWizard.configureDatabasePG(
			databaseName = "${databaseName}",
			databasePassword = "${databasePassword}",
			databaseType = "${databaseType}",
			databaseUserName = "${databaseUserName}",
			jdbcDriverClassName = "${jdbcDriverClassName}",
			jdbcURL = "${jdbcURL}");

		SetupWizard.configureSampleDataPG(addSampleData = "${addSampleData}");

		SetupWizard.finishConfigurationPG();

		SetupWizard.viewConfigurationSavedPG();

		Portlet.shutdownServer();

		Portlet.startServer(
			base_branch = "${base_branch}",
			deleteLiferayHome = "false");

		SetupWizard.viewConfiguredDatabaseInConsole(databaseType = "${databaseType}");

		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}");
		}
		else {
			Navigator.openURL();
		}

		User.acceptEndUserLicenseAgreement();

		User.resetPassword(newPassword = "${newPassword}");

		User.answerPasswordReminder();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		var testRunEnvironment = PropsUtil.get("test.run.environment");

		if ("${testRunEnvironment}" == "EE") {
			Click(locator1 = "Button#DONE");
		}

		User.viewLoggedInPG();
	}

	macro configurePortalNamePG {
		Type(
			locator1 = "TextInput#PORTAL_NAME",
			value1 = "${portalName}");
	}

	macro configureSampleDataPG {
		if (IsElementNotPresent(locator1 = "SetupWizard#DATABASE_CHANGE_USE_CONFIGURED_DATABASE_LINK")) {
			AssertClick(
				locator1 = "SetupWizard#DATABASE_CHANGE_LINK",
				value1 = "(Change)");
		}

		if ("${addSampleData}" == "true") {
			Check(locator1 = "Checkbox#ADD_SAMPLE_DATA");
		}

		if ("${addSampleData}" == "false") {
			Uncheck(locator1 = "Checkbox#ADD_SAMPLE_DATA");
		}
	}

	macro finishConfigurationPG {
		AssertClick(
			locator1 = "Button#FINISH_CONFIGURATION",
			value1 = "Finish Configuration");
	}

	macro viewConfigurationSavedPG {
		if (isSet(localization) && ("${localization}" == "ES")) {
			Alert.viewSuccessMessageText(successMessage = "La configuración fue guardada con éxito.");

			AssertTextEquals.assertPartialText(
				locator1 = "SetupWizard#CONFIGURATION_SAVE_MESSAGE",
				value1 = "Se ha guardado la configuración en");

			AssertTextEquals.assertPartialText(
				locator1 = "SetupWizard#CONFIGURATION_SAVE_LOCATION",
				value1 = "portal-setup-wizard.properties");

			Alert.viewInfoMessageSpecific(infoMessage = "Los cambios surtirán efecto en cuanto el portal sea reiniciado. Por favor, reinicie el portal ahora.");
		}
		else {
			Alert.viewSuccessMessageText(successMessage = "Your configuration was saved successfully.");

			AssertTextEquals.assertPartialText(
				locator1 = "SetupWizard#CONFIGURATION_SAVE_MESSAGE",
				value1 = "The configuration was saved in");

			AssertTextEquals.assertPartialText(
				locator1 = "SetupWizard#CONFIGURATION_SAVE_LOCATION",
				value1 = "portal-setup-wizard.properties");

			Alert.viewInfoMessageSpecific(infoMessage = "Changes will take effect once the portal is restarted. Please restart the portal now.");
		}
	}

	macro viewConfiguredDatabaseInConsole {
		if ("${databaseType}" == "DB2") {
			AssertConsoleTextPresent(value1 = "Using dialect com.liferay.portal.dao.orm.hibernate.DB2Dialect for DB2");
		}
		else if ("${databaseType}" == "HSQL") {
			AssertConsoleTextPresent(value1 = "Using dialect com.liferay.portal.dao.orm.hibernate.HSQLDialect for HSQL Database Engine");
		}
		else if ("${databaseType}" == "MariaDB") {
			AssertConsoleTextPresent(value1 = "Using dialect com.liferay.portal.dao.orm.hibernate.MariaDBDialect for MariaDB");
		}
		else if ("${databaseType}" == "MySQL") {
			AssertConsoleTextPresent(value1 = "Using dialect org.hibernate.dialect.MySQLDialect for MySQL");
		}
		else if ("${databaseType}" == "Oracle") {
			AssertConsoleTextPresent(value1 = "Using dialect org.hibernate.dialect.Oracle10gDialect for Oracle");
		}
		else if ("${databaseType}" == "PostgreSQL") {
			AssertConsoleTextPresent(value1 = "Using dialect org.hibernate.dialect.PostgreSQLDialect for PostgreSQL");
		}
		else if ("${databaseType}" == "Sybase") {
			AssertConsoleTextPresent(value1 = "Using dialect com.liferay.portal.dao.orm.hibernate.SybaseASE157Dialect for Adaptive Server Enterprise");
		}
	}

	macro viewDefaultAdministratorUserPG {
		AssertSelectedLabel(
			locator1 = "SetupWizard#DEFAULT_LANGUAGE",
			value1 = "English (United States)");

		AssertTextEquals.assertValue(
			locator1 = "TextInput#FIRST_NAME",
			value1 = "Test");

		AssertTextEquals.assertValue(
			locator1 = "TextInput#LAST_NAME",
			value1 = "Test");

		AssertTextEquals.assertValue(
			locator1 = "TextInput#EMAIL",
			value1 = "");
	}

	macro viewDefaultDatabasePG {
		if (IsElementPresent(locator1 = "SetupWizard#DATABASE_DEFAULT_LABEL")) {
			AssertTextEquals.assertText(
				locator1 = "SetupWizard#DATABASE_DEFAULT_LABEL",
				value1 = "Default Database (Hypersonic)");

			AssertTextEquals.assertPartialText(
				locator1 = "SetupWizard#DATABASE_DEFAULT_DESCRIPTION",
				value1 = "This database is useful for development and demo'ing purposes, but it is not recommended for production use.");

			AssertTextEquals.assertText(
				locator1 = "SetupWizard#DATABASE_CHANGE_LINK",
				value1 = "(Change)");
		}
		else {
			AssertTextEquals.assertText(
				locator1 = "SetupWizard#DATABASE_CONFIGURED_JDBC_DRIVER_CLASS_NAME_LABEL",
				value1 = "Configured Database");

			AssertClick(
				locator1 = "SetupWizard#DATABASE_CHANGE_LINK",
				value1 = "(Change)");

			AssertTextEquals.assertText(
				locator1 = "SetupWizard#DATABASE_CHANGE_DATABASE_TYPE_LABEL",
				value1 = "Database Type");

			AssertTextEquals.assertText(
				locator1 = "SetupWizard#DATABASE_CHANGE_JDBC_URL_LABEL",
				value1 = "JDBC URL Required");

			AssertTextEquals.assertText(
				locator1 = "SetupWizard#DATABASE_CHANGE_JDBC_DRIVER_CLASS_NAME_LABEL",
				value1 = "JDBC Driver Class Name Required");

			AssertTextEquals.assertText(
				locator1 = "SetupWizard#DATABASE_CHANGE_USER_NAME_LABEL",
				value1 = "User Name");

			AssertTextEquals.assertText(
				locator1 = "SetupWizard#DATABASE_CHANGE_PASSWORD_LABEL",
				value1 = "Password");
		}
	}

	macro viewDefaultPortalNamePG {
		var testRunEnvironment = PropsUtil.get("test.run.environment");

		if ("${testRunEnvironment}" == "EE") {
			AssertTextEquals.assertValue(
				locator1 = "TextInput#PORTAL_NAME",
				value1 = "Liferay DXP");
		}
		else {
			AssertTextEquals.assertValue(
				locator1 = "TextInput#PORTAL_NAME",
				value1 = "Liferay");
		}
	}

	macro viewPopulatedSampleData {
		var testRunEnvironment = PropsUtil.get("test.run.environment");

		AssertConsoleTextPresent(value1 = "Finished adding data");

		SearchAdministration.executeReindex();

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Pagination.viewResults(results = "Showing 1 to 20 of 101 entries.");

		User.viewCP(
			userEmailAddress = "default.dlc.1@liferay.com",
			userFirstName = "Test",
			userLastName = "DLC 1",
			userScreenName = "default.dlc.1");

		Navigator.gotoBack();

		UsersAndOrganizationsNavigator.gotoOrganizations();

		if ("${testRunEnvironment}" == "EE") {
			Organization.viewCP(
				orgName = "Liferay DXP, Inc.",
				orgType = "Organization");

			Navigator.gotoBack();

			Organization.gotoCP(
				orgName = "Liferay DXP, Inc.",
				searchToken = "Liferay DXP, Inc.");

			User.searchCP(searchTerm = "Test DLC 1");

			Organization.viewAssignMemberCP(userName = "Test DLC 1");

			Search.searchCP(searchTerm = "Liferay DXPChicago");

			var key_suborgName = "Liferay DXPChicago";

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsOrganization#SUBORGANIZATION_TABLE_NAME",
				value1 = "Liferay DXPChicago");

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsOrganization#SUBORGANIZATION_TABLE_TYPE",
				value1 = "Organization");

			ApplicationsMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites");

			AssertTextEquals.assertPartialText(
				key_siteName = "Liferay DXP, Inc.",
				locator1 = "Sites#SITE_TABLE_NAME",
				value1 = "Liferay DXP, Inc.");
		}
		else {
			Organization.viewCP(
				orgName = "Liferay, Inc.",
				orgType = "Organization");

			Navigator.gotoBack();

			Organization.gotoCP(
				orgName = "Liferay, Inc.",
				searchToken = "Liferay, Inc.");

			User.searchCP(searchTerm = "Test DLC 1");

			Organization.viewAssignMemberCP(userName = "Test DLC 1");

			Search.searchCP(searchTerm = "LiferayChicago");

			var key_suborgName = "LiferayChicago";

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsOrganization#SUBORGANIZATION_TABLE_NAME",
				value1 = "LiferayChicago");

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsOrganization#SUBORGANIZATION_TABLE_TYPE",
				value1 = "Organization");

			ApplicationsMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites");

			AssertTextEquals.assertPartialText(
				key_siteName = "Liferay, Inc.",
				locator1 = "Sites#SITE_TABLE_NAME",
				value1 = "Liferay, Inc.");
		}
	}

	macro viewSampleDataEnabledInPropertiesFile {
		var liferayHome = PropsUtil.get("liferay.home.dir.name");
		var fileContent = FileUtil.read("${liferayHome}/portal-setup-wizard.properties");

		if (contains("${fileContent}", "setup.wizard.add.sample.data=on")) {
			echo("The Sample Data property was saved successfully in portal-setup-wizard.properties!");
		}
		else {
			fail("Fail to save the Sample Data property in portal-setup-wizard.properties.");
		}
	}

}