definition {

	macro addCategoryLocalizationCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoAdd();

		PortletEntry.inputTitle(title = "${categoryName}");

		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = "${locale}");

		PortletEntry.inputTitle(title = "${localizationName}");

		if (isSet(locale2)) {
			PortletEntry.changeLocale(
				fieldName = "Name",
				locale = "${locale2}");

			PortletEntry.inputTitle(title = "${localization2Name}");
		}

		PortletEntry.save();
	}

	macro addCategoryViewableByCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoAdd();

		PortletEntry.inputTitle(title = "${categoryName}");

		Panel.expandPanel(panel = "Permissions");

		Select(
			locator1 = "Select#PERMISSIONS",
			value1 = "${viewableBy}");

		PortletEntry.save();
	}

	macro addCategoryWithSaveAndAddButton {
		var key_categoryName = "${categoryName}";
		var key_vocabularyName = "${vocabularyName}";

		Navigator.gotoNavNested(navNested = "${key_vocabularyName}");

		LexiconEntry.gotoAdd();

		PortletEntry.inputTitle(title = "${categoryName}");

		Button.clickNoError(button = "Save and Add a New One");

		AssertTextNotPresent(
			locator1 = "Categories#CATEGORY_NAME_FIELD",
			value1 = "${categoryName}");

		Button.clickNoError(button = "Cancel");
	}

	@summary = "Add a category named '${categoryName}' to the vocabulary named '${vocabularyName}'"
	macro addCP {
		var key_categoryName = "${categoryName}";
		var key_vocabularyName = "${vocabularyName}";

		Navigator.gotoNavNested(navNested = "${key_vocabularyName}");

		LexiconEntry.gotoAdd();

		PortletEntry.inputTitle(title = "${categoryName}");

		if (isSet(categoryDescription)) {
			PortletEntry.inputDescription(description = "${categoryDescription}");
		}

		if (isSet(displayPageTemplateType)) {
			Panel.expandPanel(panel = "Display Page");

			if ("${displayPageTemplateType}" != "Default") {
				Select(
					locator1 = "Select#SELECT_ID",
					selectFieldId = "displayPageType",
					value1 = "${displayPageTemplateType}");
			}

			AssertSelectedLabel(
				locator1 = "Select#SELECT_ID",
				selectFieldId = "displayPageType",
				value1 = "${displayPageTemplateType}");

			if ("${displayPageTemplateType}" != "None") {
				if ("${displayPageTemplateType}" == "Default") {
					AssertTextEquals(
						inputFieldId = "defaultDisplayPageNameInput",
						locator1 = "TextInput#INPUT_ID",
						value1 = "${displayPageName}");
				}

				if ("${displayPageTemplateType}" == "Specific") {
					AssertTextEquals(
						inputFieldId = "specificDisplayPageNameInput",
						locator1 = "TextInput#INPUT_ID",
						value1 = "No Display Page Template Selected");

					WaitForLiferayEvent.initializeLiferayEventLog();

					Click(
						buttonId = "chooseSpecificDisplayPage",
						locator1 = "Button#BUTTON_ID");

					SelectFrame(locator1 = "IFrame#MODAL_BODY");

					LexiconCard.clickCard(card = "${displayPageName}");

					SelectFrameTop();

					AssertTextEquals(
						inputFieldId = "specificDisplayPageNameInput",
						locator1 = "TextInput#INPUT_ID",
						value1 = "${displayPageName}");
				}
			}
		}

		PortletEntry.save();
	}

	macro addImageToCategory {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${categoryName}");

		Navigator.gotoNavTab(navTab = "Images");

		LexiconEntry.gotoAdd();

		ControlMenu.viewHeaderTitle(headerTitle = "Add Image");

		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(locator1 = "Button#SELECT_FILE");

		ItemSelector.uploadFile(uploadFileName = "${imageName}");

		PortletEntry.publish();
	}

	macro addPropertyCP {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${categoryName}");

		Navigator.gotoNavUnderline(navUnderline = "Properties");

		var i = "0";
		var pathNumber = "0";

		if ("${propertyNumber}" == "0") {
			var key_pathNumber = "${pathNumber}";

			Type(
				locator1 = "CategoriesEditCategory#PROPERTIES_KEY_FIELD",
				value1 = "${propertiesKeyField}");

			Type(
				locator1 = "CategoriesEditCategory#PROPERTIES_VALUE_FIELD",
				value1 = "${propertiesValueField}");

			Click(locator1 = "Button#ADD_ROW_LAST");
		}
		else {
			while ("${i}" != "${propertyNumber}") {
				var i = ${i} + 1;
				var key_pathNumber = "${pathNumber}";
				var pathNumber = ${pathNumber} + 1;

				Type(
					locator1 = "CategoriesEditCategory#PROPERTIES_KEY_FIELD",
					value1 = "${propertiesKeyField} ${i}");

				Type(
					locator1 = "CategoriesEditCategory#PROPERTIES_VALUE_FIELD",
					value1 = "${propertiesValueField} ${i}");

				Click(locator1 = "Button#ADD_ROW_LAST");
			}
		}

		PortletEntry.save();
	}

	macro addWithNullTitleCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoAdd();

		PortletEntry.inputTitle(title = " ");

		Button.clickSave();

		Alert.viewRequiredField();
	}

	macro assertLearnHowLink {
		Click(locator1 = "Categories#VOCABULARY_LINK_DOCUMENTATION");

		SelectWindow.selectPopUp(locator1 = "null");

		AssertLocation(value1 = "https://learn.liferay.com/dxp/latest/en/content-authoring-and-management/tags-and-categories/defining-categories-and-vocabularies-for-content.html");
	}

	macro assertMoveDifferentVisibilityVocabulary {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Move",
			rowEntry = "${categoryName}");

		AssertElementNotPresent(
			key_nodeName = "${vocabularyName2}",
			locator1 = "Treeview#NODE_UNSELECTED",
			value1 = "${vocabularyName2}");

		Button.clickCancel();
	}

	macro deleteByIconCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		PortletEntry.selectAll();

		Click(
			key_text = "trash",
			locator1 = "ManagementBar#ANY_ICON");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();

		PortletEntry.viewEmptyMessage(entity = "Categories");

		AssertTextNotPresent(value1 = "${categoryName}");
	}

	macro deleteCategoriesCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		PortletEntry.selectAll();

		Click(
			key_text = "trash",
			locator1 = "ManagementBar#ANY_ICON");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();

		PortletEntry.viewEmptyMessage(entity = "Categories");
	}

	macro deleteCategoryByMenuCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Delete",
			rowEntry = "${categoryName}");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "This category might be being used in some contents. If you delete it, this category and all of its subcategories will also be deleted and removed from those contents. Do you want to continue deleting this category?");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");

		Alert.viewSuccessMessage();

		PortletEntry.viewEmptyMessage(entity = "Categories");

		AssertTextNotPresent(value1 = "${categoryName}");
	}

	macro deleteCategoryNoPermissionCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.selectEntry(key_rowEntry = "${rowEntry}");

		AssertElementPresent(
			key_text = "trash",
			locator1 = "Icon#ANY_DISABLED");
	}

	macro deleteCategoryProperty2CP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${categoryName}");

		Navigator.gotoNavUnderline(navUnderline = "Properties");

		Click(
			key_rowIndexNumber = "2",
			locator1 = "Button#DELETE_ROW_N");

		AssertElementPresent(locator1 = "CategoriesEditCategory#PROPERTIES_UNDO_MESSAGE");

		PortletEntry.save();
	}

	macro editCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${categoryName}");

		if (isSet(categoryNameEdit)) {
			PortletEntry.inputTitle(title = "${categoryNameEdit}");
		}

		if (isSet(displayPageTemplateType)) {
			Panel.expandPanel(panel = "Display Page");

			Category.selectDisplayPageTemplate(
				displayPageName = "${displayPageName}",
				displayPageTemplateType = "${displayPageTemplateType}",
				selectedDisplayPageName = "${selectedDisplayPageName}");
		}

		PortletEntry.save();
	}

	macro editPropertyCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${categoryName}");

		Navigator.gotoNavUnderline(navUnderline = "Properties");

		Type(
			locator1 = "CategoriesEditCategory#PROPERTIES_KEY_FIELD_1",
			value1 = "${propertiesKeyFieldEdit}");

		Type(
			locator1 = "CategoriesEditCategory#PROPERTIES_VALUE_FIELD_1",
			value1 = "${propertiesValueFieldEdit}");

		PortletEntry.save();
	}

	macro getAssetId {
		var assetId = selenium.getAttribute("//table[contains(@class,'table')]//tr[contains(.,'${assetName}')]/td[1]//input@value");

		return "${assetId}";
	}

	macro moveViaEditCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Move",
			rowEntry = "${categoryName}");

		AssetCategorization.selectCategory(categoryName = "${vocabularyName2}");
	}

	macro openCategoriesAdmin {
		Navigator.openWithAppendToBaseURL(
			baseURL = "${baseURL}",
			urlAppend = "group/${siteURLKey}/~/control_panel/manage/-/categories_admin/");
	}

	macro removeLinkToDocumentationURL {
		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Assets",
			configurationName = "Categorization",
			configurationScope = "Virtual Instance Scope");

		Type(
			key_text = "linkToDocumentation",
			locator1 = "TextArea#ANY",
			value1 = " ");

		if (IsElementPresent(key_text = "Save", locator1 = "Button#ANY")) {
			Button.clickSave();
		}
		else {
			Button.clickUpdate();
		}

		Alert.viewSuccessMessage();
	}

	macro searchCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		Search.searchCP(searchTerm = "${categorySearchEntry}");
	}

	macro selectDisplayPageTemplate {
		Select(
			locator1 = "Select#SELECT_ID",
			selectFieldId = "displayPageType",
			value1 = "${displayPageTemplateType}");

		AssertSelectedLabel(
			locator1 = "Select#SELECT_ID",
			selectFieldId = "displayPageType",
			value1 = "${displayPageTemplateType}");

		if ("${displayPageTemplateType}" != "None") {
			if ("${displayPageTemplateType}" == "Default") {
				AssertTextEquals(
					inputFieldId = "defaultDisplayPageNameInput",
					locator1 = "TextInput#INPUT_ID",
					value1 = "${displayPageName}");
			}

			if ("${displayPageTemplateType}" == "Specific") {
				if (!(isSet(selectedDisplayPageName))) {
					var selectedDisplayPageName = "No Display Page Template Selected";
				}

				AssertTextEquals(
					inputFieldId = "specificDisplayPageNameInput",
					locator1 = "TextInput#INPUT_ID",
					value1 = "${selectedDisplayPageName}");

				WaitForLiferayEvent.initializeLiferayEventLog();

				Click(
					buttonId = "chooseSpecificDisplayPage",
					locator1 = "Button#BUTTON_ID");

				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				LexiconCard.clickCard(card = "${displayPageName}");

				SelectFrameTop();

				AssertTextEquals(
					inputFieldId = "specificDisplayPageNameInput",
					locator1 = "TextInput#INPUT_ID",
					value1 = "${displayPageName}");
			}
		}
	}

	macro viewCategoryPropertyCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${categoryName}");

		Navigator.gotoNavUnderline(navUnderline = "Properties");

		var i = "0";
		var pathNumber = "0";

		if ("${propertyNumber}" == "0") {
			var key_pathNumber = "${pathNumber}";

			AssertTextEquals(
				locator1 = "CategoriesEditCategory#PROPERTIES_KEY_FIELD",
				value1 = "${propertiesKeyField}");

			AssertTextEquals(
				locator1 = "CategoriesEditCategory#PROPERTIES_VALUE_FIELD",
				value1 = "${propertiesValueField}");
		}
		else {
			while ("${i}" != "${propertyNumber}") {
				var key_pathNumber = "${i}";
				var i = ${i} + 1;

				AssertTextEquals(
					locator1 = "Categories#CATEGORY_DETAILS_PROPERTY_KEY_2",
					value1 = "${propertiesKeyField} ${i}");

				AssertTextEquals(
					locator1 = "Categories#CATEGORY_DETAILS_PROPERTY_VALUE_2",
					value1 = "${propertiesValueField} ${i}");
			}
		}
	}

	macro viewCategoryToVocabularyCP {
		var key_categoryName = "${categoryName}";

		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		AssertClick(
			locator1 = "Categories#VOCABULARY_CATEGORY",
			value1 = "${categoryName}");
	}

	macro viewCategoryViewableByCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${categoryName}");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if ("${viewableBy}" == "Anyone (Guest Role)") {
			AssertChecked(locator1 = "AssetPermissions#GUEST_VIEW_CHECKBOX");
		}
		else if ("${viewableBy}" == "Owner") {
			AssertChecked(locator1 = "AssetPermissions#OWNER_VIEW_CHECKBOX");
		}
		else if ("${viewableBy}" == "Site Members") {
			AssertChecked(locator1 = "AssetPermissions#SITE_MEMBER_VIEW_CHECKBOX");
		}

		SelectFrameTop(value1 = "relative=top");
	}

	@summary = "Assert that the category named '${categoryName}' has been added to the vocabulary named '${vocabularyName}'"
	macro viewCP {
		var key_categoryName = "${categoryName}";

		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		AssertTextEquals(
			locator1 = "Categories#VOCABULARY_CATEGORY",
			value1 = "${categoryName}");
	}

	macro viewFilterViaCategoriesNavigationPG {
		var key_categoryName = "${categoryName}";
		var key_nodeName = "${categoryName}";
		var key_nodeListName = "${vocabularyName}";

		Portlet.expandTree();

		AssertClick(
			locator1 = "Treeview#NODE_UNSELECTED",
			value1 = "${categoryName}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#CATEGORIES_FILTER_CATEGORY",
			value1 = "${categoryName}");
	}

	macro viewNavigationCP {
		Navigator.gotoNavNested(navNested = "${vocabularyName}");

		var key_categoryName = "${categoryName}";

		Click(locator1 = "Categories#CATEGORY_ENTRY_LINK");

		SiteAdmin.viewPortletTitle(portletTitle = "Categories");

		AssertClick(
			key_breadcrumbName = "${vocabularyName}",
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK",
			value1 = "${vocabularyName}");

		SiteAdmin.viewPortletTitle(portletTitle = "Categories");
	}

	macro viewPath {
		AssertTextEquals(
			key_categoryName = "${categoryName}",
			locator1 = "Categories#CATEGORY_ENTRY_PATH",
			value1 = "${path}");
	}

	macro viewRemoveFilterViaAP {
		var key_categoryName = "${categoryName}";
		var key_nodeListName = "${vocabularyName}";

		AssertTextEquals.assertPartialText(
			locator1 = "Treeview#NODE_LIST",
			value1 = "${vocabularyName}");

		Click(locator1 = "AP#CATEGORIES_FILTER_CATEGORY_REMOVE");

		AssertElementNotPresent(locator1 = "AP#CATEGORIES_FILTER_CATEGORY");
	}

	macro viewSearchResultsCP {
		if (isSet(categoryNameList)) {
			for (var categoryName : list "${categoryNameList}") {
				var key_categoryName = "${categoryName}";

				AssertTextEquals(
					locator1 = "Categories#CATEGORY_ENTRY",
					value1 = "${categoryName}");
			}
		}

		if (isSet(categoryDescriptionList)) {
			for (var categoryDescription : list "${categoryDescriptionList}") {
				var key_categoryDescription = "${categoryDescription}";

				AssertTextEquals(
					locator1 = "Categories#CATEGORY_ENTRY_DESCRIPTION",
					value1 = "${categoryDescription}");
			}
		}

		if ("${nullResult}" == "true") {
			PortletEntry.viewEmptyMessage(entity = "Categories");
		}
	}

}