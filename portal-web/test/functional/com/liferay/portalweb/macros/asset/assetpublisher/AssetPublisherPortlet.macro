definition {

	macro addAsset {
		Portlet.clickPortletPlusIconPG(portletName = "Asset Publisher");

		if (isSet(siteScope)) {
			MenuItem.click(menuItem = "Add Content (Select Scope and Type)");

			SelectField.select(
				selectFieldLabel = "Scope",
				selectFieldValue = "${siteScope}");

			SelectField.select(
				selectFieldLabel = "Asset Type",
				selectFieldValue = "${assetType}");

			Button.clickAdd();
		}
		else {
			MenuItem.click(menuItem = "${assetType}");
		}
	}

	macro assertSiteScopeSearch {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		AssertClick(
			locator1 = "Configuration#SCOPE_SELECT",
			value1 = "Select");

		MenuItem.click(menuItem = "Other Site or Asset Library...");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#SELECT_SITES");

		Navigator.gotoNavTab(navTab = "Sites That I Administer");

		SiteSelector.viewSite(site = "${siteName}");
	}

	macro changePagination {
		Click(locator1 = "Pagination#CURRENT_PAGE_MENU");

		MenuItem.click(menuItem = "${paginationItem}");

		AssertTextEquals.assertPartialText(
			locator1 = "Pagination#CURRENT_PAGE_MENU",
			value1 = "Page ${currentPageNumber}");
	}

	macro clickAssetTitle {
		Click(
			key_assetTitle = "${assetTitle}",
			locator1 = "AP#ASSET_ABSTRACT_TITLE");
	}

	macro configureAddSiteScopes {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		if (isSet(globalSite)) {
			Click(locator1 = "Configuration#SCOPE_SELECT");

			MenuItem.click(menuItem = "Global");
		}

		if (isSet(otherSite)) {
			Click(locator1 = "Configuration#SCOPE_SELECT");

			MenuItem.click(menuItem = "Other Site or Asset Library...");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			Navigator.gotoNavTab(navTab = "Sites That I Administer");

			SiteSelector.selectSite(site = "${otherSite}");
		}

		if (isSet(depotName)) {
			Click(locator1 = "Configuration#SCOPE_SELECT");

			MenuItem.click(menuItem = "Other Site or Asset Library...");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			Navigator.gotoNavTab(navTab = "Asset Libraries");

			Click(
				key_card = "${depotName}",
				locator1 = "Card#CARD_TITLE");
		}

		if (isSet(defaultSite)) {
			Click(locator1 = "Configuration#SCOPE_SELECT");

			MenuItem.click(menuItem = "Current Site");
		}

		SelectFrameTop();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Alert.viewSuccessMessage();
	}

	macro configureAPSelectMoreThanOnePG {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "Select More Than One...");

		for (var contentName : list "${selectContent}") {
			var key_contentName = "${contentName}";

			Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_CONTENT");

			if ("${moveSelected}" == "true") {
				Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_MOVE_SELECTED");
			}
			else {
				Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_MOVE_AVAILABLE");
			}
		}

		PortletEntry.save();
	}

	macro configureAssetDisplayOrderPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Ordering");

		Select(
			locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_BY_SELECT",
			value1 = "${fieldNameOrder}");

		var key_sortOrder = "${sortOrder}";

		if (isSet(sortOrder) && (IsVisible(locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_DIRECTIONAL_ICON"))) {
			Click(locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_DIRECTIONAL_ICON");
		}

		AssertNotVisible(locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_DIRECTIONAL_ICON");

		PortletEntry.save();
	}

	macro configureAssetLinkBehaviorPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Set and Enable");

		if (isSet(disableConfiguration)) {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "${disableConfiguration}",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		Select(
			locator1 = "APConfigurationDisplaysettings#ASSET_LINK_BEHAVIOR_SELECT",
			value1 = "${assetLinkBehavior}");

		PortletEntry.save();

		IFrame.closeFrame();
	}

	macro configureAssetTypePG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}");

		if ("${selectMoreThanOneSubtype}" == "true") {
			Select(
				locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
				value1 = "Select More Than One...");

			if (isSet(selectContent)) {
				for (var contentName : list "${selectContent}") {
					var key_contentName = "${contentName}";

					Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_CONTENT");

					if ("${moveSelected}" == "true") {
						Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_SUBTYPE_MOVE_SELECTED");
					}
					else {
						Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_SUBTYPE_MOVE_AVAILABLE");
					}
				}
			}
		}
		else {
			Select(
				locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
				value1 = "${assetSubtype}");
		}

		PortletEntry.save();
	}

	macro configureCategoriesFilterPG {
		if (!(isSet(portletName))) {
			var portletName = "Asset Publisher";
		}

		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Filter");

		Click(locator1 = "APConfiguration#RULE_BUILDER_ADD_CONDITION");

		Select(
			locator1 = "APConfiguration#FILTER_CATEGORIZATION_SELECT",
			value1 = "Categories");

		if (isSet(queryAndOperator)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_AND_OPERATOR",
				value1 = "${queryAndOperator}");
		}

		Click(locator1 = "Button#SELECT_CATEGORIES");

		AssetCategorization.gotoSelectCategory();

		Portlet.selectTreeNode(nodeName = "${categoryName}");

		SelectFrameTop();

		SelectFrame(
			key_title = "${portletName}",
			locator1 = "IFrame#MODAL_ANY");

		if (IsElementPresent(key_text = "Add", locator1 = "Modal#MODAL_FOOTER_BUTTON")) {
			Click(
				key_text = "Add",
				locator1 = "Modal#MODAL_FOOTER_BUTTON");
		}
		else if (IsElementPresent(key_text = "Done", locator1 = "Modal#MODAL_FOOTER_BUTTON")) {
			Click(
				key_text = "Done",
				locator1 = "Modal#MODAL_FOOTER_BUTTON");
		}

		AssertTextEquals(
			key_categoryName = "${categoryName}",
			locator1 = "AssetCategorization#CATEGORY",
			value1 = "${categoryName}");

		PortletEntry.save();

		SelectFrameTop();
	}

	macro configureCollectionProviderPG {
		WaitForLiferayEvent.initializeLiferayEventLog();

		if (isSet(columnNumnber)) {
			MouseOver.mouseOverNotVisible(
				key_columnNumber = "${columnNumnber}",
				key_portletName = "Asset Publisher",
				locator1 = "Home#PAGE_COLUMN_PORTLET_HEADER_ELLIPSIS");

			Click.waitForMenuToggleJSClick(
				key_columnNumber = "${columnNumnber}",
				key_portletName = "Asset Publisher",
				locator1 = "Home#PAGE_COLUMN_PORTLET_HEADER_ELLIPSIS");

			MenuItem.click(menuItem = "Configuration");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");
		}
		else {
			AssetPublisherPortlet.gotoConfigurationPG(portletName = "Asset Publisher");
		}

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Asset Selection");

		if (IsNotChecked(locator1 = "APConfiguration#ASSET_SELECTION_ASSET_LIST")) {
			Check(locator1 = "APConfiguration#ASSET_SELECTION_ASSET_LIST");

			Alert.viewSuccessMessage();
		}

		Panel.expandPanel(panel = "Select Collection");

		Alert.closeMessage(messageType = "SUCCESS");

		Button.clickSelect();

		WaitForElementPresent(locator1 = "IFrame#ASSET_LIST_DIALOG");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		NavItem.click(navItem = "Collection Providers");

		LexiconCard.clickCard(card = "${collectionProviderName}");

		SelectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		AssertTextEquals(
			locator1 = "APConfiguration#ASSET_SELECTION_ASSET_LIST_TITLE",
			value1 = "${collectionProviderName}");

		PortletEntry.save();

		IFrame.closeFrame();
	}

	macro configureDisplayConversionsPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Set and Enable");

		for (var documentType : list "${documentTypes}") {
			var documentTypeUppercase = StringUtil.upperCase("${documentType}");

			if ("${check}" == "true") {
				Check.checkToggleSwitch(locator1 = "APConfigurationDisplaysettings#ENABLE_CONVERSION_${documentTypeUppercase}_CHECKBOX");
			}
			else if ("${uncheck}" == "true") {
				Uncheck.uncheckToggleSwitch(locator1 = "APConfigurationDisplaysettings#ENABLE_CONVERSION_${documentTypeUppercase}_CHECKBOX");
			}
		}

		PortletEntry.save();
	}

	macro configureDisplaySettings {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Set and Enable");

		for (var displaySetting : list "${displaySettings}") {
			Check(
				checkboxName = "${displaySetting}",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		if (isSet(enableSocialBookmarkSites)) {
			for (var socialBookmarkSite : list "${enableSocialBookmarkSites}") {
				AddSelection(
					locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_AVAILABLE_SELECT",
					value1 = "${socialBookmarkSite}");

				Click(locator1 = "Button#MOVE_AVAILABLE_TO_CURRENT");

				AssertTextEquals.assertPartialText(
					locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_CURRENT_SELECT",
					value1 = "${socialBookmarkSite}");
			}
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro configureDisplayTemplatePG {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Navigator.gotoNavTab(navTab = "Display Settings");

		Select(
			locator1 = "Select#DISPLAY_TEMPLATE",
			value1 = "${displayTemplate}");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro configureDynamicAssetSelectionPG {
		if (IsElementPresent(key_portletName = "${portletName}", key_text = "Select a collection to make it visible.", locator1 = "Portlet#PORTLET_SELECTOR")) {
			AssetPublisherPortlet.gotoSelectCollection(portletName = "${portletName}");
		}
		else {
			AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");
		}

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_DYNAMIC");

		Alert.viewSuccessMessage();

		IFrame.closeFrame();
	}

	macro configureFilterByFieldPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = "${assetSubtype}");

		Check.checkToggleSwitch(locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX");

		AssertClick(
			locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#SELECT_STRUCTURE_FIELD");

		if (isSet(fieldFilter)) {
			Select(
				key_fieldLabel = "Select",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${fieldFilter}");
		}

		if (isSet(fieldValue)) {
			Type(
				key_fieldFieldLabel = "${fieldFilter}",
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = "${fieldValue}");
		}

		Button.clickApply();

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(fieldValue)) {
			AssertElementPresent(
				key_text = "${fieldFilter}: ${fieldValue}",
				locator1 = "APConfiguration#SOURCE_SCOPE_FIELD_FILTER_AND_VALUE");
		}

		PortletEntry.save();

		Panel.expandPanel(panel = "Source");

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}");

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = "${assetSubtype}");
	}

	macro configureManualAssetSelectionPG {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL");

		if (isSet(depotName)) {
			Panel.expandPanel(panel = "Scope");

			Click(locator1 = "Configuration#SCOPE_SELECT");

			MenuItem.click(menuItem = "Other Site or Asset Library...");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			Navigator.gotoNavTab(navTab = "Asset Libraries");

			if (isSet(noConnectedDepot)) {
				AssertTextEquals(
					locator1 = "Message#EMPTY_INFO",
					value1 = "No asset libraries were found.");
			}
			else {
				SiteSelector.selectSite(site = "${depotName}");

				SelectFrame(locator1 = "IFrame#MODAL_BODY");
			}
		}

		if (isSet(assetTitle) || isSet(searchTerm)) {
			Panel.expandPanel(panel = "Asset Entries");

			if (isSet(depotName)) {
				Click(
					key_depotName = "${depotName}",
					locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT_IN_DEPOT");
			}
			else {
				Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT_BUTTON");
			}

			var key_assetType = "${assetType}";

			AssertClick(
				locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_ASSET",
				value1 = "${assetType}");

			WaitForElementPresent(locator1 = "APConfigurationManual#ASSET_SELECTION_MANUAL_SELECT_ASSET_ENTRIES_DIALOG");

			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			if (isSet(assetTitle)) {
				var key_assetTitle = "${assetTitle}";

				if (isSet(viewNoRelatedAsset)) {
					AssertElementNotPresent(
						key_rowEntry = "${assetTitle}",
						locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
				}
				else {
					WaitForElementPresent(
						key_rowEntry = "${assetTitle}",
						locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");

					Click(
						key_rowEntry = "${assetTitle}",
						locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
				}
			}

			if (isSet(searchTerm)) {
				Search.searchPG(
					modal = "true",
					portletName = "",
					searchTerm = "${searchTerm}");

				AssertTextEquals(
					locator1 = "Search#SEARCH_INFO",
					value1 = "${searchInfo}");

				PortletEntry.selectAll();
			}

			SelectFrameTop();

			SelectFrame(locator1 = "IFrame#CONFIGURATION");

			Button.clickAdd();

			Alert.viewSuccessMessage();
		}

		SelectFrameTop();
	}

	macro configurePaginationPG {
		AssetPublisherPortlet.gotoConfigurationPG(portletIndex = "${portletIndex}");

		Navigator.gotoNavTab(navTab = "Display Settings");

		Type(
			locator1 = "APConfigurationDisplaysettings#NUMBER_OF_ITEMS_TO_DISPLAY_FIELD",
			value1 = "${paginationNumber}");

		Select(
			locator1 = "APConfigurationDisplaysettings#PAGINATION_TYPE_SELECT",
			value1 = "${paginationType}");

		PortletEntry.save();
	}

	macro configureSelectedPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}");

		PortletEntry.save();
	}

	macro configureShowMetadataFieldsPG {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Metadata");

		for (var metadataField : list "${metadataFieldList}") {
			if ("${addMetadata}" == "true") {
				AddSelection(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_AVAILABLE_FIELD_SELECT",
					value1 = "${metadataField}");

				AssertElementPresent(
					key_configuration = "metadataContent",
					locator1 = "Configuration#MOVE_AVAILABLE_TO_CURRENT");

				Click(
					key_configuration = "metadataContent",
					locator1 = "Configuration#MOVE_AVAILABLE_TO_CURRENT");

				AssertTextEquals(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_CURRENT_FIELD_SELECT",
					value1 = "${metadataField}");
			}
		}

		for (var metadataField : list "${metadataFieldList}") {
			if ("${removeMetadata}" == "true") {
				AddSelection(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_CURRENT_FIELD_SELECT",
					value1 = "${metadataField}");

				AssertElementPresent(
					key_configuration = "metadataContent",
					locator1 = "Configuration#MOVE_CURRENT_TO_AVAILABLE");

				Click(
					key_configuration = "metadataContent",
					locator1 = "Configuration#MOVE_CURRENT_TO_AVAILABLE");

				AssertTextEquals(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_AVAILABLE_FIELD_SELECT",
					value1 = "${metadataField}");
			}
		}

		PortletEntry.save();

		SelectFrameTop();
	}

	macro configureSiteScopePG {
		var key_siteName = "${siteName}";

		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		AssertClick(
			locator1 = "Configuration#SCOPE_SELECT",
			value1 = "Select");

		if ("${siteName}" == "Global") {
			MenuItem.click(menuItem = "${siteName}");
		}
		else {
			MenuItem.click(menuItem = "Other Site or Asset Library...");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			if ("${siteScopeType}" == "Child Site") {
				Navigator.gotoNavTab(navTab = "Child Sites");

				LexiconEntry.changeDisplayStyle(displayStyle = "table");
			}
			else if ("${siteScopeType}" == "Parent Site") {
				Navigator.gotoNavTab(navTab = "Parent Sites");

				LexiconEntry.changeDisplayStyle(displayStyle = "table");
			}
			else {
				Navigator.gotoNavTab(navTab = "Sites That I Administer");

				LexiconEntry.changeDisplayStyle(displayStyle = "table");
			}

			AssertTextEquals(
				locator1 = "APConfigurationSites#SITES_TABLE_NAME",
				value1 = "${siteName}");

			AssertTextEquals(
				locator1 = "APConfigurationSites#SITES_TABLE_TYPE",
				value1 = "${siteScopeType}");

			Click(locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK");

			Alert.viewSuccessMessage();

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");
		}

		Panel.expandPanel(panel = "Scope");

		AssertTextEquals.assertPartialText(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = "${siteName}");

		AssertTextEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = "${siteScopeType}");

		PortletEntry.save();

		AssertTextEquals.assertPartialText(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = "${siteName}");

		AssertTextEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = "${siteScopeType}");

		AssertElementPresent(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");

		SelectFrameTop();
	}

	macro configureSiteScopeRemoveSitePG {
		var key_siteName = "${siteName}";

		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		var key_siteName = "${siteName}";

		Click(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");

		Alert.viewSuccessMessage();

		AssertTextNotPresent(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = "${siteName}");

		AssertTextNotPresent(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = "${siteScopeType}");

		SelectFrameTop();
	}

	macro configureTagsFilterPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Filter");

		if (isSet(queryAndOperator)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_AND_OPERATOR",
				value1 = "${queryAndOperator}");
		}

		if (isSet(queryContains)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_CONTAINS",
				value1 = "${queryContains}");
		}

		Select(
			locator1 = "APConfiguration#FILTER_CATEGORIZATION_SELECT",
			value1 = "Tags");

		AssetCategorization.selectTag(tagNameList = "${tagNameList}");

		PortletEntry.save();

		IFrame.selectTopFrame();
	}

	macro deleteConfigurationTemplatePG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconTable.clickEllipsisItem(
			item = "Delete",
			tableEntry = "${configurationName}");

		AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();

		PortletEntry.viewEmptyMessage(entity = "Configuration Templates");
	}

	macro editConfigureCategoriesFilterPG {
		if (!(isSet(portletName))) {
			var portletName = "Asset Publisher";
		}

		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Filter");

		if (isSet(queryContains)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_CONTAINS",
				value1 = "${queryContains}");
		}

		Click(locator1 = "Button#SELECT_CATEGORIES");

		AssetCategorization.gotoSelectCategory();

		for (var categoryName : list "${categoryNames}") {
			Portlet.selectTreeNode(nodeName = "${categoryName}");
		}

		SelectFrameTop();

		SelectFrame(
			key_title = "${portletName}",
			locator1 = "IFrame#MODAL_ANY");

		if (IsElementPresent(locator1 = "//button[contains(.,'Add')]")) {
			AssertClick(
				locator1 = "//button[contains(.,'Add')]",
				value1 = "Add");
		}
		else if (IsElementPresent(locator1 = "Button#DONE")) {
			AssertClick(
				locator1 = "Button#DONE",
				value1 = "Done");
		}

		PortletEntry.save();

		SelectFrameTop();
	}

	macro enableRSSSubscription {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Navigator.gotoNavTab(navTab = "Subscriptions");

		AssertTextEquals(
			locator1 = "APConfiguration#SUBSCRIPTIONS_ENABLE_RSS_SUBSCRIPTION_LABEL",
			value1 = "Enable RSS Subscription");

		Check.checkToggleSwitch(locator1 = "APConfiguration#SUBSCRIPTIONS_ENABLE_RSS_SUBSCRIPTION");

		PortletEntry.save();
	}

	macro enableUserSegementFilter {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "User Segments Filter");

		AssertTextEquals(
			locator1 = "APConfiguration#ENABLE_USER_SEGMENTS_FILTER_LABEL",
			value1 = "User Segments Filter");

		Check.checkToggleSwitch(locator1 = "APConfiguration#ENABLE_USER_SEGMENTS_FILTER");

		Button.clickSave();

		SelectFrameTop();
	}

	macro gotoConfigurationPG {
		if (!(isSet(portletName))) {
			var portletName = "Asset Publisher";
		}

		WaitForLiferayEvent.initializeLiferayEventLog();

		Portlet.gotoPortletOptions(
			portletIndex = "${portletIndex}",
			portletName = "${portletName}",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");
	}

	macro gotoEditAssetPG {
		MouseOver(
			key_assetTitle = "${assetTitle}",
			locator1 = "AP#ASSET_ABSTRACT_TITLE");

		Click.mouseOverClick(
			key_assetTitle = "${assetTitle}",
			locator1 = "AP#ASSET_ELLIPSIS_ICON");

		MenuItem.click(menuItem = "Edit");
	}

	macro gotoSelectCollection {
		if (!(isSet(portletName))) {
			var portletName = "Asset Publisher";
		}

		WaitForLiferayEvent.initializeLiferayEventLog();

		Click(
			key_portletName = "${portletName}",
			key_text = "Select a collection to make it visible.",
			locator1 = "Portlet#PORTLET_SELECTOR");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");
	}

	macro gotoViewInContext {
		AssertClick(
			locator1 = "Link#VIEW_IN_CONTEXT",
			value1 = "View in Context »");
	}

	macro removeSiteScope {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		for (var removeSiteScope : list "${removeSiteScopes}") {
			var key_siteName = "${removeSiteScope}";

			Click(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");
		}

		Alert.viewSuccessMessage();

		SelectFrameTop();
	}

	macro restoreConfigurationTemplatePG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		LexiconTable.clickEllipsisItem(
			item = "Apply",
			tableEntry = "${configurationName}");

		Alert.viewSuccessMessage();
	}

	macro saveConfigurationTemplatePG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		PortletEntry.viewEmptyMessage(entity = "Configuration Templates");

		AssertClick(
			locator1 = "Configuration#SAVE_CONFIGURATION_TEMPLATE",
			value1 = "Save Current Configuration as Template");

		PortletEntry.inputName(name = "${configurationName}");

		Button.clickSave();

		var key_configurationName = "${configurationName}";

		AssertTextEquals(
			locator1 = "Configuration#CONFIGURATION_TEMPLATE_TABLE_NAME",
			value1 = "${configurationName}");

		Alert.viewSuccessMessage();

		SelectFrameTop();
	}

	macro selectAssetList {
		if (IsElementPresent(key_tab = "Asset Selection", locator1 = "NavTab#TAB_LINK")) {
			Navigator.gotoNavTab(navTab = "Asset Selection");
		}
		else {
			if (IsElementPresent(key_portletName = "Asset Publisher", key_text = "Select a collection to make it visible.", locator1 = "Portlet#PORTLET_SELECTOR")) {
				AssetPublisherPortlet.gotoSelectCollection();
			}
			else {
				AssetPublisherPortlet.gotoConfigurationPG();
			}

			Navigator.gotoNavTab(navTab = "Asset Selection");
		}

		var key_title = "${assetListName}";

		Panel.expandPanel(panel = "Asset Selection");

		if (IsNotChecked(locator1 = "APConfiguration#ASSET_SELECTION_ASSET_LIST")) {
			Check(locator1 = "APConfiguration#ASSET_SELECTION_ASSET_LIST");

			Alert.viewSuccessMessage();
		}

		Panel.expandPanel(panel = "Select Collection");

		Button.clickSelect();

		WaitForElementPresent(locator1 = "IFrame#ASSET_LIST_DIALOG");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		NavItem.click(navItem = "Collections");

		if (isSet(depotName)) {
			AssertClick(
				key_breadcrumbName = "Sites and Libraries",
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
				value1 = "Sites and Libraries");

			AssertClick(
				key_groupTab = "Asset Library",
				locator1 = "ItemSelector#NAVIGATION_GROUP_TAB",
				value1 = "Asset Library");

			Click(
				key_card = "${depotName}",
				locator1 = "Card#CARD_TITLE");

			if (isSet(collectionsDisable)) {
				AssertTextEquals(
					locator1 = "Message#INFO",
					value1 = "Info:This application is not supported for Asset Libraries. Please, go back to scope selection.");
			}
			else {
				Click(locator1 = "AssetLists#ASSET_LIST_ENTRY_TITLE_CARD");
			}
		}
		else {
			LexiconEntry.changeDisplayStyle(displayStyle = "list");

			Click(locator1 = "AssetLists#ASSET_LIST_ENTRY_TITLE");
		}

		if (isSet(assetListName)) {
			SelectFrameTop();

			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			AssertTextEquals(
				locator1 = "APConfiguration#ASSET_SELECTION_ASSET_LIST_TITLE",
				value1 = "${assetListName}");

			PortletEntry.save();

			SelectFrameTop();
		}
	}

	macro viewAssetDetailsPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}");

		if ("${displayTemplate}" == "Full Content") {
			Click(locator1 = "AP#ASSET_DETAILS_LINK");
		}
		else {
			AssetPublisherPortlet.clickAssetTitle(assetTitle = "${assetTitle}");
		}

		if ("${assetType}" == "Web Content Folder") {
			AssertTextEquals.assertPartialText(
				key_position = "1",
				locator1 = "AP#ASSET_ABSTRACT_DETAIL_WEB_CONTENT_FOLDER_CONTENT",
				value1 = "${assetSubfolderDetails}");

			AssertTextEquals.assertPartialText(
				key_position = "2",
				locator1 = "AP#ASSET_ABSTRACT_DETAIL_WEB_CONTENT_FOLDER_CONTENT",
				value1 = "${assetArticleDetails}");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = "${assetTitle}");

			AssertTextEquals.assertPartialText(
				locator1 = "AP#ASSET_ABSTRACT_DETAIL_CONTENT",
				value1 = "${assetContent}");
		}
	}

	macro viewAssetMetadataPG {
		var key_categoryName = "${categoryName}";

		AssertTextEquals.assertPartialText(
			locator1 = "AP#METADATA_CATEGORY",
			value1 = "${categoryName}");
	}

	macro viewAssetNotPresentPG {
		var key_assetTitle = "${assetTitle}";

		AssertElementNotPresent(locator1 = "AP#ASSET_ABSTRACT_TITLE");

		if (isSet(assetContent)) {
			AssertTextNotPresent(
				locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
				value1 = "${assetContent}");
		}
	}

	macro viewAssetOrderPG {
		var n = "1";

		for (var assetTitle : list "${assetTitleList}") {
			AssertVisible(
				key_assetTitle = "${assetTitle}",
				key_index = "${n}",
				locator1 = "AP#ASSET_ORDER");

			var n = ${n} + 1;
		}
	}

	macro viewAssetPG {
		var key_assetTitle = "${assetTitle}";

		if (isSet(filteredByCategory)) {
			AssertTextEquals.assertPartialText(
				key_categoryName = "${categoryName}",
				locator1 = "AP#CATEGORIES_FILTER_CATEGORY",
				value1 = "${categoryName}");
		}

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}");

		if (isSet(assetContent)) {
			AssertTextEquals.assertPartialText(
				locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
				value1 = "${assetContent}");
		}
	}

	macro viewAssetRelatedAssets {
		AssertTextEquals(
			locator1 = "AssetRelatedAssets#HEADER",
			value1 = "Related Assets");

		for (var relatedAssetTitle : list "${relatedAssetTitles}") {
			AssertTextEquals(
				key_relatedAssetTitle = "${relatedAssetTitle}",
				locator1 = "AssetRelatedAssets#ASSET_TITLE",
				value1 = "${relatedAssetTitle}");
		}
	}

	macro viewAssetTypeNotAvailable {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Panel.expandPanel(panel = "Source");

		AssertTextNotEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${assetType}");

		SelectFrameTop();
	}

	macro viewAssetViewCount {
		AssertTextEquals.assertPartialText(
			key_assetTitle = "${assetTitle}",
			key_viewCount = "${viewCount}",
			locator1 = "APAsset#ASSET_VIEW_COUNT",
			value1 = "${viewCount}");
	}

	macro viewConfigureAPDisplayTemplateFullContentBookmarksPG {
		var key_assetTitle = "${assetTitle}";
		var key_bookmarkName = "${bookmarkName}";

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertVisible(
			locator1 = "Link#VIEW_IN_CONTEXT",
			value1 = "View in Context »");

		AssertVisible(
			key_text = "${url}",
			locator1 = "Link#ANY");

		AssertVisible(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${bookmarkDescription}");
	}

	macro viewConfigureAPDisplayTemplateTableBookmarksPG {
		var key_assetTitle = "${assetTitle}";
		var key_bookmarkName = "${bookmarkName}";

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${bookmarkDescription}");

		AssertElementNotPresent(locator1 = "AP#ASSET_ABSTRACT_BOOKMARK_TABLE_DISPLAY_TEMPLATE_BOOKMARK_ICON");
	}

	macro viewConfigureAPDisplayTemplateTitleListBookmarksPG {
		var key_assetTitle = "${assetTitle}";
		var key_bookmarkName = "${bookmarkName}";

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${bookmarkDescription}");
	}

	macro viewConfigureAPMoveToAvailablePG {
		var key_assetTitle = "${assetTitle}";

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}");
	}

	macro viewConfigureAPMoveToSelectedPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}");
	}

	macro viewConfigureSiteScope {
		var key_siteName = "${siteName}";

		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		AssertTextEquals.assertPartialText(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = "${siteName}");
	}

	macro viewConfigureSiteScopeContentSharingPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Scope");

		AssertClick(
			locator1 = "Configuration#SCOPE_SELECT",
			value1 = "Select");

		if ("${contentSharingAcrossSitesEnabled}" == "true") {
			AssertTextEquals(
				key_menuItem = "Global",
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = "Global");

			MenuItem.click(menuItem = "Other Site or Asset Library...");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			AssertClick.assertPartialTextClickAt(
				key_tab = "Sites That I Administer",
				locator1 = "NavTab#TAB_LINK",
				value1 = "Sites That I Administer");

			AssertElementPresent(
				key_tab = "Sites That I Administer",
				locator1 = "NavTab#ACTIVE_TAB_LINK");

			var key_siteName = "${liferaySiteName}";

			LexiconEntry.changeDisplayStyle(displayStyle = "table");

			AssertTextEquals(
				locator1 = "APConfigurationSites#SITES_TABLE_NAME",
				value1 = "${liferaySiteName}");

			AssertTextEquals(
				locator1 = "APConfigurationSites#SITES_TABLE_TYPE",
				value1 = "${liferaySiteType}");

			AssertElementPresent(locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK");
		}
		else if ("${contentSharingAcrossSitesEnabled}" == "false") {
			AssertTextEquals(
				key_menuItem = "Global",
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = "Global");

			if ("${childSite}" == "true") {
				AssertTextEquals(
					key_menuItem = "Other Site or Asset Library...",
					locator1 = "MenuItem#ANY_MENU_ITEM",
					value1 = "Other Site or Asset Library...");
			}
			else {
				MenuItem.viewNotPresent(menuItem = "OTHER_SITE");
			}
		}

		SelectFrame(value1 = "relative=top");
	}

	macro viewContentSharingPG {
		MouseOver.mouseOverNotVisible(locator1 = "AP#ADD_ASSET_PLUS_ICON");

		Click(locator1 = "AP#ADD_ASSET_PLUS_ICON");

		AssertClick(
			locator1 = "AP#ADD_ASSET_SCOPED",
			value1 = "Add Content (Select Scope and Type)");

		Select(
			locator1 = "Select#SCOPE",
			value1 = "${siteScope1}");

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = "${siteScope1}");

		Select(
			locator1 = "Select#SCOPE",
			value1 = "${siteScope2}");

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = "${siteScope2}");

		Button.clickCancel();

		AssetPublisherPortlet.viewPG(
			assetContent = "${assetContent}",
			assetTitle = "${assetTitle}");
	}

	macro viewCustomADTRichSummaryPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_RICH_SUMMARY_TITLE",
			value1 = "${assetTitle}");

		if (isSet(assetDescription)) {
			AssertTextEquals.assertPartialText(
				locator1 = "AP#CUSTOM_ASSET_ABSTRACT_DESCRIPTION",
				value1 = "${assetDescription}");
		}

		AssertElementPresent(locator1 = "Link#READ_MORE");

		AssertElementPresent(locator1 = "Icon#PRINT");

		AssertElementPresent(locator1 = "Icon#FLAG");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR");

		AssertElementPresent(locator1 = "Button#SUBSCRIBE");

		AssertElementPresent(locator1 = "Icon#CUSTOM_EDIT");

		Click(locator1 = "Link#READ_MORE");

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${assetContent}");
	}

	macro viewDefaultWithAllDisplaySettingsCheckboxesPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}");

		AssertElementPresent(locator1 = "AP#ASSET_ABSTRACT_EDIT");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${assetDescription}");
	}

	macro viewDisplayOrderPG {
		AssertTextEquals(
			key_rowNumber = "${rowNumber}",
			locator1 = "APAsset#ASSET_ROW_ENTRY_TITLE",
			value1 = "${assetTitle}");
	}

	macro viewDisplaySettings {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panel = "Set and Enable");

		for (var displaySetting : list "${displaySettings}") {
			if (contains("${displaySetting}", "Social Bookmarks")) {
				AssertChecked.assertCheckedHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_SOCIAL_BOOKMARKS");
			}
			else {
				AssertChecked(
					checkboxName = "${displaySetting}",
					locator1 = "Checkbox#ANY_CHECKBOX");
			}
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro viewDynamicAssetSelectionConfigurationPG {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_DYNAMIC");

		for (var panel : list "Source,Filter,Custom User Attributes,Ordering") {
			AssertElementPresent(
				key_panel = "${panel}",
				locator1 = "Panel#PANEL_COLLAPSED");
		}

		SelectFrameTop();
	}

	macro viewEditLinkPG {
		var key_assetTitle = "${entryTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${entryTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${entryContent}");

		AssertElementPresent(locator1 = "AP#ASSET_ABSTRACT_EDIT");
	}

	macro viewFilterAndFieldsPG {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = "${assetSubtype}");

		if ("${noneIndexable}" == "true") {
			AssertNotVisible(locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX");

			AssertElementNotPresent(locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON");
		}
		else {
			Check.checkToggleSwitch(locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX");

			AssertClick(
				locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON",
				value1 = "Select");

			SelectFrame(locator1 = "IFrame#SELECT_STRUCTURE_FIELD");

			for (var assetSubtypeField : list "${assetSubtypeFields}") {
				AssertElementPresent(
					key_fieldLabel = "Select",
					key_value = "${assetSubtypeField}",
					locator1 = "Select#GENERIC_SELECT_VALUE");
			}
		}

		SelectFrameTop();
	}

	macro viewManualAssetSelectionConfigurationPG {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Asset Entries");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL");

		AssertElementNotPresent(locator1 = "APConfiguration#SOURCE_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#SOURCE_DROPDOWN_COLLAPSED");

		AssertElementNotPresent(locator1 = "APConfiguration#FILTER_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#FILTER_DROPDOWN_COLLAPSED");

		AssertElementNotPresent(locator1 = "APConfiguration#CUSTOM_USER_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#CUSTOM_USER_DROPDOWN_COLLAPSED");

		AssertElementNotPresent(locator1 = "APConfiguration#ORDERING_AND_GROUPING_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#ORDERING_AND_GROUPING_DROPDOWN_COLLAPSED");

		SelectFrameTop();
	}

	macro viewManualAssetTypesPG {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Panel.expandPanel(panel = "Asset Entries");

		Click(locator1 = "APConfigurationManual#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT");

		for (var assetEntryType : list "${assetEntryTypes}") {
			AssertTextEquals.assertPartialText(
				key_menuItem = "${assetEntryType}",
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = "${assetEntryType}");
		}

		IFrame.selectTopFrame();
	}

	macro viewManualNoAssetsMessagePG {
		AssertTextEquals(
			key_widgetName = "Asset Publisher",
			locator1 = "Message#INFO_SPECIFIC_WIDGET",
			value1 = "There are no results.");
	}

	macro viewMultipleDDLRecordsViaAP {
		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_1",
			value1 = "${ddlRecordFieldData1}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_2",
			value1 = "${ddlRecordFieldData2}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_3",
			value1 = "${ddlRecordFieldData3}");
	}

	macro viewMultipleSiteScopesAddDropdowns {
		var key_siteScope = "${siteName1}";

		MouseOver.mouseOverNotVisible(locator1 = "AP#ADD_ASSET_PLUS_ICON");

		Click(locator1 = "AP#ADD_ASSET_PLUS_ICON");

		AssertClick(
			locator1 = "AP#ADD_ASSET_SCOPED",
			value1 = "Add Content (Select Scope and Type)");

		Select(
			locator1 = "Select#SCOPE",
			value1 = "${siteName1}");

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = "${siteName1}");

		Select(
			locator1 = "Select#SCOPE",
			value1 = "${siteName2}");

		AssertSelectedLabel(
			locator1 = "Select#SCOPE",
			value1 = "${siteName2}");
	}

	macro viewNoEditLinkPG {
		var key_assetTitle = "${entryTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${entryTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${entryContent}");

		Click(locator1 = "AP#ASSET_ABSTRACT_EDIT");

		AssertElementNotPresent(locator1 = "AP#ASSET_EDIT");
	}

	macro viewPaginatedAssetsPG {
		var key_pageMod = "${pageMod}";
		var key_pageNumber = "${pageNumber}";
		var key_paginationNumber = "${paginationNumber}";

		AssertTextEquals(
			locator1 = "Pagination#PARTICULAR_PAGE",
			value1 = "Page ${pageNumber}");

		AssertTextEquals.assertPartialText(
			locator1 = "Pagination#VARIABLE_ITEMS_PER_PAGE",
			value1 = "${paginationNumber} Items per Page");

		AssertTextEquals(
			locator1 = "Pagination#VARIABLE_TOTAL_ITEMS",
			value1 = "Showing ${key_pageMod} results.");

		if ("${nextPageClick}" == "true") {
			AssertClick(
				locator1 = "Pagination#NEXT_LINK",
				value1 = "Next");
		}
	}

	macro viewPG {
		var key_assetContent = "${assetContent}";
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${assetContent}");

		AssertTextEquals.assertPartialText(
			locator1 = "APAsset#ASSET_CONTENT",
			value1 = "${assetContent}");

		AssertClick(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}");

		if (isSet(assetPriority)) {
			var key_assetPriority = "${assetPriority}";

			AssertTextEquals.assertPartialText(
				locator1 = "AP#METADATA_PRIORITY",
				value1 = "${assetPriority}");
		}

		if (isSet(relatedAssetTitles)) {
			AssetPublisherPortlet.viewAssetRelatedAssets(relatedAssetTitles = "${relatedAssetTitles}");
		}

		if (isSet(relatedAssetTitleHidden)) {
			AssertTextEquals(
				locator1 = "AssetRelatedAssets#HEADER",
				value1 = "Related Assets:");

			AssertTextNotPresent(value1 = "${relatedAssetTitleHidden}");
		}

		if (isSet(tagName)) {
			AssertTextEquals(
				locator1 = "AP#METADATA_TAGS",
				value1 = "${tagName}");
		}
	}

	macro viewPlusIconNotPresentPG {
		AssertElementNotPresent(locator1 = "AP#ADD_ASSET_PLUS_ICON");
	}

	macro viewReadMoreLinkNotPresentPG {
		AssertTextNotPresent(
			locator1 = "Link#READ_MORE",
			value1 = "Read More");
	}

	macro viewRestoredSetupPG {
		AssetPublisherPortlet.gotoConfigurationPG(portletName = "${portletName}");

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Asset Entries");

		AssertTextEquals(
			locator1 = "APConfigurationManual#ASSET_SELECTION_MANUAL_NONE",
			value1 = "None");

		SelectFrameTop();
	}

	macro viewSelectedPG {
		Portlet.clickPortletPlusIconPG(portletName = "Asset Publisher");

		AssertTextEquals(
			key_menuItem = "${selectedAsset}",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "${selectedAsset}");

		Click(locator1 = "//body");

		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Asset Selection");

		Panel.expandPanel(panel = "Source");

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAssetConfiguration}");

		if (isSet(assetSubtypeConfiguration)) {
			AssertSelectedLabel(
				locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
				value1 = "${assetSubtypeConfiguration}");
		}

		SelectFrameTop();
	}

	macro viewTagFocusPG {
		for (var assetTitle : list "${assetTitleList}") {
			var key_assetTitle = "${assetTitle}";

			AssertTextEquals(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = "${assetTitle}");
		}

		if (isSet(nonTaggedAsset)) {
			var key_assetTitle = "${nonTaggedAsset}";

			AssertTextNotPresent(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = "${nonTaggedAsset}");
		}
	}

	macro viewVideoThumbnail {
		AssertVisible(
			key_thumbnailName = "${thumbnailName}",
			locator1 = "AP#ASSET_ABSTRACT_DETAIL_EXTERNAL_VIDEO_THUMBNAIL");
	}

}