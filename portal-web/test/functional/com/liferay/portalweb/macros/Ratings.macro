definition {

	macro _openToConfigInSiteSettings {
		var baseURL = PropsUtil.get("portal.url");

		if ("${portlet}" == "Ratings") {
			var portletKey = "site-configuration-ratings";
		}

		Open(locator1 = "${baseURL}/group/${siteURLKey}/~/control_panel/manage/-/site/settings?_com_liferay_site_admin_web_portlet_SiteSettingsPortlet_mvcRenderCommandName=%2Fconfiguration_admin%2Fview_configuration_screen&_com_liferay_site_admin_web_portlet_SiteSettingsPortlet_configurationScreenKey=${portletKey}");
	}

	macro configureRatingType {
		if (isSet(siteURLKey)) {
			Ratings._openToConfigInSiteSettings(
				portlet = "${portlet}",
				siteURLKey = "${siteURLKey}");
		}
		else {
			if (isSet(siteName)) {
				Site.openSiteSettingsAdmin(siteURLKey = "${siteName}");
			}
			else {
				Site.openSiteSettingsAdmin(siteURLKey = "guest");
			}

			Click(
				key_itemName = "Community Tools",
				locator1 = "ListGroupItem#ITEM_TEXT");

			Navigator.gotoNavTab(navTab = "Ratings");
		}

		Select(
			key_applications = "${applications}",
			locator1 = "Select#APPLICATIONS_RATING",
			value1 = "${ratingType}");

		AssertClickNoError(
			locator1 = "Button#SAVE",
			value1 = "Save");

		AssertConfirm(value1 = "Existing ratings data values will be adapted to match the new ratings type even though it may not be accurate. Do you want to continue?");

		AssertSelectedLabel(
			key_applications = "${applications}",
			locator1 = "Select#APPLICATIONS_RATING",
			value1 = "${ratingType}");
	}

	macro openToConfigInInstanceSettings {
		var baseURL = PropsUtil.get("portal.url");

		if ("${portlet}" == "Ratings") {
			var portletKey = "social-ratings";
		}

		Open(locator1 = "${baseURL}/group/control_panel/manage?p_p_id=com_liferay_configuration_admin_web_portlet_InstanceSettingsPortlet&_com_liferay_configuration_admin_web_portlet_InstanceSettingsPortlet_mvcRenderCommandName=%2Fconfiguration_admin%2Fview_configuration_screen&_com_liferay_configuration_admin_web_portlet_InstanceSettingsPortlet_configurationScreenKey=${portletKey}");
	}

	macro rateLike {
		Click.clickNoMouseOver(locator1 = "Ratings#LIKE");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_LIKE_RESULT");
	}

	macro rateStackedStars {
		Click(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STACKED_STAR_COUNT");

		var count = "0";

		while ("${count}" != "${ratingStarCount}") {
			var index = ${count} + 1;

			AssertElementPresent(
				key_ratingStarCount = "${index}",
				locator1 = "Ratings#YOUR_RATING_STACKED_STAR_RESULT");

			var count = ${count} + 1;
		}
	}

	macro rateStar {
		Click(locator1 = "Ratings#YOUR_RATING_STAR");

		if (isSet(checkDeleteButton)) {
			AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_DELETE_DISABLE");
		}

		Click.clickNoMouseOver(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STAR_COUNT");

		AssertElementPresent(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STAR_RESULT");
	}

	macro rateStarCollectionItem {
		if (!(isSet(position))) {
			var position = "1";
		}

		Click(
			index = "${position}",
			locator1 = "Fragment#CONTENT_RATINGS_YOUR_RATING_STAR");

		if (isSet(checkDeleteButton)) {
			MenuItem.viewDisabled(menuItem = "Delete");
		}

		MenuItem.click(menuItem = "${ratingStarCount}");

		AssertTextEquals(
			index = "${position}",
			locator1 = "Fragment#CONTENT_RATINGS_YOUR_RATING_STAR_RESULT",
			value1 = "${ratingStarCount}");
	}

	macro rateStarSpecificAsset {
		Click(
			key_assetTitle = "${assetTitle}",
			locator1 = "Ratings#YOUR_RATING_STAR_SPECIFIC_ASSET");

		if (isSet(checkDeleteButton)) {
			AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_DELETE_DISABLE");
		}

		if ("${ratingStarCount}" == "1") {
			var ratingStar = "1 star";
		}
		else {
			var ratingStar = "${ratingStarCount} stars";
		}

		Click(
			key_ratingStar = "${ratingStar}",
			locator1 = "Ratings#YOUR_RATING_STAR_COUNT_ANY");

		AssertElementPresent(
			key_assetTitle = "${assetTitle}",
			key_ratingStar = "${ratingStar}",
			locator1 = "Ratings#YOUR_RATING_STAR_RESULT_SPECIFIC_ASSET");
	}

	macro rateThumb {
		if (isSet(blogCommentRating)) {
			Click.javaScriptClick(
				key_ratingResult = "${ratingResult}",
				locator1 = "Ratings#COMMENT_RATING_THUMB");
		}
		else if (isSet(blogRating)) {
			Click.clickNoMouseOver(
				key_ratingResult = "${ratingResult}",
				locator1 = "Ratings#THUMB");
		}
		else if (isSet(commentRating)) {
			Click.clickNoMouseOver(
				key_ratingResult = "${ratingResult}",
				locator1 = "Ratings#COMMENT_RATING_THUMB");
		}
		else if (isSet(replyRating)) {
			Click.javaScriptClick(
				key_ratingResult = "${ratingResult}",
				key_threadSubject = "${threadSubject}",
				locator1 = "Ratings#REPLY_RATING_THUMB");
		}
		else {
			Click.javaScriptClick(
				key_ratingResult = "${ratingResult}",
				locator1 = "Ratings#THUMB");
		}
	}

	macro revokeStackedStarsRating {
		Click(locator1 = "Icon#DELETE");

		AssertElementNotPresent(locator1 = "Icon#DELETE");
	}

	macro revokeStarsRating {
		Click(locator1 = "Ratings#YOUR_RATING_STAR");

		Click.clickNoMouseOver(locator1 = "Ratings#YOUR_RATING_STAR_DELETE");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY");
	}

	macro viewDefault {
		AssertTextEquals(
			locator1 = "Ratings#AVERAGE_STAR_RESULT",
			value1 = "0.0");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY");
	}

	macro viewDisabledRatings {
		for (var text : list "${ratingTypes}") {
			AssertElementPresent(
				key_text = "${text}",
				locator1 = "Ratings#ANY_DISABLED");
		}
	}

	macro viewNoRateStackedStar {
		for (var ratingStarCount : list "1,2,3,4,5") {
			AssertElementNotPresent(
				key_ratingStarCount = "${ratingStarCount}",
				locator1 = "Ratings#YOUR_RATING_STACKED_STAR_RESULT");
		}

		AssertElementPresent(
			key_averageStarCount = "${averageStarCount}",
			locator1 = "Ratings#AVERAGE_STACKED_STAR_RESULT");
	}

	macro viewRateLike {
		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_LIKE_RESULT");

		AssertTextEquals(
			locator1 = "Ratings#YOUR_RATING_LIKE_COUNT",
			value1 = "${ratingLikeCount}");
	}

	macro viewRateStackedStar {
		var count = "0";

		while ("${count}" != "${ratingStarCount}") {
			var index = ${count} + 1;

			AssertElementPresent(
				key_ratingStarCount = "${index}",
				locator1 = "Ratings#YOUR_RATING_STACKED_STAR_RESULT");

			var count = ${count} + 1;
		}

		AssertElementPresent(
			key_averageStarCount = "${averageStarCount}",
			locator1 = "Ratings#AVERAGE_STACKED_STAR_RESULT");
	}

	macro viewRateStar {
		AssertElementPresent(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STAR_RESULT");

		AssertTextEquals(
			key_ratingStarCount = "${ratingStarCount}",
			locator1 = "Ratings#YOUR_RATING_STAR_RESULT_COUNT",
			value1 = "${ratingStarCount}");

		AssertTextEquals.assertPartialText(
			locator1 = "Ratings#AVERAGE_STAR_RESULT",
			value1 = "${averageRatingStarCount}");
	}

	macro viewRateStarReadOnly {
		AssertElementNotPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_DISABLE");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR");
	}

	macro viewRateThumb {
		if (isSet(ratingResult)) {
			if (isSet(commentRating)) {
				AssertTextEquals(
					key_ratingResult = "${ratingResult}",
					locator1 = "Ratings#COMMENT_RATING_THUMB",
					value1 = "${voteCount}");
			}
			else {
				AssertTextEquals(
					key_ratingResult = "${ratingResult}",
					locator1 = "Ratings#THUMB",
					value1 = "${voteCount}");
			}
		}

		if (isSet(toolTip)) {
			MouseOver(
				key_ratingResult = "${ratingResult}",
				locator1 = "Ratings#THUMB");

			AssertTextEquals.assertPartialText(
				locator1 = "Message#TOOLTIP",
				value1 = "${ratingResult}");
		}
	}

}