definition {

	macro openAuditAdmin {
		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		Open(locator1 = "${baseURL}/group/control_panel/manage?p_p_id=com_liferay_portal_security_audit_web_portlet_AuditPortlet");
	}

	macro searchCP {
		if ("${searchTerm}" == "${resourceAction}") {
			var reportFieldKey = "RESOURCE_ACTION";
		}
		else if ("${searchTerm}" == "${resourceId}") {
			var reportFieldKey = "RESOURCE_ID";
		}
		else if ("${searchTerm}" == "${resourceName}") {
			var reportFieldKey = "RESOURCE_NAME";
		}
		else if ("${searchTerm}" == "${userId}") {
			var reportFieldKey = "USER_ID";
		}
		else if ("${searchTerm}" == "${userName}") {
			var reportFieldKey = "USER_NAME";
		}

		Click(locator1 = "Icon#ADVANCED_SEARCH");

		Select(
			locator1 = "AuditReports#ADVANCED_SEARCH_MATCH_SELECT",
			value1 = "${match}");

		Type(
			locator1 = "AuditReports#ADVANCED_SEARCH_${reportFieldKey}_FIELD",
			value1 = "${searchTerm}");

		AssertClick(
			locator1 = "Button#SEARCH",
			value1 = "Search");

		Click(locator1 = "Icon#ADVANCED_SEARCH");

		// Workaround for LPS-148998

		while (IsElementPresent(locator1 = "Message#INFO")) {
			Navigator.openURL();

			ApplicationsMenu.gotoPortlet(
				category = "Security",
				panel = "Control Panel",
				portlet = "Audit");

			Click(locator1 = "Icon#ADVANCED_SEARCH");

			Type(
				locator1 = "AuditReports#ADVANCED_SEARCH_${reportFieldKey}_FIELD",
				value1 = "${searchTerm}");

			AssertClick(
				locator1 = "Button#SEARCH",
				value1 = "Search");
		}

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_${reportFieldKey}_1",
			value1 = "${searchTerm}");
	}

	macro searchViaKeywords {
		AssertElementPresent(locator1 = "TextInput#SITE_SEARCH_KEYWORDS");

		Type(
			locator1 = "TextInput#SITE_SEARCH_KEYWORDS",
			value1 = "${searchTerm}");

		Click(locator1 = "Button#SUBMIT");

		AssertElementPresent(
			key_resourceAction = "${searchTerm}",
			key_resourceName = "${resourceName}",
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_NAME");
	}

	macro viewAuditDetails {
		var key_resourceAction = "${resourceAction}";
		var key_resourceName = "${resourceName}";

		AssertClick(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "${resourceAction}");

		AssertTextEquals.assertPartialText(
			locator1 = "AuditReports#REPORTS_DETAIL_RESOURCE_NAME",
			value1 = "${resourceName}");

		AssertTextEquals.assertPartialText(
			locator1 = "AuditReports#REPORTS_DETAIL_RESOURCE_ACTION",
			value1 = "${resourceAction}");

		AssertTextEquals.assertPartialText(
			locator1 = "AuditReports#REPORTS_DETAIL_USER_NAME",
			value1 = "${userName}");

		AssertTextEquals.assertPartialText(
			locator1 = "AuditReports#REPORTS_DETAIL_ADDITIONAL_INFORMATION",
			value1 = "${additionalInformation}");

		if (isSet(clientIp)) {
			AssertTextEquals.assertPartialText(
				locator1 = "AuditReports#REPORTS_DETAIL_CLIENT_IP",
				value1 = "${clientIp}");
		}
	}

}