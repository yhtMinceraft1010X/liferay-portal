definition {

	macro checkFacet {
		FormFields.enableCheckbox(fieldName = "${facetValueName}");
	}

	macro checkFacetAndViewURL {
		SearchFacetPortlet.checkFacet(facetValueName = "${facetValueName}");

		var searchURL = SearchFacetPortlet.generateFacetCheckedURL(
			facetClass = "${facetClass}",
			facetValue = "${facetValue}",
			facetValueName = "${facetValueName}",
			searchPage = "${searchPage}",
			searchTerm = "${searchTerm}",
			searchURL = "${searchURL}");

		AssertLocation(value1 = "${searchURL}");

		return "${searchURL}";
	}

	macro clearAllFacetsAndViewURL {
		while (IsElementPresent(locator1 = "SearchResults#FACET_PORTLET_CLEAR_GENERIC")) {
			var facetClearClass = selenium.getText("SearchResults#FACET_PORTLET_CLEAR_PANEL_TITLE");

			var searchURL = SearchFacetPortlet.clearFacetAndViewURL(
				facetClass = "${facetClearClass}",
				searchURL = "${searchURL}");
		}

		return "${searchURL}";
	}

	macro clearFacet {
		if (isSet(facetClass)) {
			var facetClass = StringUtil.toLowerCase("${facetClass}");
			var key_facetClass = "${facetClass}_facet";

			AssertClick.assertPartialTextClickAt(
				key_facetClass = "${key_facetClass}",
				locator1 = "SearchResults#FACET_PORTLET_CLEAR_SPECIFIC",
				value1 = "Clear");
		}
		else {
			AssertClick.assertPartialTextClickAt(
				locator1 = "SearchResults#FACET_PORTLET_CLEAR_GENERIC",
				value1 = "Clear");
		}
	}

	macro clearFacetAndViewURL {
		if (isSet(facetClass)) {
			SearchFacetPortlet.clearFacet(facetClass = "${facetClass}");

			var searchURL = SearchFacetPortlet.generateFacetClearedURL(
				facetClass = "${facetClass}",
				searchURL = "${searchURL}");

			AssertLocation(value1 = "${searchURL}");

			return "${searchURL}";
		}
		else {
			SearchFacetPortlet.clearFacet();
		}
	}

	macro configureCustomFacet {
		Portlet.gotoPortletOptions(
			portletName = "Custom Facet",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if (isSet(aggregationField)) {
			Type(
				locator1 = "SearchResults#CUSTOM_FACET_CONFIG_AGGREGATION_FIELD",
				value1 = "${aggregationField}");
		}

		if (isSet(customParameterName)) {
			Type(
				key_fieldLabel = "Custom Parameter Name",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "${customParameterName}");
		}

		PortletEntry.save();

		IFrame.closeFrame();
	}

	macro generateFacetCheckedURL {
		if (!(isSet(searchURL))) {
			var searchURL = SearchPortlets.getSearchTermURL(
				searchPage = "${searchPage}",
				searchTerm = "${searchTerm}");
		}

		if ("${facetClass}" == "type") {
			var facetValue = SearchFacetPortlet.getFacetTypeValue(facetTypeValueName = "${facetValueName}");
		}
		else if (!(isSet(facetValue))) {
			var facetValue = "${facetValueName}";
		}

		var searchURLList = StringUtil.replace("${searchURL}", "&", ",");
		var facetValue = StringUtil.replace("${facetValue}", " ", "%20");
		var facetValueList = "${facetValue}";

		for (var facetKeyValuePair : list "${searchURLList}") {
			if (contains("${facetKeyValuePair}", "${facetClass}")) {
				var facetKeyValue = StringUtil.stripBetween("${facetKeyValuePair}", "${facetClass}", "=");
				var facetValueList = StringUtil.add("${facetValueList}", "${facetKeyValue}");
				var searchURL = StringUtil.stripBetween("${searchURL}", "&${facetClass}", "${facetKeyValue}");
				var facetClassFound = "true";
			}
		}

		if ("${facetClassFound}" == "true") {
			var facetValueList = RegexUtil.replace("${facetValueList}", "(.*),$", "1");
			var facetValueList = ListUtil.sort("${facetValueList}");

			for (var facetValueListValue : list "${facetValueList}") {
				var searchURL = "${searchURL}&${facetClass}=${facetValueListValue}";
			}
		}
		else {
			var searchURL = "${searchURL}&${facetClass}=${facetValue}";
		}

		return "${searchURL}";
	}

	macro generateFacetClearedURL {
		var facetClass = StringUtil.toLowerCase("${facetClass}");
		var beforeFacetGroup = RegexUtil.replace("${searchURL}", "^(.*?)((?:&${facetClass}[^&]+)+)(.*)", "1");
		var afterFacetGroup = RegexUtil.replace("${searchURL}", "^(.*?)((?:&${facetClass}[^&]+)+)(.*)", "3");
		var searchURL = "${beforeFacetGroup}${afterFacetGroup}";

		return "${searchURL}";
	}

	macro generateFacetUncheckedURL {
		if ("${facetClass}" == "type") {
			var facetValue = SearchFacetPortlet.getFacetTypeValue(facetTypeValueName = "${facetValueName}");
		}
		else if (!(isSet(facetValue))) {
			var facetValue = "${facetValueName}";
		}

		var beforeFacetGroup = RegexUtil.replace("${searchURL}", "^(.*?)((?:&${facetClass}[^&]+)+)(.*)", "1");
		var facetGroup = RegexUtil.replace("${searchURL}", "^(.*?)((?:&${facetClass}[^&]+)+)(.*)", "2");
		var afterFacetGroup = RegexUtil.replace("${searchURL}", "^(.*?)((?:&${facetClass}[^&]+)+)(.*)", "3");
		var facetValue = StringUtil.replace("${facetValue}", " ", "%20");
		var facetGroupList = "${facetGroup}";

		while ("${facetValueFound}" != "true") {
			var facetKeyValuePair = RegexUtil.replace("${facetGroupList}", "(&[^&]+)(.*)", "1");

			if (contains("${facetKeyValuePair}", "${facetValue}")) {
				var facetGroup = StringUtil.replaceFirst("${facetGroup}", "${facetKeyValuePair}", "");
				var facetValueFound = "true";
			}
			else {
				var facetGroupList = StringUtil.replaceFirst("${facetGroupList}", "${facetKeyValuePair}", "");
			}
		}

		var searchURL = "${beforeFacetGroup}${afterFacetGroup}${facetGroup}";

		return "${searchURL}";
	}

	macro getFacetTypeValue {
		if (contains("${facetTypeValueName}", "Blogs")) {
			var facetTypeValue = "com.liferay.blogs.model.BlogsEntry";
			var facetValueFound = "true";
		}

		if (contains("${facetTypeValueName}", "Document")) {
			var facetTypeValue = "com.liferay.document.library.kernel.model.DLFileEntry";
			var facetValueFound = "true";
		}

		if (contains("${facetTypeValueName}", "Web Content Article")) {
			var facetTypeValue = "com.liferay.journal.model.JournalArticle";
			var facetValueFound = "true";
		}

		if (contains("${facetTypeValueName}", "Web Content Folder")) {
			var facetTypeValue = "com.liferay.journal.model.JournalArticle";
			var facetValueFound = "true";
		}

		if ("${facetValueFound}" != "true") {
			fail("Facet Type value name has not been set correctly.");
		}

		return "${facetTypeValue}";
	}

	macro moveAssetTypesToAvailable {
		Portlet.gotoPortletOptions(
			portletName = "Type Facet",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		for (var assetType : list "${assetType}") {
			AssertClick(
				locator1 = "Search#TYPE_FACET_CURRENT_ASSET_TYPE",
				value1 = "${assetType}");

			Click(locator1 = "Button#MOVE_CURRENT_TO_AVAILABLE");

			AssertTextEquals.assertPartialText(
				locator1 = "Search#TYPE_FACET_AVAILABLE_ASSET_TYPE",
				value1 = "${assetType}");
		}

		PortletEntry.save();

		IFrame.closeFrame();
	}

	macro uncheckFacet {
		FormFields.disableCheckbox(fieldName = "${facetValueName}");
	}

	macro uncheckFacetAndViewURL {
		SearchFacetPortlet.uncheckFacet(facetValueName = "${facetValueName}");

		var searchURL = SearchFacetPortlet.generateFacetUncheckedURL(
			facetClass = "${facetClass}",
			facetValue = "${facetValue}",
			facetValueName = "${facetValueName}",
			searchURL = "${searchURL}");

		AssertLocation(value1 = "${searchURL}");

		return "${searchURL}";
	}

	macro updateFacetConfiguration {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration");

		WaitForLiferayEvent.initializeLiferayEventLog();

		SelectFrameTop();

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if (isSet(displayTemplate)) {
			Select(
				key_fieldLabel = "Display Template",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${displayTemplate}");
		}

		if (isSet(parameterName)) {
			FormFields.editText(
				fieldName = "parameterName",
				fieldValue = "${parameterName}");
		}

		if (isSet(maxTerms)) {
			FormFields.editText(
				fieldName = "maxTerms",
				fieldValue = "${maxTerms}");
		}

		if (isSet(frequencyThreshold)) {
			FormFields.editText(
				fieldName = "frequencyThreshold",
				fieldValue = "${frequencyThreshold}");
		}

		if ("${displayFrequencies}" == "disable") {
			FormFields.disableCheckbox(fieldName = "frequenciesVisible");
		}

		PortletEntry.save();

		IFrame.closeFrame();
	}

}