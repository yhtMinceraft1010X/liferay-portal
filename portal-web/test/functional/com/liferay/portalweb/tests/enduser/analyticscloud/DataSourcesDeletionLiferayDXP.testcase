@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8154 | Test Summary: Delete a Liferay DXP data source and ensure contacts and ensure analytics events are no longer being synced"
	@ignore = "true"
	@priority = "5"
	test DeleteLiferayDXPDataSourceEnsureContactsAndEventsNoBeingSynced {

		// AC Bug ticket: LRAC-10534

		ACUtils.addSiteAndPage();

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		var itemName = StringUtil.replace("${propertyName}", " Combined Property", "");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		ACUtils.launchAC();

		ACSettings.deleteDataSource(dataSourceName = "${itemName}");

		ACNavigation.exitSettings();

		ACNavigation.goToSettings();

		ACUtils.assertItemsNameNotPresent(itemList = "${itemName}");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACTimeFilter.clickTimeFilterButton(cardName = "${propertyName} Activities");

		ACTimeFilter.setLast24Hours();

		AssertElementNotPresent(
			index = "1",
			locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_CHART_RECHARTS_BAR");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Web Content");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		AssertElementNotPresent(
			key_nameList = "Web Content AC Title",
			locator1 = "ACUtils#NAME_LIST");
	}

}