@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Fragments";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page Name",
				type = "content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-130453. Display video from Documents and Media in External Video fragment."
	@priority = "5"
	@uitest
	test DisplayVideoFromDocumentsAndMediaInExternalVideo {
		property portal.acceptance = "true";

		task ("Add an external video shortcut") {
			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

			VideoShortcut.addCP(
				videoShortcutTitle = "Liferay Digital Experience Platform",
				videoURL = "https://www.youtube.com/watch?v=HOdbzGCI5ME");
		}

		task ("Add an External Video fragment to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Content Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "External Video");
		}

		task ("Select a video from Documents and Media in External Video") {
			PageEditor.gotoConfiguration(fragmentName = "External Video");

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				key_fieldLabel = "Video",
				key_text = "plus",
				locator1 = "Icon#ANY_ITEM_SELECTOR");

			ItemSelector.addVideoFromDM(
				navTab = "Documents and Media",
				videoShortcutTitle = "Liferay Digital Experience Platform");
		}

		task ("View the video displayed in External Video") {
			WaitForElementPresent(locator1 = "YoutubePortlet#VIDEO_IFRAME");

			YoutubePortlet.assertVideoTitle(videoTitle = "Liferay Digital Experience Platform");
		}

		task ("View the video displayed in Preview modal") {
			PageEditor.openPreviewMode();

			WaitForElementPresent(locator1 = "YoutubePortlet#VIDEO_IFRAME");

			YoutubePortlet.assertVideoTitle(videoTitle = "Liferay Digital Experience Platform");

			IFrame.closeFrame();

			WaitForElementPresent(locator1 = "YoutubePortlet#VIDEO_IFRAME");
		}

		task ("View the selected video name is shown in item selector input") {
			AssertTextEquals(
				key_fieldLabel = "Video",
				locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT",
				value1 = "Liferay Digital Experience Platform");

			PageEditor.clickPublish();
		}

		task ("View the video displayed in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Content Page Name",
				siteName = "Test Site Name");

			YoutubePortlet.assertVideoTitle(videoTitle = "Liferay Digital Experience Platform");
		}
	}

	@description = "This is a test for LPS-130453. Display video from URL in External Video fragment."
	@priority = "5"
	@uitest
	test DisplayVideoFromURLInExternalVideo {
		property portal.acceptance = "true";

		task ("Add an External Video fragment to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Content Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "External Video");
		}

		task ("Select a video from URL in External Video") {
			PageEditor.gotoConfiguration(fragmentName = "External Video");

			WaitForLiferayEvent.initializeLiferayEventLog();

			Click(
				key_fieldLabel = "Video",
				key_text = "plus",
				locator1 = "Icon#ANY_ITEM_SELECTOR");

			ItemSelector.addVideoFromURL(
				navTab = "URL",
				videoSourceURL = "https://www.youtube.com/watch?v=HOdbzGCI5ME");
		}

		task ("View the video displayed in External Video") {
			WaitForElementPresent(locator1 = "YoutubePortlet#VIDEO_IFRAME");

			YoutubePortlet.assertVideoTitle(videoTitle = "Liferay Digital Experience Platform");
		}

		task ("View the video displayed in Preview modal") {
			PageEditor.openPreviewMode();

			WaitForElementPresent(locator1 = "YoutubePortlet#VIDEO_IFRAME");

			YoutubePortlet.assertVideoTitle(videoTitle = "Liferay Digital Experience Platform");

			IFrame.closeFrame();

			WaitForElementPresent(locator1 = "YoutubePortlet#VIDEO_IFRAME");
		}

		task ("View the selected video name is shown in item selector input") {
			AssertTextEquals(
				key_fieldLabel = "Video",
				locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT",
				value1 = "Liferay Digital Experience Platform");

			PageEditor.clickPublish();
		}

		task ("View the video displayed in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Content Page Name",
				siteName = "Test Site Name");

			YoutubePortlet.assertVideoTitle(videoTitle = "Liferay Digital Experience Platform");
		}
	}

	@description = "This is a test for LPS-151368. It checks that the video URL is saved when adding external video shortcut in non-default language."
	@priority = "4"
	test VideoURLIsSavedWhenUsingNonDefaultLanguage {
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/ja");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		VideoShortcut.addCP(
			localizedDocumentTypeName = "外部動画のショートカット",
			localizedPublish = "公開",
			localizedVideoURL = "動画URL",
			videoShortcutTitle = "DM Title",
			videoURL = "https://www.facebook.com/Cristiano/videos/1710977485745946");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "編集",
			rowEntry = "DM Title");

		AssertTextEquals(
			key_text = "動画URL",
			locator1 = "TextInput#ANY",
			value1 = "https://www.facebook.com/Cristiano/videos/1710977485745946");
	}

}