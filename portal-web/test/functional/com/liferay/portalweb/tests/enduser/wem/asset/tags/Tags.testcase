@component-name = "portal-tags"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Tags";
	property testray.main.component.name = "Tags";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "The user cannot add a tag with an empty name."
	@priority = "4"
	@uitest
	test CannotAddTagWithoutName {
		task ("View cannot add a tag wih an empty name") {
			Tag.openTagsAdmin(siteURLKey = "test-site-name");

			Tag.addWithNullTitleCP(tagName = " ");
		}

		task ("View empty message on tags admin") {
			Tag.openTagsAdmin(siteURLKey = "test-site-name");

			Portlet.viewEmptyMessage(message = "There are no tags.");
		}
	}

	@description = "View cannot merge single tag on tags admin."
	@priority = "4"
	test CannotMergeSingleTarget {
		task ("Add a tag") {
			JSONAssettag.addTag(
				groupName = "Test Site Name",
				tagName = "tagname");
		}

		task ("View cannot merge single tag") {
			Tag.openTagsAdmin(siteURLKey = "test-site-name");

			Tag.gotoMerge(
				mergeMethod = "menuItem",
				tagName = "tagname");

			Tag.mergeSingleTagWarning();
		}
	}

	@description = "The user can delete multiple tags via Toolbar management."
	@priority = "4"
	test DeleteMultipleTagsViaToolbar {
		task ("Add three tags") {
			for (var i : list "1,2,3") {
				JSONAssettag.addTag(
					groupName = "Test Site Name",
					tagName = "tagname${i}");
			}
		}

		task ("View tags are shown in tags admin") {
			Tag.openTagsAdmin(siteURLKey = "Test Site Name");

			Tag.viewCP(tagNameList = "tagname1,tagname2,tagname3");
		}

		task ("Delete tags via Toolbar management") {
			Tag.deleteByIconCP(tagNameList = "tagname1,tagname2,tagname3");
		}

		task ("View tags are not shown") {
			Portlet.viewEmptyMessage(message = "There are no tags.");
		}
	}

	@description = "The user can delete single tag via Toolbar management."
	@priority = "4"
	test DeleteSingleTagViaToolbar {
		task ("Add a tag") {
			JSONAssettag.addTag(
				groupName = "Test Site Name",
				tagName = "tagname");
		}

		task ("View tag is shown in tags admin") {
			Tag.openTagsAdmin(siteURLKey = "test-site-name");

			Tag.viewCP(tagNameList = "tagname");
		}

		task ("Delete tag via Toolbar management") {
			Tag.deleteByIconCP(tagNameList = "tagname");
		}

		task ("View tag is not shown") {
			Portlet.viewEmptyMessage(message = "There are no tags.");
		}
	}

	@description = "The user can delete a single tag via menu item."
	@priority = "5"
	test DeleteTagViaMenu {
		property portal.acceptance = "true";

		task ("Add a tag") {
			JSONAssettag.addTag(
				groupName = "Test Site Name",
				tagName = "tagname");
		}

		task ("View tag is shown in tags admin") {
			Tag.openTagsAdmin(siteURLKey = "test-site-name");

			Tag.viewCP(tagNameList = "tagname");
		}

		task ("Delete tag via menu item") {
			Tag.deleteCP(tagNameList = "tagname");
		}

		task ("View tag is not shown") {
			Portlet.viewEmptyMessage(message = "There are no tags.");
		}
	}

	@description = "The user can edit the tag name."
	@priority = "5"
	test EditTag {
		property portal.acceptance = "true";

		task ("Add a tag") {
			JSONAssettag.addTag(
				groupName = "Test Site Name",
				tagName = "tagname1");
		}

		task ("View tag is shown in tags admin") {
			Tag.openTagsAdmin(siteURLKey = "test-site-name");

			Tag.viewCP(tagNameList = "tagname1");
		}

		task ("Edit tag name without save") {
			Tag.editCP(
				tagMenuName = "tagname1",
				tagNameEdit = "tagname2");
		}

		task ("View edited tag name is shown") {
			Tag.viewCP(tagNameList = "tagname2");
		}

		task ("View old tag name is not shown") {
			Tag.viewNotPresentCP(tagNameList = "tagname1");
		}
	}

	@description = "The edited tag name is not shown whether the change is not saved."
	@priority = "4"
	test EditTagWithoutSave {
		task ("Add a tag") {
			JSONAssettag.addTag(
				groupName = "Test Site Name",
				tagName = "tagname1");
		}

		task ("View tag is shown in tags admin") {
			Tag.openTagsAdmin(siteURLKey = "test-site-name");

			Tag.viewCP(tagNameList = "tagname1");
		}

		task ("Edit tag name without save") {
			Tag.cancelEditCP(
				tagMenuName = "tagname1",
				tagNameEdit = "tagname2");
		}

		task ("View original tag name is shown") {
			Tag.viewCP(tagNameList = "tagname1");
		}

		task ("View edited tag name is not shown") {
			Tag.viewNotPresentCP(tagNameList = "tagname2");
		}
	}

	@description = "The usar can select another tag to merge in Merge Tags section."
	@priority = "3"
	test MergeAdditionalTag {
		task ("Add six tags") {
			for (var i : list "1,2,3,4,5,6") {
				JSONAssettag.addTag(
					groupName = "Test Site Name",
					tagName = "tagname${i}");
			}
		}

		task ("View six tags are shown in tags admin") {
			Tag.openTagsAdmin(siteURLKey = "Test Site Name");

			Tag.viewCP(tagNameList = "tagname1,tagname2,tagname3,tagname4,tagname5,tagname6");
		}

		task ("Select first, third and fifth tag to merge") {
			Tag.gotoMerge(tagNameList = "tagname1,tagname3,tagname5");
		}

		task ("Select an additional tag to merge") {
			Tag.mergeTagsSelectAdditionalTags(tagNameList = "tagname6");
		}

		task ("Merge tags into fifth tag") {
			Tag.mergeTags(
				mergedTag = "tagname5",
				tagNameList = "tagname1,tagname3,tagname5,tagname6");
		}

		task ("View second, fourth and fifth tag are shown") {
			Tag.viewCP(tagNameList = "tagname2,tagname4,tagname5");
		}

		task ("View first, third and sixth tag are not shown") {
			Tag.viewNotPresentCP(tagNameList = "tagname1,tagname3,tagname6");
		}
	}

	@description = "The user can merge multiple tags."
	@priority = "4"
	test MergeMultipleTags {
		task ("Add three tags") {
			for (var i : list "1,2,3") {
				JSONAssettag.addTag(
					groupName = "Test Site Name",
					tagName = "tagname${i}");
			}
		}

		task ("View three tags are shown in tags admin") {
			Tag.openTagsAdmin(siteURLKey = "Test Site Name");

			Tag.viewCP(tagNameList = "tagname1,tagname2,tagname3");
		}

		task ("Merge second and third tag into first tag") {
			Tag.gotoMerge(tagNameList = "tagname1,tagname2,tagname3");

			Tag.mergeTags(
				mergedTag = "tagname1",
				tagNameList = "tagname1,tagname2,tagname3");
		}

		task ("View first tag is shown") {
			Tag.viewCP(tagNameList = "tagname1");
		}

		task ("View second and third tag are not shown") {
			Tag.viewNotPresentCP(tagNameList = "tagname2,tagname3");
		}
	}

	@description = "View display styles in tags admin."
	@priority = "4"
	test ToggleDisplayStyles {
		task ("Add a tag") {
			JSONAssettag.addTag(
				groupName = "Test Site Name",
				tagName = "tagname");
		}

		task ("View tag is shwon in list style") {
			Tag.openTagsAdmin(siteURLKey = "Test Site Name");

			LexiconEntry.changeDisplayStyle(displayStyle = "list");

			LexiconList.viewListEntryTitle(listEntry = "tagname");
		}

		task ("View tag is shown in table style") {
			LexiconEntry.changeDisplayStyle(displayStyle = "table");

			LexiconTable.viewTableEntryTitle(tableEntry = "tagname");
		}
	}

	@description = "This is a test for LPS-145292. The user could view new icons on dropdown menu of tags admin."
	@priority = "4"
	test ViewDropdownMenuIconsInTagsAdmin {
		task ("Given a Tags creator has a new tag") {
			JSONAssettag.addTag(
				groupName = "Test Site Name",
				tagName = "tagname");
		}

		task ("When the  Tags creator opens the dropdown menu of new tag") {
			Tag.openTagsAdmin(siteURLKey = "test-site-name");

			LexiconEntry.openEntryMenu(rowEntry = "tagname");
		}

		task ("Then the Tags creator can see the new icons on the dropdown menu") {
			DropdownMenuItem.viewIcon(iconList = "pencil,merge,trash");
		}

		task ("When the Tags creator opens the dropdown menu of management toolbar after selecting new tag") {
			ManagementBar.clickSelectAllCheckbox();

			Click(locator1 = "ManagementBar#MORE_ACTIONS_ELLIPSIS");
		}

		task ("Then the Tags creator can see the new icons on the dropdown menu") {
			DropdownMenuItem.viewIcon(iconList = "merge,trash");
		}
	}

	@description = "View pagination in tags admin."
	@priority = "4"
	test ViewTagsPagination {
		task ("Add twenty four tags") {
			var i = "1";

			while ("${i}" != "10") {
				JSONAssettag.addTag(
					groupName = "Test Site Name",
					tagName = "tagname0${i}");

				var i = ${i} + 1;
			}

			while ("${i}" != "26") {
				JSONAssettag.addTag(
					groupName = "Test Site Name",
					tagName = "tagname${i}");

				var i = ${i} + 1;
			}
		}

		task ("View pagination results for 20 entries") {
			Tag.openTagsAdmin(siteURLKey = "Test Site Name");

			AssertTextEquals.assertPartialText(
				locator1 = "Pagination#ITEMS_PER_PAGE_SELECT",
				value1 = "20 Entries");

			Pagination.viewResults(results = "Showing 1 to 20 of 24 entries.");
		}

		task ("Change the amount of items per page to 4") {
			Pagination.changePagination(itemsPerPage = "4");

			Pagination.viewResults(results = "Showing 1 to 4 of 24 entries.");
		}

		task ("Change the amount of items per page to 8") {
			Pagination.changePagination(itemsPerPage = "8");

			Pagination.viewResults(results = "Showing 1 to 8 of 24 entries.");
		}

		task ("Change the amount of items per page to 40") {
			Pagination.changePagination(itemsPerPage = "40");

			Pagination.viewResults(results = "Showing 1 to 24 of 24 entries.");
		}
	}

}