@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Sitemap";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "View private parend and child page via Site Map widget."
	@priority = "4"
	test DisplayPrivateParentAndChildPage {
		property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";

		task ("Add a parent private page") {
			JSONLayout.addPrivateLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");
		}

		task ("Add a child private page") {
			JSONLayout.addPrivateLayout(
				groupName = "Test Site Name",
				layoutName = "Child Page Name",
				parentLayoutName = "Test Page Name");
		}

		task ("Add a Site Map widget to private child page") {
			JSONLayout.addWidgetToPrivateLayout(
				groupName = "Test Site Name",
				layoutName = "Child Page Name",
				widgetName = "Site Map");
		}

		task ("View private pages are shown in Site Map") {
			Navigator.openPrivateSitePageURL(
				pageName = "Child Page Name",
				siteName = "Test Site Name");

			SiteMapPortlet.viewPageItem(pageNameList = "Test Page Name,Child Page Name");
		}
	}

}