@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Add a new user") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "ac@liferay.com");
		}

		task ("Create new pages as interest topics and add documents in each page") {
			var pageNameList = "vehicles,science,agriculture,delivery,information,technology";

			for (var pageName : list "${pageNameList}") {
				ACUtils.addPage(layoutName = "${pageName}");

				ACUtils.createDMAndAddToPage(
					dmDocumentTitle = "DM AC Title ${pageName}",
					layoutName = "${pageName}");
			}
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		JSONUser.tearDownNonAdminUsers();

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8620 | Test Summary: The list of pages for each interest topic is searchable"
	@ignore = "true"
	@priority = "4"
	test CanSearchListOfPagesForInterestTopic {

		// AC Refactor: Interests in the static segment takes too long to appear.
		// AC Refactor ticket: LRAC-9171

		var usernameList = "ac";
		var pageNameList = "vehicles,science,agriculture,delivery,information,technology";

		task ("Connect the DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

			var dataSourceName = StringUtil.replace("${propertyName}", " Combined Property", "");
		}

		task ("Login with new user and see the pages") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "${usernameList}@liferay.com",
				userLoginFullName = "${usernameList} ${usernameList}");

			for (var pageName : list "${pageNameList}") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Create a new static segment and add a member") {
			ACNavigation.goToSegments();

			ACSegments.createStaticSegment();

			ACUtils.setItemName(itemName = "Static Segment Test");

			ACSegments.addStaticMember(tableMember = "${usernameList} ${usernameList}");

			ACSegments.saveSegment();
		}

		task ("Go to interests tab") {
			ACNavigation.switchTab(tabName = "Interests");
		}

		task ("Go to a segment interest details page") {
			ACInterests.clickInterest(interestTopic = "liferay dxp");

			// This data takes too long to appear.

		}

		task ("Go to Active Pages tab") {
			ACInterests.switchTab(tabName = "Active Pages");
		}

		task ("Search Active Pages tab") {
			ACUtils.searchBar(searchItem = "DXP");
		}

		task ("View pages") {
			ACInterests.viewInterestPage(pageName = "vehicles - Site Name - ${dataSourceName}");

			ACInterests.viewInterestPage(pageName = "science - Site Name - ${dataSourceName}");

			ACInterests.viewInterestPage(pageName = "agriculture - Site Name - ${dataSourceName}");

			ACInterests.viewInterestPage(pageName = "delivery - Site Name - ${dataSourceName}");

			ACInterests.viewInterestPage(pageName = "information - Site Name - ${dataSourceName}");

			ACInterests.viewInterestPage(pageName = "technology - Site Name - ${dataSourceName}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8621 | Test Summary: Paginate Segment Profile in Interests tab"
	@ignore = "true"
	@priority = "3"
	test PaginateSegmentProfileInInterestsTab {

		// AC Refactor: Interests in the static segment takes too long to appear.
		// AC Refactor ticket: LRAC-9172

		var usernameList = "ac";
		var pageNameList = "vehicles,science,agriculture,delivery,information,technology";

		task ("Connect the DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Login with new user and see the pages") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "${usernameList}@liferay.com",
				userLoginFullName = "${usernameList} ${usernameList}");

			for (var pageName : list "${pageNameList}") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Create a static segment and add a member to it") {
			ACSegments.createStaticSegment();

			ACUtils.setItemName(itemName = "Static Segment Test");

			ACSegments.addStaticMember(tableMember = "${usernameList} ${usernameList}");

			ACSegments.saveSegment();
		}

		task ("Go to interests tab") {
			ACNavigation.switchTab(tabName = "Interests");

			// This data takes too long to appear.

		}

		task ("Change pagination to show 5 items per page and order by topic name") {
			ACUtils.changePagination(itemsPerPage = "5");

			ACInterests.clickOrderInterestsByTopicsLink();
		}

		task ("View various segment interests on page 1") {
			ACInterests.viewInterest(interestTopic = "agriculture");

			ACInterests.viewInterest(interestTopic = "delivery");

			ACInterests.viewInterest(interestTopic = "information");

			ACInterests.viewInterest(interestTopic = "science");

			ACInterests.viewInterest(interestTopic = "technology");
		}

		task ("Click next page") {
			ACUtils.checkAnyPage(pageNumber = "2");
		}

		task ("View the remaining segment interest in page 2") {
			ACInterests.viewInterest(interestTopic = "vehicles");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8619 | Test Summary: Each interest topic shows the pages that contribute to the interest"
	@ignore = "true"
	@priority = "5"
	test ViewInterestTopicShowsPagesContributeToInterest {

		// AC Refactor: Interests in the static segment takes too long to appear.
		// AC Refactor ticket: LRAC-9170

		var usernameList = "ac";
		var pageNameList = "vehicles,science,agriculture,delivery,information,technology";

		task ("Connect the DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

			var dataSourceName = StringUtil.replace("${propertyName}", " Combined Property", "");
		}

		task ("Login with new user and see the pages") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "${usernameList}@liferay.com",
				userLoginFullName = "${usernameList} ${usernameList}");

			for (var pageName : list "${pageNameList}") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Create a static segment and add a member to it") {
			ACSegments.createStaticSegment();

			ACUtils.setItemName(itemName = "Static Segment Test");

			ACSegments.addStaticMember(tableMember = "${usernameList} ${usernameList}");

			ACSegments.saveSegment();
		}

		task ("Go to interests tab then access each interest topic and see the pages related to it") {
			for (var interestTopic : list "${pageNameList}") {
				ACNavigation.switchTab(tabName = "Interests");

				// This data takes too long to appear.

				ACInterests.clickInterest(interestTopic = "${interestTopic}");

				ACInterests.switchTab(tabName = "Active Pages");

				ACInterests.viewInterestPage(pageName = "${interestTopic} - Site Name - ${dataSourceName}");
			}
		}
	}

}