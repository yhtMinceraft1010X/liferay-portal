@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Add a new user") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Connect the DXP to AC") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");

			JSONUser.tearDownNonAdminUsers();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8514 | Test Summary: Page Profile Visitor behavior card shows the number of unique visitors and views"
	@priority = "5"
	test ShowNumberOfUniqueVisitorsAndViews {
		property analytics.cloud.upstream = "false";

		task ("Create Blog to Add to Page") {
			ACUtils.createBlogsAndAddToPage();
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the blog page") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to Pages tab in Sites dashboard") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Pages");
		}

		task ("Select the Last 24 hours in time period") {
			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to page report entry") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", " ");

			ACNavigation.openItem(itemName = "Blogs AC Title - Site Name - ${dataSourceName}");
		}

		task ("Navigate to the Overview tab in Pages dashboard") {
			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("View the time period of Visitors Behavior chart is Last 24 hours") {
			ACTimeFilter.assertCurrentTimeFilterRange(
				cardName = "Visitors Behavior",
				timeFilterRange = "Last 24 hours");
		}

		task ("View the number of Unique Visitors in Visitors Behavior chart is 1") {
			ACCards.viewMetricValue(
				cardTitle = "Visitors Behavior",
				metricName = "Unique Visitors",
				metricValue = "1");
		}

		task ("View the number of Views in Visitors Behavior chart is 1") {
			ACCards.viewMetricValue(
				cardTitle = "Visitors Behavior",
				metricName = "Views",
				metricValue = "1");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8516 | Test Summary: Assert Sites Page Overview time filter to Custom Filter"
	@ignore = "true"
	@priority = "5"
	test TimeFilterByCustomRangeInPagesOverview {

		// AC Refactor: data doesn't appear on time and the test needs data from a past date
		// AC Refactor ticket: LRAC-8730

		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the site page") {
			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to Pages tab in Sites dashboard") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Pages");
		}

		task ("Select the Last 24 hours in time period") {
			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to page report entry") {
			ACNavigation.openItem(itemName = "AC Page - Site Name - Liferay DXP");
		}

		task ("Select the Custom Range in Visitors Behavior chart") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Visitors Behavior");

			ACTimeFilter.setCustomRange(
				endDay = "10",
				endMonth = "July",
				endYear = "2021",
				startDay = "10",
				startMonth = "October",
				startYear = "2020");
		}

		task ("View the number of Unique Visitors in Visitors Behavior chart is 0") {
			ACCards.viewMetricValue(
				cardTitle = "Visitors Behavior",
				metricName = "Unique Visitors",
				metricValue = "0");
		}

		task ("View the number of Views in Visitors Behavior chart is 0") {
			ACCards.viewMetricValue(
				cardTitle = "Visitors Behavior",
				metricName = "Views",
				metricValue = "0");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8517 | Test Summary: Assert Sites Page Overview time filter changes to 180 days"
	@ignore = "true"
	@priority = "5"
	test TimeFilterByLast180DaysInPagesOverview {

		// AC Refactor: data doesn't appear on time and the test needs data from a past date
		// AC Refactor ticket: LRAC-8731

		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the site page") {
			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to Pages tab in Sites dashboard") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Pages");
		}

		task ("Select the Last 24 hours in time period") {
			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to page report entry") {
			ACNavigation.openItem(itemName = "AC Page - Site Name - Liferay DXP");
		}

		task ("Select the Last 180 Days in Visitors Behavior chart") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Visitors Behavior");

			ACTimeFilter.setLast180Days();
		}

		task ("View the number of Unique Visitors in Visitors Behavior chart is 0") {
			ACCards.viewMetricValue(
				cardTitle = "Visitors Behavior",
				metricName = "Unique Visitors",
				metricValue = "0");
		}

		task ("View the number of Views in Visitors Behavior chart is 0") {
			ACCards.viewMetricValue(
				cardTitle = "Visitors Behavior",
				metricName = "Views",
				metricValue = "0");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8515 | Test Summary: Last Year time period filter in Page Overview"
	@ignore = "true"
	@priority = "5"
	test TimeFilterByLastYearInPagesOverview {

		// AC Refactor: data doesn't appear on time and the test needs data from a past date
		// AC Refactor ticket: LRAC-8729

		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the site page") {
			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to Pages tab in Sites dashboard") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Pages");
		}

		task ("Select the Last 24 hours in time period") {
			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to page report entry") {
			ACNavigation.openItem(itemName = "AC Page - Site Name - Liferay DXP");
		}

		task ("Select the Last Year in Visitors Behavior chart") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Visitors Behavior");

			ACTimeFilter.setLastYear();
		}

		task ("View the number of Unique Visitors in Visitors Behavior chart is 0") {
			ACCards.viewMetricValue(
				cardTitle = "Visitors Behavior",
				metricName = "Unique Visitors",
				metricValue = "0");
		}

		task ("View the number of Views in Visitors Behavior chart is 0") {
			ACCards.viewMetricValue(
				cardTitle = "Visitors Behavior",
				metricName = "Views",
				metricValue = "0");
		}
	}

}