@component-name = "portal-staging"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Staging";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONUser.tearDownNonAdminUsers();

			JSONOrganization.deleteOrganizationByName(organizationName = "Staging Organization Name");
		}
	}

	@priority = "3"
	test BlogsOrganizationWorkflowStaging {
		property test.name.skip.portal.instance = "PGStagingUsecase#BlogsOrganizationWorkflowStaging";

		Role.openRolesAdmin();

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			permissionNavigationKey = "SITE_ADMIN_CONTENT_BLOGS",
			permissionNavigationValue = "Blogs",
			roleTitle = "Organization User",
			roleType = "Organization");

		Role.openRolesAdmin();

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_PAGES_SITE_PAGES_RESOURCE_PERMISSIONS_SITE_MANAGE_PAGES_CHECKBOX",
			permissionDefinitionValue = "Manage Pages",
			permissionNavigationKey = "SITE_ADMIN_PAGES_SITE_PAGES",
			permissionNavigationValue = "Site Pages",
			roleTitle = "Organization User",
			roleType = "Organization");

		JSONOrganization.addOrganization(
			organizationName = "Staging Organization Name",
			organizationSite = "true");

		PagesAdmin.openPagesAdmin(siteURLKey = "Staging Organization Name");

		PagesAdmin.addPage(pageName = "Staging Test Page");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		User.openUsersAdmin();

		User.editPasswordCP(
			password = "password",
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Staging Organization Name",
			userEmailAddress = "userea@liferay.com");

		JSONUser.addUser(
			userEmailAddress = "usereacr@liferay.com",
			userFirstName = "userfncr",
			userLastName = "userlncr",
			userName = "userfncr userlncr",
			userScreenName = "usersncr");

		User.openUsersAdmin();

		User.editPasswordCP(
			password = "password",
			userEmailAddress = "usereacr@liferay.com",
			userScreenName = "usersncr");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Staging Organization Name",
			userEmailAddress = "usereacr@liferay.com");

		JSONGroup.assignGroupRoleToUser(
			groupName = "Staging Organization Name",
			roleTitle = "Organization Content Reviewer",
			userEmailAddress = "usereacr@liferay.com");

		JSONUser.addUser(
			userEmailAddress = "usereaoa@liferay.com",
			userFirstName = "userfnoa",
			userLastName = "userlnoa",
			userScreenName = "usersnoa");

		User.openUsersAdmin();

		User.editPasswordCP(
			password = "password",
			userEmailAddress = "usereaoa@liferay.com",
			userScreenName = "usersnoa");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Staging Organization Name",
			userEmailAddress = "usereaoa@liferay.com");

		JSONGroup.assignGroupRoleToUser(
			groupName = "Staging Organization Name",
			roleTitle = "Organization Administrator",
			userEmailAddress = "usereaoa@liferay.com");

		JSONStaging.enableLocalStaging(groupName = "Staging Organization Name");

		Workflow.openWorkflowAdmin(siteURLKey = "staging-organization-name-staging");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openStagingSiteURL(siteName = "Staging Organization Name");

		Portlet.addPG(
			pageName = "Staging Test Page",
			portletName = "Blogs");

		User.logoutPG();

		PagesAdmin.openPagesAdmin(siteURLKey = "Staging Organization Name");

		AssertElementNotPresent(
			key_portletName = "Blogs",
			locator1 = "Portlet#TITLE");

		User.loginPG(
			password = "test",
			userEmailAddress = "usereaoa@liferay.com");

		Navigator.openStagingSiteURL(siteName = "Staging Organization Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		User.logoutPG();

		Navigator.openSiteURL(siteName = "Staging Organization Name");

		AssertElementPresent(
			key_portletName = "Blogs",
			locator1 = "Portlet#TITLE");

		User.loginPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.openStagingSiteURL(siteName = "Staging Organization Name");

		BlogsEntry.addWithWorkflowPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutPG();

		PagesAdmin.openPagesAdmin(siteURLKey = "Staging Organization Name");

		AssertElementNotPresent(
			key_entryTitle = "Blogs Entry Title",
			locator1 = "BlogsEntry#TITLE");

		User.loginPG(
			password = "test",
			userEmailAddress = "usereacr@liferay.com");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		User.logoutPG();

		PagesAdmin.openPagesAdmin(siteURLKey = "Staging Organization Name");

		AssertElementNotPresent(
			key_entryTitle = "Blogs Entry Title",
			locator1 = "BlogsEntry#TITLE");

		User.loginPG(
			password = "test",
			userEmailAddress = "usereaoa@liferay.com");

		Navigator.openStagingSiteURL(siteName = "Staging Organization Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		User.logoutPG();

		Navigator.openSiteURL(siteName = "Staging Organization Name");

		AssertElementPresent(
			key_entryTitle = "Blogs Entry Title",
			locator1 = "BlogsEntry#TITLE");

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Role.openRolesAdmin();

		Role.removePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			permissionNavigationKey = "SITE_ADMIN_CONTENT_BLOGS",
			permissionNavigationValue = "Blogs",
			roleTitle = "Organization User",
			roleType = "Organization");
	}

}