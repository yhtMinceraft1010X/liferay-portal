@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Add a new user") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Connect the DXP to AC") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");

			JSONUser.tearDownNonAdminUsers();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8907 | Test Summary: Expand activity in individual overview"
	@priority = "3"
	test CanExpandActivityInIndividualOverview {
		property analytics.cloud.upstream = "false";

		task ("Create Blog to Add to Page") {
			ACUtils.createBlogsAndAddToPage();
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the blog page") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Known Individuals on the Individuals dashboard") {
			ACNavigation.goToIndividuals();

			ACIndividualsDashboard.goToKnownIndividualsTab();
		}

		task ("Navigate to the individuals page of new user") {
			ACUtils.searchBar(searchItem = "userfn userln");

			ACNavigation.openItem(itemName = "userfn userln");
		}

		task ("Select Last 24 hours time period in Individuals Events chart") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Individual Events");

			ACTimeFilter.setLast24Hours();
		}

		task ("Expand access timeline") {
			ACIndividualsDashboard.expandActivity(eventName = "pageViewed");

			AssertElementPresent(
				locator1 = "ACIndividualsDashboard#BASE_RESULTS_TIMELINE_ATTRIBUTES_TITLE",
				value1 = "Event Attributes");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8901 | Test Summary: Assert Individuals Overview time filter Custom Range"
	@ignore = "true"
	@priority = "5"
	test CanUseCustomRangeTimeFilterOnActiveIndividualsChart {

		// Tests with custom range are not possible to automate now. These cases will be automated on personas.

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Overview on the Individuals dashboard") {
			ACNavigation.goToIndividuals();

			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("Select a Custom Range time period in Active Individuals chart") {
			ACTimeFilter.setCustomRange(
				cardName = "Active Individuals",
				endDay = "13",
				endMonth = "July",
				endYear = "2020",
				startDay = "1",
				startMonth = "July",
				startYear = "2020");
		}

		task ("View the time period in Active Individuals chart is Jul 1, 2020 - Jul 13, 2020") {
			ACTimeFilter.assertCurrentTimeFilterRange(timeFilterRange = "Jul 1, 2020 - Jul 13, 2020");
		}

		task ("View the xAxis ticks start with Jul 1 and end with Jul 13") {
			ACCards.assertAxisTick(
				axis = "xAxis",
				cardName = "Active Individuals",
				tick = "Jul 1");

			ACCards.assertAxisTick(
				axis = "xAxis",
				cardName = "Active Individuals",
				index = "7",
				tick = "Jul 13");

			AssertElementNotPresent(
				index = "8",
				key_cardTitle = "Active Individuals",
				locator1 = "ACCards#RECHARTS_CARTESIAN_X_AXIS_TICK");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8909 | Test Summary: As a Business User, I should be able to change individual time filter to 180 days"
	@priority = "3"
	test CanUseLast180DaysTimeFilterOnActiveIndividualsChart {
		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Overview on the Individuals dashboard") {
			ACNavigation.goToIndividuals();

			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("Select the Last 180 days time period in Active Individuals chart") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Active Individuals");

			ACTimeFilter.setLast180Days();
		}

		task ("View the time period in Active Individuals chart is Last 180 days") {
			ACTimeFilter.assertCurrentTimeFilterRange(timeFilterRange = "Last 180 days");
		}

		task ("View only 6 xAxis ticks shown in Active Individuals chart") {
			var n = "0";

			while ("${n}" != "6") {
				var n = ${n} + 1;

				AssertVisible(
					index = "${n}",
					key_cardTitle = "Active Individuals",
					locator1 = "ACCards#RECHARTS_CARTESIAN_X_AXIS_TICK");
			}

			AssertElementNotPresent(
				index = "7",
				key_cardTitle = "Active Individuals",
				locator1 = "ACCards#RECHARTS_CARTESIAN_X_AXIS_TICK");
		}
	}

	@description = "Total Individuals increase by one when a new individual is added via event"
	@priority = "5"
	test CanViewTotalIndividualsIncreaseByOne {
		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${assignedPropertyName}");

		ACNavigation.goToIndividuals();

		ACCards.viewTotalCount(
			cardName = "Total Individuals",
			count = "0");

		ACUtils.launchDXP();

		ACUtils.navigateToSitePageWithUser(
			emailList = "userea@liferay.com",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${assignedPropertyName}");

		ACNavigation.goToIndividuals();

		ACCards.viewTotalCount(
			cardName = "Total Individuals",
			count = "1");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8905 | Test Summary: As a Business User, I should be able to see the last 5 activity entries of an individual when set pagination to 5"
	@ignore = "true"
	@priority = "3"
	test ShowLast5ActivitiesOnIndividualsActivitiesChartWhenSetPaginationTo5 {

		// AC Refactor: data doesn't appear on time
		// AC Refactor ticket: LRAC-8951

		var interactions = "1,2,3,4,5,6";

		task ("Repeatly view the site page as new user 6 times") {
			for (var current : list "${interactions}") {
				ACUtils.navigateToSitePageWithUser(
					emailList = "userea@liferay.com",
					pageName = "AC Page",
					siteName = "Site Name");

				UserBar.signOut();

				ACUtils.closeAllSessions();
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Known Individuals on the Individuals dashboard") {
			ACNavigation.goToIndividuals();

			ACIndividualsDashboard.goToKnownIndividualsTab();
		}

		task ("Navigate to the individuals page of new user") {
			ACUtils.searchBar(searchItem = "userfn userln");

			ACNavigation.openItem(itemName = "userfn userln");
		}

		task ("Select Last 24 hours time period in Individuals Activities chart") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Individual Activities");

			ACTimeFilter.setLast24Hours();
		}

		task ("Select the 5 items in pagination of Individuals Activities chart") {
			ACUtils.changePagination(itemsPerPage = "5");
		}

		task ("View only the last 5 activities shown in page 1") {
			var portalURL = PropsUtil.get("portal.url");
			var portalURL = StringUtil.replace("${portalURL}", "http://", "");
			var portalURL = StringUtil.replace("${portalURL}", ":8080", "");
			var n = "0";

			while ("${n}" != "5") {
				ACIndividualsDashboard.viewTimelineItem(
					index = "${n}",
					itemName = "Visited ${portalURL}",
					visits = "1 Visit");
			}
		}

		task ("Navigate to page 2") {
			ACUtils.checkAnyPage(pageNumber = "2");
		}

		task ("View the activity shown in page 2") {
			ACIndividualsDashboard.viewTimelineItem(
				itemName = "Visited ${portalURL}",
				visits = "1 Visit");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8903 | Test Summary: As an Business User, I should be able to assert the cards on the Overview tab of the Individual's Dashboard page"
	@priority = "4"
	test ViewCardsInTheOverviewTabOfIndividualsDashBoard {
		task ("View the site page with new user") {
			ACUtils.navigateToSitePageWithUser(
				emailList = "userea@liferay.com",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close Sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Overview on the Individuals dashboard") {
			ACNavigation.goToIndividuals();

			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("View the cards in the Overview tab") {
			for (var cardTitle : list "Total Individuals,Known,Anonymous,Enriched Profiles,Active Individuals,Top Interests as of Today") {
				ACCards.viewCards(cardTitle = "${cardTitle}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8902 | Test Summary: As an Business User, I should be able to assert the cards on the Overview tab of an Individual's page"
	@priority = "4"
	test ViewCardsInTheOverviewTabOfIndividualsPage {
		property analytics.cloud.upstream = "false";

		task ("View the site page with new user") {
			ACUtils.navigateToSitePageWithUser(
				emailList = "userea@liferay.com",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close Sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Known Individuals on the Individuals dashboard") {
			ACNavigation.goToIndividuals();

			ACIndividualsDashboard.goToKnownIndividualsTab();
		}

		task ("Navigate to the individuals page of new user") {
			ACUtils.searchBar(searchItem = "userfn userln");

			ACNavigation.openItem(itemName = "userfn userln");
		}

		task ("Navigate to the Overview tab") {
			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("View the cards in the Overview tab") {
			for (var cardTitle : list "Individual Events,Current Interests,Associated Segments") {
				ACCards.viewCards(cardTitle = "${cardTitle}");
			}
		}

		task ("View the individual details card") {
			ACIndividualsDashboard.viewIndividualDetailsCard(
				fullName = "userfn userln",
				userEmailAddress = "userea@liferay.com");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8904 | Test Summary: As a Business User, I should be able to view individuals name at top of page"
	@priority = "4"
	test ViewIndividualNameAtTheTopOfIndividualsPage {
		property analytics.cloud.upstream = "false";

		task ("View the site page with new user") {
			ACUtils.navigateToSitePageWithUser(
				emailList = "userea@liferay.com",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close Sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Known Individuals on the Individuals dashboard") {
			ACNavigation.goToIndividuals();

			ACIndividualsDashboard.goToKnownIndividualsTab();
		}

		task ("Navigate to the individuals page of new user") {
			ACUtils.searchBar(searchItem = "userfn userln");

			ACNavigation.openItem(itemName = "userfn userln");
		}

		task ("View the individual name at the top of individuals page") {
			ACNavigation.assertPageHeader(headerTitle = "userfn userln");
		}
	}

}