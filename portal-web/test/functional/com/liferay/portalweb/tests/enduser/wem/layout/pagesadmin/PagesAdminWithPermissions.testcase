@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Site Pages Administration";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONUser.tearDownNonAdminUsers();

			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-136413. The global page template is invisible to user without permission in page creation."
	@priority = "4"
	test GlobalTemplateIsInvisibleToUserWithoutPermissionInPageCreation {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property test.name.skip.portal.instance = "PagesAdminWithPermissions#GlobalTemplateIsInvisibleToUserWithoutPermissionInPageCreation";

		task ("Add a new user") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "Userfn",
				userLastName = "Userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Assign the user to site") {
			JSONUser.addUserToSite(
				groupName = "Test Site Name",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Add a regular role") {
			JSONRole.addRegularRole(
				roleKey = "Roles Regrole Name",
				roleTitle = "Roles Regrole Name");
		}

		task ("Define permission to new regular role") {
			for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,ADD_TO_PAGE,CONFIGURATION,PERMISSIONS,PREFERENCES,VIEW") {
				Permissions.definePermissionViaJSONAPI(
					resourceAction = "${resourceActionIndex}",
					resourceName = "com_liferay_layout_admin_web_portlet_GroupPagesPortlet",
					roleTitle = "Roles Regrole Name");
			}

			for (var resourceActionIndex : list "ADD_COMMUNITY,ADD_LAYOUT,ADD_LAYOUT_BRANCH,ADD_LAYOUT_SET_BRANCH,ASSIGN_MEMBERS,ASSIGN_USER_ROLES,CONFIGURE_PORTLETS,DELETE,EXPORT_IMPORT_LAYOUTS,EXPORT_IMPORT_PORTLET_INFO,MANAGE_ANNOUNCEMENTS,MANAGE_ARCHIVED_SETUPS,MANAGE_LAYOUTS,MANAGE_STAGING,MANAGE_SUBGROUPS,MANAGE_TEAMS,PERMISSIONS,PREVIEW_IN_DEVICE,PUBLISH_PORTLET_INFO,PUBLISH_STAGING,UPDATE,VIEW,VIEW_MEMBERS,VIEW_SITE_ADMINISTRATION,VIEW_STAGING") {
				Permissions.definePermissionViaJSONAPI(
					resourceAction = "${resourceActionIndex}",
					resourceName = "com.liferay.portal.kernel.model.Group",
					roleTitle = "Roles Regrole Name");
			}

			for (var resourceActionIndex : list "ADD_DISCUSSION,ADD_LAYOUT,CONFIGURE_PORTLETS,CUSTOMIZE,DELETE,DELETE_DISCUSSION,PERMISSIONS,UPDATE,UPDATE_DISCUSSION,UPDATE_LAYOUT_CONTENT,VIEW") {
				Permissions.definePermissionViaJSONAPI(
					resourceAction = "${resourceActionIndex}",
					resourceName = "com.liferay.portal.kernel.model.Layout",
					roleTitle = "Roles Regrole Name");
			}
		}

		task ("Assign regular role to the user") {
			JSONRole.assignRoleToUser(
				roleTitle = "Roles Regrole Name",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Grant permissions for only Owner in search global template") {
			PageTemplatesAdmin.openPageTemplatesAdmin(siteURLKey = "global");

			LexiconCard.clickEllipsisItem(
				card = "Search",
				item = "Permissions");

			PermissionsInline.addOrRemoveAnyPermissionsFromSpecificRole(
				addOrRemoveViewPermission = "Remove",
				permissionsKeyList = "INLINE_PERMISSIONS_VIEW_CHECKBOX",
				roleTitle = "guest");

			PermissionsInline.addOrRemoveAnyPermissionsFromSpecificRole(
				addOrRemoveViewPermission = "Remove",
				permissionsKeyList = "INLINE_PERMISSIONS_VIEW_CHECKBOX",
				roleTitle = "user");

			IFrame.closeFrame();
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(userLoginEmailAddress = "userea@liferay.com");
		}

		task ("View global search template is not shown when page creation") {
			PagesAdmin.openPagesAdmin(siteURLKey = "test-site-name");

			LexiconEntry.gotoAddMenuItem(menuItem = "Page");

			Navigator.gotoNavNested(navNested = "Global Templates");

			PagesAdmin.viewPageTemplateTypeNotPresent(pageTemplateName = "Search");
		}

		task ("Sign in as Test Test") {
			User.logoutAndLoginPG(userLoginEmailAddress = "test@liferay.com");
		}

		task ("Grant View permission for new regular role in search global template") {
			PageTemplatesAdmin.openPageTemplatesAdmin(siteURLKey = "global");

			LexiconCard.clickEllipsisItem(
				card = "Search",
				item = "Permissions");

			PermissionsInline.addOrRemoveAnyPermissionsFromSpecificRole(
				addOrRemoveViewPermission = "Add",
				permissionsKeyList = "INLINE_PERMISSIONS_VIEW_CHECKBOX",
				roleTitle = "roles-regrole-name");

			IFrame.closeFrame();
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(userLoginEmailAddress = "userea@liferay.com");
		}

		task ("View global search template is shown when page creation") {
			PagesAdmin.openPagesAdmin(siteURLKey = "test-site-name");

			LexiconEntry.gotoAddMenuItem(menuItem = "Page");

			Navigator.gotoNavNested(navNested = "Global Templates");

			PagesAdmin.viewPageTemplateTypePresent(pageTemplateName = "Search");
		}
	}

	@description = "Can remove inline view permission for Guest."
	@priority = "5"
	test RemoveViewPermissionForGuest {
		property portal.acceptance = "true";
		property testray.component.names = "Roles";

		task ("Add widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");
		}

		task ("Uncheck view permission for guest then verify checkbox in unchecked") {
			PagesAdmin.openPagesAdmin(siteURLKey = "Test Site Name");

			PagesAdmin.gotoPageEllipsisMenuItem(
				menuItem = "Permissions",
				pageName = "Test Page Name");

			Role.removePermissionPG(
				permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
				roleTitle = "Guest");
		}
	}

}