@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		JSONUser.tearDownNonAdminUsers();

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8368 | Test Summary: Page profile assets card shows which assets are on the page"
	@priority = "5"
	test ShowsWhichAssetsOnPage {
		property analytics.cloud.upstream = "false";

		task ("Create Blog to Add to Page") {
			ACUtils.createBlogsAndAddToPage();
		}

		task ("Connect DXP to AC") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Create New User and Sync New Contact Data") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "ac@liferay.com");

			ACDXPSettings.syncNewContactData();
		}

		task ("Login on the New User and Navigate to Site Page") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Launch AC and Switch Property") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Go to Sites > Pages > Set 24 hours on Time Filter") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Pages");

			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to AC Page > Overview > Displayed Assets") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", " ");

			ACNavigation.openItem(itemName = "Blogs AC Title - Site Name - ${dataSourceName}");

			ACNavigation.viewActiveSwitchTab(tabName = "Overview");

			ACCards.viewCards(cardTitle = "Displayed Assets");
		}

		task ("Assert Blog on the List") {
			for (var assetName : list "Blogs AC Title,Blogs") {
				AssertElementPresent(
					key_nameList = "${assetName}",
					locator1 = "ACSites#DISPLAYED_ASSETS_CARD");
			}
		}
	}

}