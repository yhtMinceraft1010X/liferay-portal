@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Add specific pages and web contents to Site as interest topics") {
			var pageNameList = "sports,technology,science";

			for (var layoutName : list "${pageNameList}") {
				ACUtils.addPage(layoutName = "${layoutName}");

				ACUtils.createWCAndAddToPage(
					layoutName = "${layoutName}",
					webContentTitle = "Web Content AC Title ${layoutName}");
			}
		}

		task ("Connect the DXP to AC") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Add a new user") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "ac@liferay.com");
		}

		task ("Sync the Contact Data") {
			ACDXPSettings.syncNewContactData();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		JSONUser.tearDownNonAdminUsers();

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8501 | Test Summary: Interest can be aggregated from multiple pages"
	@ignore = "true"
	@priority = "4"
	test InterestCanBeAggregatedFromMultiplePages {

		// AC Refactor: Interests in the segment take time to appear.
		// AC Refactor ticket: LRAC-9168

		var usernameList = "ac";
		var pageNameList = "sports,technology,science";

		task ("View new pages in site as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "${usernameList}@liferay.com",
				userLoginFullName = "${usernameList} ${usernameList}");

			for (var pageName : list "${pageNameList}") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Add a new static segment") {
			ACNavigation.goToSegments();

			ACSegments.createStaticSegment();
		}

		task ("Type the segment name") {
			ACUtils.setItemName(itemName = "Static Segment Test");
		}

		task ("Add the new user as member") {
			ACSegments.addStaticMember(tableMember = "${usernameList} ${usernameList}");
		}

		task ("Create the segment") {
			ACSegments.saveSegment();
		}

		// AC Refactor: Interests in the segment take time to appear.

		task ("View various segment interests under the top interests card") {
			ACInterests.viewInterest(interestTopic = "site");

			ACInterests.viewInterest(interestTopic = "sports");

			ACInterests.viewInterest(interestTopic = "science");

			ACInterests.viewInterest(interestTopic = "technology");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8502 | Test Summary: Search the Details of a Segment's Interest"
	@ignore = "true"
	@priority = "3"
	test SearchDetailsOfSegmentsInterest {

		// AC Refactor: Interests in the segment take time to appear.
		// AC Refactor ticket: LRAC-9169

		var nameList = "ac ac,ac2 ac2,ac3 ac3";
		var newUser = "ac2,ac3";

		task ("Add 2 more new users") {
			for (var name : list "${newUser}") {
				JSONUser.addUser(
					userEmailAddress = "${name}@liferay.com",
					userFirstName = "${name}",
					userLastName = "${name}",
					userScreenName = "${name}");

				JSONUser.setFirstPassword(
					agreeToTermsAndAnswerReminderQuery = "true",
					requireReset = "false",
					userEmailAddress = "${name}@liferay.com");
			}
		}

		task ("Sync the Contact Data") {
			ACDXPSettings.syncNewContactData();
		}

		task ("View new pages in site as different users") {
			ACUtils.navigateToSitePageWithUser(
				emailList = "ac@liferay.com",
				pageName = "sports",
				siteName = "Site Name");

			ACUtils.navigateToSitePageWithUser(
				emailList = "ac2@liferay.com",
				pageName = "technology",
				siteName = "Site Name");

			ACUtils.navigateToSitePageWithUser(
				emailList = "ac3@liferay.com",
				pageName = "science",
				siteName = "Site Name");
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Add a new static segment") {
			ACNavigation.goToSegments();

			ACSegments.createStaticSegment();
		}

		task ("Type the segment name") {
			ACUtils.setItemName(itemName = "Static Segment Test");
		}

		task ("Add the new user as member") {
			ACSegments.addStaticMultiMember(tableMember = "${nameList}");
		}

		task ("Create the segment") {
			ACSegments.saveSegment();
		}

		// AC Refactor: Interests in the segment take time to appear.

		task ("Go to a segment interest details page") {
			ACInterests.clickInterest(interestTopic = "site");
		}

		task ("Search Individual tab") {
			ACUtils.searchBar(searchItem = "@liferay.com");
		}

		task ("View individuals") {
			ACUtils.viewNameList(nameList = "${nameList}");
		}

		task ("Search Individual tab") {
			ACUtils.searchBar(searchItem = "ac@liferay.com");
		}

		task ("View individuals") {
			ACUtils.viewNameList(nameList = "ac ac");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8500 | Test Summary: List of interests appears as bar graphs with percentage of interested members"
	@ignore = "true"
	@priority = "5"
	test ViewListInterestsAppearsBarGraphsWithPercentage {

		// AC Refactor: Interests in the segment take time to appear.
		// AC Refactor ticket: LRAC-9167

		var nameList = "ac ac,ac2 ac2";
		var emailList = "ac@liferay.com,ac2@liferay.com";

		task ("Add a new users") {
			JSONUser.addUser(
				userEmailAddress = "ac2@liferay.com",
				userFirstName = "ac2",
				userLastName = "ac2",
				userScreenName = "ac2");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "ac2@liferay.com");
		}

		task ("Sync the Contact Data") {
			ACDXPSettings.syncNewContactData();
		}

		task ("View new pages in site as new user") {
			ACUtils.navigateToSitePageWithUser(
				emailList = "${emailList}",
				pageName = "sports",
				siteName = "Site Name");

			ACUtils.navigateToSitePageWithUser(
				emailList = "ac@liferay.com",
				pageName = "technology",
				siteName = "Site Name");

			ACUtils.navigateToSitePageWithUser(
				emailList = "ac2@liferay.com",
				pageName = "science",
				siteName = "Site Name");
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Add a new static segment") {
			ACNavigation.goToSegments();

			ACSegments.createStaticSegment();
		}

		task ("Type the segment name") {
			ACUtils.setItemName(itemName = "Static Segment Test");
		}

		task ("Add the new user as member") {
			ACSegments.addStaticMultiMember(tableMember = "${nameList}");
		}

		task ("Create the segment") {
			ACSegments.saveSegment();
		}

		// AC Refactor: Interests in the segment take time to appear.

		task ("View various segment top interest numbers under the top interests card") {
			ACInterests.viewInterest(
				interestTopic = "site",
				membersCount = "2",
				membersPercentage = "25%");

			ACInterests.viewInterest(
				interestTopic = "sports",
				membersCount = "2",
				membersPercentage = "25%");

			ACInterests.viewInterest(
				interestTopic = "technology",
				membersCount = "1",
				membersPercentage = "25%");

			ACInterests.viewInterest(
				interestTopic = "science",
				membersCount = "1",
				membersPercentage = "25%");
		}
	}

}