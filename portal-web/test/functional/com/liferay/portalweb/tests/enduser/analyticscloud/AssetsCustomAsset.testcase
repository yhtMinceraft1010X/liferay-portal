@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Add a Web Content Display to page and display a web content") {
			ACUtils.createWCAndAddToPage(
				webContentContent = '''<div data-analytics-asset-type="custom" data-analytics-asset-id="analytics-portal" data-analytics-asset-category="AC" data-analytics-asset-title="Custom Asset Analytics Cloud">%0A<h1> What'\''s your favorite portal? </h1>%0A</div>''',
				webContentTitle = "Custom Asset AC Title");
		}

		task ("Connect the DXP to AC") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Add a new user") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Sync the Contact Data") {
			ACDXPSettings.syncNewContactData();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: LRAC-7532 | Automation ID: LRAC-8538 | Test Summary: Create custom asset report"
	@priority = "5"
	test CanCreateCustomAssetReport {
		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the site page") {
			ACUtils.navigateToSitePage(
				actionType = "View WC",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch the property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Add a custom asset report") {
			ACNavigation.goToAssets();

			ACNavigation.switchTab(tabName = "Custom");

			ACAssets.addCustomAssetReport(
				assetName = "Custom Asset Analytics Cloud",
				metric = "Asset Views (sum)",
				reportName = "Test Custom Asset Report");
		}

		task ("View the new report") {
			ACCards.viewCards(cardTitle = "Test Custom Asset Report");
		}
	}

	@description = "Feature ID: LRAC-7532 | Automation ID: LRAC-8539 | Test Summary: Create multiple custom asset report"
	@priority = "5"
	test CanCreateMultipleCustomAssetReport {
		property portal.acceptance = "true";
		property portal.release = "true";

		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the site page") {
			ACUtils.navigateToSitePage(
				documentTitleList = "1,2,3",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch the property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Add three custom asset reports") {
			var n = "1";

			for (var metric : list "Asset Views (sum),Asset Interaction Time (sum),Asset Downloads (sum)") {
				ACNavigation.goToAssets();

				ACNavigation.switchTab(tabName = "Custom");

				ACAssets.addCustomAssetReport(
					assetName = "Custom Asset Analytics Cloud",
					metric = "Asset Views (sum)",
					reportName = "Test Custom Asset Report ${n}");

				var n = ${n} + 1;
			}
		}

		task ("View the new reports") {
			for (var n : list "1,2,3") {
				ACCards.viewCards(cardTitle = "Test Custom Asset Report ${n}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8095 | Test Summary: Can delete a custom asset report"
	@priority = "5"
	test CanDeleteCustomAssetReport {
		task ("Access the Custom Asset") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");

			ACUtils.navigateToSitePage(
				actionType = "View WC",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Change property") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Add a new Custom Asset Report") {
			ACNavigation.goToAssets();

			ACNavigation.switchTab(tabName = "Custom");

			ACAssets.addCustomAssetReport(
				assetName = "Custom Asset Analytics Cloud",
				metric = "Asset Views (sum)",
				reportName = "Report 1");
		}

		task ("Assert that the Custom Asset Report was added") {
			ACCards.viewCards(cardTitle = "Report 1");
		}

		task ("Delete the Custom Asset Report") {
			ACAssets.removeCustomAssetReport(reportName = "Report 1");
		}

		task ("Assert that the Custom Asset Report was deleted") {
			AssertElementNotPresent(
				key_cardTitle = "Report 1",
				locator1 = "ACCards#CARD_TITLE");
		}
	}

	@description = "Feature ID: LRAC-7532 | Automation ID: LRAC-8542 | Test Summary: Delete multiple custom asset report"
	@priority = "5"
	test CanDeleteMultipleCustomAssetReport {
		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the site page") {
			for (var n : list "1,2,3,4") {
				ACUtils.navigateToSitePage(
					pageName = "AC Page",
					siteName = "Site Name");
			}
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch the property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Add three custom asset reports") {
			var n = "1";

			for (var metric : list "Asset Views (sum),Asset Interaction Time (sum),Asset Downloads (sum)") {
				ACNavigation.goToAssets();

				ACNavigation.switchTab(tabName = "Custom");

				ACAssets.addCustomAssetReport(
					assetName = "Custom Asset Analytics Cloud",
					metric = "Asset Views (sum)",
					reportName = "Test Custom Asset Report ${n}");

				var n = ${n} + 1;
			}
		}

		task ("Delete all reports") {
			ACNavigation.goToAssets();

			ACNavigation.switchTab(tabName = "Custom");

			ACNavigation.openItem(itemName = "Custom Asset Analytics Cloud");

			for (var n : list "1,2,3") {
				ACAssets.removeCustomAssetReport(reportName = "Test Custom Asset Report ${n}");
			}
		}

		task ("View report dashboard is empty") {
			AssertVisible(locator1 = "ACCards#EMPTY_ASSET_REPORT_DASHBOARD");
		}
	}

	@description = "Feature ID: LRAC-7532 | Automation ID: LRAC-8543 | Test Summary: Delete one report out of many created"
	@priority = "3"
	test CanDeleteOneReportOutOfManyCreated {
		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("View the site page") {
			for (var n : list "1,2,3,4") {
				ACUtils.navigateToSitePage(
					pageName = "AC Page",
					siteName = "Site Name");
			}
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch the property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Add three custom asset reports") {
			var n = "1";

			for (var metric : list "Asset Views (sum),Asset Interaction Time (sum),Asset Downloads (sum)") {
				ACNavigation.goToAssets();

				ACNavigation.switchTab(tabName = "Custom");

				ACAssets.addCustomAssetReport(
					assetName = "Custom Asset Analytics Cloud",
					metric = "Asset Views (sum)",
					reportName = "Test Custom Asset Report ${n}");

				var n = ${n} + 1;
			}
		}

		task ("Delete the first report") {
			ACNavigation.goToAssets();

			ACNavigation.switchTab(tabName = "Custom");

			ACNavigation.openItem(itemName = "Custom Asset Analytics Cloud");

			ACAssets.removeCustomAssetReport(reportName = "Test Custom Asset Report 1");
		}

		task ("View other reports are shown") {
			for (var n : list "2,3") {
				ACCards.viewCards(cardTitle = "Test Custom Asset Report ${n}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8132 | Test Summary: Custom asset list shows a list of custom assets"
	@priority = "5"
	test CanShowsCustomAssetList {
		var assetName = "Custom Asset Analytics Cloud,Custom Asset Analytics Cloud 2,Custom Asset Analytics Cloud 3";

		for (var layoutName : list "AC Page 2,AC Page 3") {
			ACUtils.addPage(layoutName = "${layoutName}");
		}

		for (var n : list "2,3") {
			ACUtils.createWCAndAddToPage(
				layoutName = "AC Page ${n}",
				webContentContent = '''<div data-analytics-asset-type="custom" data-analytics-asset-id="analytics-portal-${n}" data-analytics-asset-category="AC" data-analytics-asset-title="Custom Asset Analytics Cloud ${n}">%0A<h1> What'\''s your favorite portal ${n}? </h1>%0A</div>''',
				webContentTitle = "Custom Asset AC Title ${n}");
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		for (var pageName : list "AC Page,AC Page 2,AC Page 3") {
			for (var n : list "1,2,3") {
				ACUtils.navigateToSitePage(
					pageName = "AC Page",
					siteName = "Site Name");
			}
		}

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${assignedPropertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Custom");

		ACUtils.viewNameList(nameList = "${assetName}");
	}

}