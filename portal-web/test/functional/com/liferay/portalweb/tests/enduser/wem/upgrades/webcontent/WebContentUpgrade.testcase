@component-name = "portal-upgrades"
definition {

	property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Upgrades WEM,Web Content Administration";
	property testray.main.component.name = "Upgrades WEM";

	setUp {
		SignIn.signIn();

		var portalURL = PropsUtil.get("portal.url");

		AssertLocation(value1 = "${portalURL}/web/guest?SM_USER=test@liferay.com");

		SearchAdministration.executeReindex();
	}

	@description = "This is a use case for LRQA-61632."
	@priority = "3"
	test AddWCWithFirstComplexStructure {
		property data.archive.type = "data-archive-web-content-first-complex-fields";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "7.3.10.1";

		task ("Add a widget page and WCD to widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Web Content Display Page");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Web Content Display Page",
				widgetName = "Web Content Display");
		}

		task ("Select WC Template Name as template and save") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			WebContent.selectTemplateCP(
				confirm = "false",
				structureName = "WC Structure Name",
				templateName = "WC Template Name");

			PortletEntry.publish();
		}

		task ("Assert Images added in one field is not available in the next image field before article is submitted") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

			WebContent.addWithStructureCP(
				description = "Web Content Description",
				structureName = "WC Structure Name",
				templateName = "WC Template Name",
				webContentTitle = "Web Content Complex Title 2");

			WebContent.addWithStructureCP(
				navTab = "Web Content Images",
				webContentImage = "Document_3.png",
				webContentImageFieldLabel = "Imagem Aba 01");

			Click(
				fieldLabel = "Logo",
				locator1 = "Button#BUTTON_LABEL",
				text = "Select");

			IFrame.selectModalFrame();

			LexiconCard.viewCardNotPresent(card = "Document_3.png");

			IFrame.closeFrame();

			PortletEntry.publish();
		}

		task ("Duplicate all fields that can be duplicated, 1-4 times") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			for (var fieldName : list "Logo,Beneficio,Companhia,JeitoIdentificar,Destino,DescricaoOpPar,CompanhiaOperadora") {
				FormFields.addRepeatableField(
					key_fieldName = "${fieldName}",
					key_repeatableFieldNumber = "1");
			}

			for (var fieldName : list "Logo,Beneficio,Companhia,JeitoIdentificar,Destino,DescricaoOpPar,CompanhiaOperadora") {
				DataEngine.assertFieldRepeated(
					fieldName = "${fieldName}",
					index = "1");

				DataEngine.assertFieldRepeated(
					fieldName = "${fieldName}",
					index = "2");
			}
		}

		task ("Duplicate fields and then remove duplicates") {
			for (var fieldName : list "Logo,Beneficio,Companhia,JeitoIdentificar") {
				Click(
					key_fieldName = "${fieldName}",
					locator1 = "DDMField#REMOVE_REPEATED_FIELD");
			}

			Click(locator1 = "xpath=(//div[contains(@data-field-name,'CompanhiaOperadora')]/..//button[@*='Remove'])[3]");

			for (var fieldName : list "Destino,DescricaoOpPar") {
				Click(
					key_fieldName = "${fieldName}",
					locator1 = "DDMField#REMOVE_REPEATED_FIELD");
			}

			for (var fieldName : list "Logo,Beneficio,Companhia,JeitoIdentificar,CompanhiaOperadora,DescricaoOpPar,Destino") {
				AssertElementNotPresent(
					key_fieldName = "${fieldName}",
					locator1 = "DDMField#REMOVE_REPEATED_FIELD");
			}
		}

		task ("Disable 'Searchable'") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			DataEngine.editFieldSearchable(
				fieldFieldLabel = "PaginaOrigem",
				searchableType = "Disable");

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			Search.searchCP(searchTerm = "text1");

			Search.viewNoResultAssetTitle(searchAssetTitle = "Web Content Complex Title 1");
		}

		task ("Preview fields entered") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoPreviewEntryCP(webContentTitle = "Web Content Complex Title 1");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			var i = "1";

			while ("${i}" != "31") {
				AssertTextEquals.assertPartialText(
					locator1 = "//div[@class='portlet-body']/div[contains(@class,'mt-2')]",
					value1 = "text${i}");

				var i = ${i} + 1;
			}

			for (var fieldValue : list "Link Pagina Origem,Link Pagina Atual") {
				AssertTextEquals.assertPartialText(
					locator1 = "//div[@class='portlet-body']/div[contains(@class,'mt-2')]",
					value1 = "${fieldValue}");
			}

			for (var i : list "1,2,3,4") {
				AssertElementPresent(locator1 = "//img[contains(@src,'Document_${i}.jpg')]");
			}

			takeScreenshot();
		}

		task ("Display in Web Content Display widget") {
			Navigator.gotoSitePage(
				pageName = "Web Content Display Page",
				siteName = "Test Site Name");

			WebContentDisplayPortlet.selectWebContent(webContentTitle = "Web Content Complex Title 1");

			IFrame.closeFrame();

			var i = "1";

			while ("${i}" != "31") {
				WebContentDisplayPortlet.viewContent(
					webContentContent = "text${i}",
					webContentTitle = "Web Content Complex Title 1");

				var i = ${i} + 1;
			}

			for (var displayText : list "Link Pagina Origem,Link Pagina Atual") {
				AssertElementPresent(
					key_displayText = "${displayText}",
					key_webContentTitle = "Web Content Complex Title 1",
					locator1 = "WCD#WEB_CONTENT_LINK");
			}

			for (var i : list "1,2,3,4") {
				AssertElementPresent(locator1 = "//img[contains(@src,'Document_${i}.jpg')]");
			}

			takeScreenshot();
		}

		task ("Copy successfully") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentStructures.copyCP(
				locale = "en-US",
				structureCopyLocalName = "WC Structure Copy En-US Name",
				structureCopyName = "WC Structure Copy Name",
				structureName = "WC Structure Name");

			WebContentStructures.deleteCP(structureName = "WC Structure Copy En-US Name");
		}

		task ("Duplicate the last field group with many nested fields, 10 times, and save") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			for (var i : list "1,2,3,4,5,6,7,8,9,10") {
				Click(
					key_fieldFieldLabel = "Companhia Operadora",
					locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER");

				ScrollWebElementIntoView(
					key_fieldFieldLabel = "Companhia Operadora",
					locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER");

				MouseOver(locator1 = "//div[contains(@data-field-name,'CompanhiaOperadoraFieldSet')]//div[contains(@class,'placeholder')]");

				LexiconEntry.gotoVerticalEllipsisMenuItemNoError(menuItem = "Duplicate");
			}

			WebContentStructures.saveCP();

			VerifyElementPresent(locator1 = "Message#SUCCESS");
		}

		task ("Move nested field to non-nested") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			for (var nestedFieldLabel : list "Imagem Aba 01,Descricao Aba 01") {
				DataEngine.moveNestedField(nestedFieldLabel = "${nestedFieldLabel}");
			}

			for (var nestedFieldLabel : list "Imagem Aba 01,Descricao Aba 01") {
				AssertElementNotPresent(locator1 = "//div[@*='ddm-field-types-fieldset__nested']//label[normalize-space(text())='${nestedFieldLabel}']");
			}

			WebContentStructures.saveCP();
		}

		task ("Translate labels") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			PortletEntry.changeLocale(locale = "en-US");

			DataEngine.editFieldLabel(
				fieldFieldLabel = "PaginaOrigem",
				fieldFieldLabelEdit = "HomePage");

			DataEngine.editFieldLabel(
				fieldFieldLabel = "Link Pagina Origem",
				fieldFieldLabelEdit = "Link Home Page");

			WebContentStructures.saveCP();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			PortletEntry.changeLocale(locale = "en-US");

			WebContent.assertFieldOnWebContent(fieldFieldLabel = "HomePage");

			WebContent.assertFieldOnWebContent(fieldFieldLabel = "Link Home Page");
		}

		task ("Add new translation") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			WebContentStructures.addLocalization(
				locale = "zh-CN",
				localization1Name = "WC Structure zh-CN Name");

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_GENERIC");

			AssertTextEquals(
				key_localizedLanguage = "zh-CN",
				locator1 = "Translation#TRANSLATION_STATUS_TITLE",
				value1 = "Translated");
		}

		task ("Remove translation") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			WebContentStructures.addLocalization(
				locale = "zh-CN",
				localization1Name = "");

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_GENERIC");

			AssertTextEquals(
				key_localizedLanguage = "zh-CN",
				locator1 = "Translation#TRANSLATION_STATUS_TITLE",
				value1 = "Not Translated");
		}

		task ("View Translation while Editing article") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			PortletEntry.changeLocale(locale = "en-US");

			AssertVisible(
				key_fieldFieldLabel = "HomePage",
				key_fieldName = "PaginaOrigem",
				locator1 = "DDMField#WEB_CONTENT");

			AssertVisible(
				key_fieldFieldLabel = "Link Home Page",
				key_fieldName = "LinkPaginaOrigem",
				locator1 = "DDMField#WEB_CONTENT");
		}

		task ("Enable Staging,Publish to live site, assert value entered persists,including images and links") {
			ProductMenu.gotoPortlet(
				category = "Publishing",
				portlet = "Staging");

			Staging.activateStagingCP(siteName = "Test Site Name");

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name-staging");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			AssertAttributeValue(
				attribute1 = "value",
				index = "1",
				key_fieldFieldLabel = "PaginaOrigem",
				locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
				value1 = "text1");

			AssertAttributeValue(
				attribute1 = "value",
				index = "1",
				key_fieldFieldLabel = "Pagina Atual",
				locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
				value1 = "text2");

			WebContent.viewWithStructureCP(
				skipGotoEditCp = "true",
				webContentLinkToPage = "Page1",
				webContentLinkToPageFieldLabel = "Link Pagina Origem",
				webContentTitle = "Web Content Complex Title 1");

			WebContent.viewWithStructureCP(
				skipGotoEditCp = "true",
				webContentLinkToPage = "Page2",
				webContentLinkToPageFieldLabel = "Link Pagina Atual",
				webContentTitle = "Web Content Complex Title 1");

			WebContent.viewWithStructureCP(
				skipGotoEditCp = "true",
				webContentImage = "Document_1.jpg",
				webContentImageDescription = "image1",
				webContentImageFieldLabel = "Imagem Aba 01",
				webContentTitle = "Web Content Complex Title 1");

			WebContent.viewWithStructureCP(
				skipGotoEditCp = "true",
				webContentImage = "Document_2.jpg",
				webContentImageDescription = "image2",
				webContentImageFieldLabel = "Logo",
				webContentTitle = "Web Content Complex Title 1");

			takeScreenshot();
		}
	}

	@description = "This is a use case for LRQA-61632."
	@priority = "3"
	test AddWCWithSecondComplexStructure {
		property data.archive.type = "data-archive-web-content-second-complex-fields";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "7.3.10.1";

		task ("Add a widget page and WCD to widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Web Content Display Page");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Web Content Display Page",
				widgetName = "Web Content Display");
		}

		task ("Select WC Template Name as template, save as draft and publish") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			WebContent.selectTemplateCP(
				confirm = "false",
				structureName = "WC Structure Name",
				templateName = "WC Template Name");

			Button.clickSaveAsDraft();

			PortletEntry.publish();
		}

		task ("Save as Draft, and then preview other versions") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			Button.clickSaveAsDraft();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEntryMenuItem(
				entry = "Web Content Complex Title 1",
				menuItem = "View History");

			LexiconTable.viewTableEntryPartialText(
				tableEntry = "Web Content Complex Title 1",
				tableEntryPartialText = "1.0");

			LexiconTable.viewTableEntryPartialText(
				tableEntry = "Web Content Complex Title 1",
				tableEntryPartialText = "1.1");
		}

		task ("Edit article and save") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			PortletEntry.publish();
		}

		task ("Duplicate all fields that can be duplicated, 1-4 times") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			for (var fieldName : list "ItemUFComunicado,ItemDoParagrafoBanner,ListaDDI,ItensDeGenero,ItemPais,Estado") {
				FormFields.addRepeatableField(
					fieldName = "${fieldName}",
					index = "1",
					key_fieldName = "${fieldName}",
					key_repeatableFieldNumber = "1");

				DataEngine.assertFieldRepeated(
					fieldName = "${fieldName}",
					index = "2");
			}

			PortletEntry.publish();
		}

		task ("Remove duplicates") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			for (var fieldName : list "ItemUFComunicado,ItemDoParagrafoBanner,ListaDDI,ItensDeGenero,Estado,ItemPais") {
				Click(
					key_fieldName = "${fieldName}",
					locator1 = "DDMField#REMOVE_REPEATED_FIELD");
			}

			for (var fieldName : list "ItemUFComunicado,ItemDoParagrafoBanner,ListaDDI,ItensDeGenero,Estado,ItemPais") {
				AssertElementNotPresent(
					key_fieldName = "${fieldName}",
					locator1 = "DDMField#REMOVE_REPEATED_FIELD");
			}

			PortletEntry.publish();
		}

		task ("Disable 'Searchable'") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			DataEngine.editFieldSearchable(
				fieldFieldLabel = "Label UF Comunicado",
				searchableType = "Disable");

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			Search.searchCP(searchTerm = "text1");

			Search.viewNoResultAssetTitle(searchAssetTitle = "Web Content Complex Title 1");
		}

		task ("Preview fields entered") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoPreviewEntryCP(webContentTitle = "Web Content Complex Title 1");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			var i = "1";

			while ("${i}" != "121") {
				AssertTextEquals.assertPartialText(
					locator1 = "//div[@class='portlet-body']/div[contains(@class,'mt-2')]",
					value1 = "text${i}");

				var i = ${i} + 1;
			}

			AssertElementPresent(locator1 = "//img[contains(@src,'Document_1.jpg')]");

			takeScreenshot();
		}

		task ("Display in Web Content Display widget") {
			Navigator.gotoSitePage(
				pageName = "Web Content Display Page",
				siteName = "Test Site Name");

			WebContentDisplayPortlet.selectWebContent(webContentTitle = "Web Content Complex Title 1");

			IFrame.closeFrame();

			var i = "1";

			while ("${i}" != "121") {
				WebContentDisplayPortlet.viewContent(
					webContentContent = "text${i}",
					webContentTitle = "Web Content Complex Title 1");

				var i = ${i} + 1;
			}

			AssertElementPresent(locator1 = "//img[contains(@src,'Document_1.jpg')]");

			takeScreenshot();
		}

		task ("Copy Article successfully") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContent.copyCP(webContentTitle = "Web Content Complex Title 1");
		}

		task ("Copy Structure successfully") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentStructures.copyCP(
				structureCopyName = "WC Structure Copy Name",
				structureName = "WC Structure Name");
		}

		task ("Duplicate the last field group with many nested fields, 10 times, and save") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			for (var i : list "1,2,3,4,5,6,7,8,9,10") {
				Click(
					key_fieldFieldLabel = "Lista de Países",
					locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER");

				ScrollWebElementIntoView(
					key_fieldFieldLabel = "Lista de Países",
					locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER");

				MouseOver(locator1 = "//div[contains(@data-field-name,'ListaDePaisesFieldSet')]//div[contains(@class,'placeholder')]");

				LexiconEntry.gotoVerticalEllipsisMenuItemNoError(menuItem = "Duplicate");
			}

			WebContentStructures.saveCP();
		}

		task ("Move quad nested field to non-nested and save") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			DataEngine.moveNestedField(nestedFieldLabel = "Rótulo - Email");

			Click(locator1 = "Sidebar#BACK");

			Click(
				key_fieldFieldLabel = "Mensagem Dica",
				key_fieldFieldName = "EmailFieldSet",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_ANY");

			DragAndDrop.javaScriptDragAndDropToBottom(
				key_fieldFieldLabel = "Mensagem Dica",
				key_fieldFieldName = "EmailFieldSet",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_ANY",
				locator2 = "Form#ADD_FIELD_POSITION_1");

			Click(locator1 = "Sidebar#BACK");

			Click(
				key_fieldFieldLabel = "Mensagem de erro de máscara",
				key_fieldFieldName = "EmailFieldSet",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_ANY");

			DragAndDrop.javaScriptDragAndDropToBottom(
				key_fieldFieldLabel = "Mensagem de erro de máscara",
				key_fieldFieldName = "EmailFieldSet",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_ANY",
				locator2 = "Form#ADD_FIELD_POSITION_1");

			Click(locator1 = "Sidebar#BACK");

			Click(
				key_fieldFieldLabel = "Mensagem de campo obrigatório",
				key_fieldFieldName = "EmailFieldSet",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_ANY");

			DragAndDrop.javaScriptDragAndDropToBottom(
				key_fieldFieldLabel = "Mensagem de campo obrigatório",
				key_fieldFieldName = "EmailFieldSet",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_ANY",
				locator2 = "Form#ADD_FIELD_POSITION_1");

			for (var key_fieldFieldLabel : list "Rótulo - Email,Mensagem Dica,Mensagem de erro de máscara,Mensagem de campo obrigatório") {
				AssertElementNotPresent(
					key_fieldFieldName = "EmailFieldSet",
					locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_ANY");
			}

			WebContentStructures.saveCP();
		}

		task ("Add translation labels") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			PortletEntry.changeLocale(locale = "en-US");

			DataEngine.editFieldLabel(
				fieldFieldLabel = "Label UF Comunicado",
				fieldFieldLabelEdit = "Label UF Release");

			DataEngine.editFieldLabel(
				fieldFieldLabel = "Url imagem do banner",
				fieldFieldLabelEdit = "Url banner image");

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			PortletEntry.changeLocale(locale = "en-US");

			WebContent.assertFieldOnWebContent(fieldFieldLabel = "Label UF Release");

			WebContent.assertFieldOnWebContent(fieldFieldLabel = "Url banner image");
		}

		task ("Add new translation") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			WebContentStructures.addLocalization(
				locale = "zh-CN",
				localization1Name = "WC Structure zh-CN Name");

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_GENERIC");

			AssertTextEquals(
				key_localizedLanguage = "zh-CN",
				locator1 = "Translation#TRANSLATION_STATUS_TITLE",
				value1 = "Translated");
		}

		task ("Remove translation") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			WebContentStructures.addLocalization(
				locale = "zh-CN",
				localization1Name = "");

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

			Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_GENERIC");

			AssertTextEquals(
				key_localizedLanguage = "zh-CN",
				locator1 = "Translation#TRANSLATION_STATUS_TITLE",
				value1 = "Not Translated");
		}

		task ("View Translation while Editing article") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			PortletEntry.changeLocale(locale = "en-US");

			AssertVisible(
				key_fieldFieldLabel = "Label UF Release",
				key_fieldName = "LabelUFComunicado",
				locator1 = "DDMField#WEB_CONTENT");

			AssertVisible(
				key_fieldFieldLabel = "Url banner image",
				key_fieldName = "UrlImagemBanner",
				locator1 = "DDMField#WEB_CONTENT");
		}

		task ("Add Default values to structure") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			LexiconEntry.gotoEntryMenuItem(
				menuItem = "Edit Default Values",
				rowEntry = "WC Structure Name");

			Type(
				key_fieldFieldLabel = "Label UF Comunicado",
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = "Edited LabelUFComunicado Field");

			Type(
				key_fieldFieldLabel = "Lista UF Comunicado",
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = "Edited ListaUFComunidado Field");

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			LexiconEntry.gotoEntryMenuItem(
				menuItem = "Edit Default Values",
				rowEntry = "WC Structure Name");

			AssertTextEquals.assertValue(
				key_fieldFieldLabel = "Label UF Comunicado",
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = "Edited LabelUFComunicado Field");

			AssertTextEquals.assertValue(
				key_fieldFieldLabel = "Label UF Comunicado",
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = "Edited LabelUFComunicado Field");
		}

		task ("Move to another folder") {
			JSONWebcontent.addFolder(
				folderDescription = "WC Folder Description",
				folderName = "WC Folder Name",
				groupName = "Test Site Name");

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			Search.searchCP(searchTerm = "Web Content Complex Title 1");

			WebContent.moveToFolderCP(
				folderName = "WC Folder Name",
				webContentTitle = "Web Content Complex Title 1");
		}

		task ("Set all fields to Required and check submission") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoStructures();

			WebContentNavigator.gotoEditStructure(structureName = "WC Structure Copy Name");

			for (var fieldName : list "Label UF Comunicado,Lista UF Comunicado,Mensagem de erro de timeout,Titulo Mobile,Titulo,Informe Titulo,Informativo Formulario Cadastro,Titulo Programa Milhas,Texo Box Programa Amigo,Informe Programa Milhas,Footer Cadastro,Botao Cadastrar,Footer Cadastro Mobile,Botao Cadastrar Mobile,Informe Programa Amigo,Botao Quero Participar,Botao Quero Participar Mobile,Nacionalidade,Rotulo - Primeiro Nome,Título do banner,Rótulo - Nome do meio,Rótulo - Sobrenome,Rótulo - Email,Rótulo - Confirmação Email,Rótulo - Senha,Rótulo - Confirmação Senha,DDI,CPF,Passaporte,Celular,Data de Nascimento,Gênero,País de residência,UF,CEP,Cidade,Bairro,Endereço,Número,Complemento,Texto Box Amigo,País") {
				DataEngine.editFieldRequired(fieldFieldLabel = "${fieldName}");
			}

			WebContentStructures.saveCP();

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Copy Name");

			WebContent.addWithStructureCP(
				structureName = "WC Structure Copy Name",
				webContentTitle = "Web Content Complex Title 2");

			PortletEntry.publish();

			for (var fieldName : list "Label UF Comunicado,Lista UF Comunicado,Mensagem de erro de timeout,Titulo Mobile,Titulo,Informativo Formulario Cadastro,Titulo Programa Milhas,Texo Box Programa Amigo,Informe Programa Milhas,Footer Cadastro,Botao Cadastrar,Footer Cadastro Mobile,Botao Cadastrar Mobile,Informe Programa Amigo,Botao Quero Participar,Botao Quero Participar Mobile,Nacionalidade,Rotulo - Primeiro Nome,Título do banner,Rótulo - Nome do meio,Rótulo - Sobrenome,Rótulo - Email,Rótulo - Confirmação Email,Rótulo - Senha,Rótulo - Confirmação Senha,DDI,CPF,Passaporte,Celular,Data de Nascimento,Gênero,País de residência,UF,CEP,Cidade,Bairro,Endereço,Número,Complemento,Texto Box Amigo,País") {
				AssertTextEquals(
					key_fieldFieldLabel = "${fieldName}",
					locator1 = "WCEditWebContent#FIELD_REQUIRED_ALERT",
					value1 = "Este campo é obrigatório.");
			}
		}

		task ("Enable Staging,Publish to live site, assert value entered persists,including images and links") {
			ProductMenu.gotoPortlet(
				category = "Publishing",
				portlet = "Staging");

			Staging.activateStagingCP(siteName = "Test Site Name");

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name-staging");

			Search.searchCP(searchTerm = "Web Content Complex Title 1");

			WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Complex Title 1");

			WebContent.viewWithStructureCP(
				skipGotoEditCp = "true",
				webContentText = "text1",
				webContentTextFieldLabel = "Label UF Comunicado",
				webContentTitle = "Web Content Complex Title 1");

			WebContent.viewWithStructureCP(
				skipGotoEditCp = "true",
				webContentText = "text2",
				webContentTextFieldLabel = "Lista UF Comunicado",
				webContentTitle = "Web Content Complex Title 1");

			WebContent.viewWithStructureCP(
				skipGotoEditCp = "true",
				webContentImage = "Document_1.jpg",
				webContentImageDescription = "image1",
				webContentImageFieldLabel = "Url imagem",
				webContentTitle = "Web Content Complex Title 1");

			takeScreenshot();
		}
	}

	@priority = "5"
	test PublishDraftWebContentAfterUpgrade625 {
		property data.archive.type = "data-archive-web-content-draft";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "6.2.5";

		Upgrade.addWCStructureAndTemplate();

		Upgrade.publishWCDraft();
	}

	@priority = "5"
	test PublishDraftWebContentAfterUpgrade621015 {
		property data.archive.type = "data-archive-web-content-draft";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "6.2.10.15";

		Upgrade.addWCStructureAndTemplate();

		Upgrade.publishWCDraft();
	}

	@priority = "5"
	test PublishDraftWebContentAfterUpgrade621021 {
		property data.archive.type = "data-archive-web-content-draft";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "6.2.10.21";

		Upgrade.addWCStructureAndTemplate();

		Upgrade.publishWCDraft();
	}

	@description = "This is a test for LPS-126653. Upgrade 7.0 to Master with a Web Content, a Structure, a WC Template and a page with Web Content Display and Asset Publisher"
	@priority = "5"
	test ViewAndEditWebContentWCStructureWCTemplateWCDAndAssetPublisher704 {
		property data.archive.type = "data-archive-web-content-with-fields";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.4";

		Upgrade.ViewWebContentWCStructureWCTemplateWCDandAssetPublisher(webContentColor = "false");

		Upgrade.EditWebContentAndViewInWCDandAssetPublisher();

		Upgrade.EditWCStructureAndTemplateAndViewInWCDandAssetPublisher(webContentColor = "false");
	}

	@description = "This is a test for LPS-126654. Upgrade 7.1 to Master with a Web Content, a Structure, a WC Template and a page with Web Content Display and Asset Publisher"
	@priority = "5"
	test ViewAndEditWebContentWCStructureWCTemplateWCDAndAssetPublisher713 {
		property data.archive.type = "data-archive-web-content-with-fields";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.3";

		Upgrade.ViewWebContentWCStructureWCTemplateWCDandAssetPublisher();

		Upgrade.EditWebContentAndViewInWCDandAssetPublisher();

		Upgrade.EditWCStructureAndTemplateAndViewInWCDandAssetPublisher();
	}

	@description = "This is a test for LPS-126655. Upgrade 7.2 to Master with a Web Content, a Structure, a WC Template and a page with Web Content Display and Asset Publisher"
	@priority = "5"
	test ViewAndEditWebContentWCStructureWCTemplateWCDAndAssetPublisher721 {
		property data.archive.type = "data-archive-web-content-with-fields";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		Upgrade.ViewWebContentWCStructureWCTemplateWCDandAssetPublisher();

		Upgrade.EditWebContentAndViewInWCDandAssetPublisher();

		Upgrade.EditWCStructureAndTemplateAndViewInWCDandAssetPublisher();
	}

	@description = "This is a test for LPS-126656. Upgrade 7.3 to Master with a Web Content, a Structure, a WC Template and a page with Web Content Display and Asset Publisher"
	@priority = "5"
	test ViewAndEditWebContentWCStructureWCTemplateWCDAndAssetPublisher735 {
		property data.archive.type = "data-archive-web-content-with-fields";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.3.5";

		Upgrade.ViewWebContentWCStructureWCTemplateWCDandAssetPublisher();

		Upgrade.EditWebContentAndViewInWCDandAssetPublisher();

		Upgrade.EditWCStructureAndTemplateAndViewInWCDandAssetPublisher();
	}

	@description = "This is a test for LPS-126656. Upgrade 7.3 to Master with a Web Content, a Structure, a WC Template and a page with Web Content Display and Asset Publisher"
	@priority = "5"
	test ViewAndEditWebContentWCStructureWCTemplateWCDAndAssetPublisher7310 {
		property data.archive.type = "data-archive-web-content-with-fields";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "7.3.10";

		Upgrade.ViewWebContentWCStructureWCTemplateWCDandAssetPublisher();

		Upgrade.EditWebContentAndViewInWCDandAssetPublisher();

		Upgrade.EditWCStructureAndTemplateAndViewInWCDandAssetPublisher();
	}

	@description = "This is a test for LPS-126654. Upgrade 7.1 to Master with a Web Content, a Structure, a WC Template and a page with Web Content Display and Asset Publisher"
	@priority = "5"
	test ViewAndEditWebContentWCStructureWCTemplateWCDAndAssetPublisher71103 {
		property data.archive.type = "data-archive-web-content-with-fields";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "7.1.10.3";

		Upgrade.ViewWebContentWCStructureWCTemplateWCDandAssetPublisher();

		Upgrade.EditWebContentAndViewInWCDandAssetPublisher();

		Upgrade.EditWCStructureAndTemplateAndViewInWCDandAssetPublisher();
	}

	@description = "This is a test for LPS-126655. Upgrade 7.2 to Master with a Web Content, a Structure, a WC Template and a page with Web Content Display and Asset Publisher"
	@priority = "5"
	test ViewAndEditWebContentWCStructureWCTemplateWCDAndAssetPublisher72101 {
		property data.archive.type = "data-archive-web-content-with-fields";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.10.1";

		Upgrade.ViewWebContentWCStructureWCTemplateWCDandAssetPublisher();

		Upgrade.EditWebContentAndViewInWCDandAssetPublisher();

		Upgrade.EditWCStructureAndTemplateAndViewInWCDandAssetPublisher();
	}

	@description = "This is a test for LPS-126653. Upgrade 7.0 to Master with a Web Content, a Structure, a WC Template and a page with Web Content Display and Asset Publisher"
	@priority = "5"
	test ViewAndEditWebContentWCStructureWCTemplateWCDAndAssetPublisher701014 {
		property data.archive.type = "data-archive-web-content-with-fields";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "7.0.10.14";

		Upgrade.ViewWebContentWCStructureWCTemplateWCDandAssetPublisher(webContentColor = "false");

		Upgrade.EditWebContentAndViewInWCDandAssetPublisher();

		Upgrade.EditWCStructureAndTemplateAndViewInWCDandAssetPublisher(webContentColor = "false");
	}

	@description = "This is a use case for LPS-123590."
	@priority = "4"
	test ViewSpecificDisplayPageTemplateArchive721 {
		property data.archive.type = "data-archive-display-page-templates";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		Upgrade.viewSpecificDisplayPageTemplateViaAssetPublisher();
	}

	@description = "This is a use case for LPS-123590."
	@priority = "4"
	test ViewSpecificDisplayPageTemplateArchive72104 {
		property data.archive.type = "data-archive-display-page-templates";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.2.10.4";

		Upgrade.viewSpecificDisplayPageTemplateViaAssetPublisher();
	}

	@description = "This is a use case for LRQA-62720. View web content with all fields and value after upgrade from 6.2."
	@priority = "4"
	test ViewWebContentWithAllFieldsArchive621021 {
		property data.archive.type = "data-archive-web-content-with-all-fields";
		property database.types = "mysql,oracle,postgresql,sybase";
		property portal.version = "6.2.10.21";

		Upgrade.viewWebContentWithAllFields();
	}

	@description = "This is a use case for LPS-98619."
	@priority = "3"
	test ViewWebContentWithImageArchive704 {
		property data.archive.type = "data-archive-web-content-with-image";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.4";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentUpgrade.viewWithStructureCP(
			webContentImage = "Document_1.jpg",
			webContentTitle = "WC WebContent Title");
	}

	@description = "This is a use case for LPS-147234. View web content with image field after upgrade from 7.1.10 GA1."
	@priority = "4"
	test ViewWebContentWithImageArchive7110 {
		property data.archive.type = "data-archive-web-content-with-image";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.1.10";

		task ("View image is shown in field after upgrade") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentUpgrade.viewWithStructureCP(
				webContentImage = "Document_2.png",
				webContentTitle = "Web Content Title");
		}
	}

	@description = "This is a use case for LPS-98619."
	@priority = "3"
	test ViewWebContentWithImageArchive70106 {
		property data.archive.type = "data-archive-web-content-with-image";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sybase";
		property portal.version = "7.0.10.6";
		property test.run.environment = "EE";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentUpgrade.viewWithStructureCP(
			webContentImage = "Document_1.jpg",
			webContentTitle = "WC WebContent Title");
	}

	@description = "This is a use case for LPS-130915."
	@priority = "5"
	test ViewWebContentWithNoDisplayPageTemplateArchive735 {
		property data.archive.type = "data-archive-web-content-with-no-display-page-template";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.3.5";

		Upgrade.viewWebContentWithNoDisplayPageTemplate();
	}

	@description = "This is a use case for LPS-130915."
	@priority = "5"
	test ViewWebContentWithNoDisplayPageTemplateArchive73101 {
		property data.archive.type = "data-archive-web-content-with-no-display-page-template";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.3.10.1";

		Upgrade.viewWebContentWithNoDisplayPageTemplate();
	}

	@description = "This is a use case for LRQA-62830."
	@priority = "4"
	test ViewWebContentWithPredefinedValueInWebContentFieldArchive713 {
		property data.archive.type = "data-archive-web-content-with-predefined-value-in-web-content-field";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.3";

		Upgrade.viewWebContentWithPredefinedValueInWebContentField();
	}

	@description = "This is a use case for LRQA-62834."
	@priority = "4"
	test ViewWebContentWithPredefinedValueInWebContentFieldArchive721 {
		property data.archive.type = "data-archive-web-content-with-predefined-value-in-web-content-field";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		Upgrade.viewWebContentWithPredefinedValueInWebContentField();
	}

	@description = "This is a use case for LRQA-62836."
	@priority = "4"
	test ViewWebContentWithPredefinedValueInWebContentFieldArchive730 {
		property data.archive.type = "data-archive-web-content-with-predefined-value-in-web-content-field";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.3.0";

		Upgrade.viewWebContentWithPredefinedValueInWebContentField();
	}

	@description = "This is a use case for LRQA-62830."
	@priority = "4"
	test ViewWebContentWithPredefinedValueInWebContentFieldArchive71103 {
		property data.archive.type = "data-archive-web-content-with-predefined-value-in-web-content-field";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.1.10.3";
		property test.run.environment = "EE";

		Upgrade.viewWebContentWithPredefinedValueInWebContentField();
	}

	@description = "This is a use case for LRQA-62834."
	@priority = "4"
	test ViewWebContentWithPredefinedValueInWebContentFieldArchive72101 {
		property data.archive.type = "data-archive-web-content-with-predefined-value-in-web-content-field";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.2.10.1";
		property test.run.environment = "EE";

		Upgrade.viewWebContentWithPredefinedValueInWebContentField();
	}

	@description = "This is a use case for LRQA-62836."
	@priority = "4"
	test ViewWebContentWithPredefinedValueInWebContentFieldArchive73101 {
		property data.archive.type = "data-archive-web-content-with-predefined-value-in-web-content-field";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.3.10.1";
		property test.run.environment = "EE";

		Upgrade.viewWebContentWithPredefinedValueInWebContentField();
	}

	@description = "This is a use case for LRQA-62801."
	@priority = "4"
	test ViewWebContentWithPredefinedValueInWebContentFieldArchive701014 {
		property data.archive.type = "data-archive-web-content-with-predefined-value-in-web-content-field";
		property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.version = "7.0.10.14";
		property test.run.environment = "EE";

		Upgrade.viewWebContentWithPredefinedValueInWebContentField();
	}

}