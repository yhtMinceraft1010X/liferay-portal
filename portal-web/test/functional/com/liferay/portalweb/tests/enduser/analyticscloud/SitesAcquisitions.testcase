@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Connect the DXP to AC") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		JSONUser.tearDownNonAdminUsers();

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8344 | Test Summary: Site overview acquisition card shows which channels individuals are coming from"
	@ignore = "true"
	@priority = "5"
	test AssertShowsChannelsIndividualsComingFrom {

		// AC Refactor: data doesn't appear on time
		// AC Refactor ticket: LRAC-9016

		task ("Sign out then sign in as Test Test") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");
		}

		task ("Navigate to the site page directly") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/ac-page");
		}

		task ("Close session") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Sign out then sign in as Test Test") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");
		}

		task ("Navigate to the site page via social channel") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/ac-page?utm_medium=social");
		}

		task ("Close session") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Sign out then sign in as Test Test") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");
		}

		task ("Navigate to the site page via paid search channel") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/ac-page?utm_medium=paidsearch");
		}

		task ("Close session") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Sign out then sign in as Test Test") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");
		}

		task ("Navigate to the site page via organic channel") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/ac-page?utm_medium=organic");
		}

		task ("Close session") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Overview in Sites dashboard") {
			ACNavigation.goToSites();

			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("Select the Last 24 hours in Acquisitions report") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Acquisitions");

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to Channels tab in Acquisitions report") {
			ACNavigation.switchTabInCard(tabName = "Channels");
		}

		task ("View the session entries in Channels tab") {
			ACCards.viewMetricBarStyle(
				backgroundColor = "rgba(80, 210, 160, 1)",
				cardTitle = "Acquisitions",
				entryName = "direct",
				style = "width: 83%;");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "cell-expand",
				entryInfo = "1",
				entryName = "direct");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "column-text-end",
				entryInfo = "25.00%",
				entryName = "direct");

			ACCards.viewMetricBarStyle(
				backgroundColor = "rgba(80, 210, 160, 1)",
				cardTitle = "Acquisitions",
				entryName = "social",
				style = "width: 83%;");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "cell-expand",
				entryInfo = "1",
				entryName = "social");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "column-text-end",
				entryInfo = "25.00%",
				entryName = "social");

			ACCards.viewMetricBarStyle(
				backgroundColor = "rgba(80, 210, 160, 1)",
				cardTitle = "Acquisitions",
				entryName = "organic",
				style = "width: 83%;");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "cell-expand",
				entryInfo = "1",
				entryName = "organic");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "column-text-end",
				entryInfo = "25.00%",
				entryName = "organic");

			ACCards.viewMetricBarStyle(
				backgroundColor = "rgba(80, 210, 160, 1)",
				cardTitle = "Acquisitions",
				entryName = "paid search",
				style = "width: 83%;");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "cell-expand",
				entryInfo = "1",
				entryName = "paid search");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "column-text-end",
				entryInfo = "25.00%",
				entryName = "paid search");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8346 | Test Summary: Assert Sites Acquisition card Channels highest session"
	@priority = "3"
	test AssertSitesAcquisitionCardChannelsHighestSession {
		task ("View the site page") {
			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close session") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Overview in Sites dashboard") {
			ACNavigation.goToSites();

			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("Select the Last 24 hours in Acquisitions report") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Acquisitions");

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to Channels tab in Acquisitions report") {
			ACNavigation.switchTabInCard(tabName = "Channels");
		}

		task ("View the details of direct session entry in Channels tab") {
			ACCards.viewMetricBarStyle(
				backgroundColor = "rgba(80, 210, 160, 1)",
				cardTitle = "Acquisitions",
				entryName = "direct",
				style = "width: 100%;");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "cell-expand",
				entryInfo = "1",
				entryName = "direct");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "column-text-end",
				entryInfo = "100.00%",
				entryName = "direct");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8347 | Test Summary: Assert Sites Acquisition card Referrers highest session"
	@priority = "3"
	test AssertSitesAcquisitionCardReferrersHighestSession {
		task ("Get the portal URL") {
			var portalURL = PropsUtil.get("portal.url");
			var portalURL = StringUtil.replace("${portalURL}", "http://", "");
			var portalURL = StringUtil.replace("${portalURL}", ":8080", "");
		}

		task ("Sign out then sign in as Test Test") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");
		}

		task ("Navigate to the new site via Applications Menu") {
			ApplicationsMenu.gotoSite(site = "Site Name");
		}

		task ("View the site page") {
			Page.viewCurrentPage(pageName = "AC Page");
		}

		task ("Wait for page loading") {
			WaitForPageLoad();
		}

		task ("Close session") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Overview in Sites dashboard") {
			ACNavigation.goToSites();

			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("Select the Last 24 hours in Acquisitions report") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Acquisitions");

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to Referrers tab in Acquisitions report") {
			ACNavigation.switchTabInCard(tabName = "Referrers");
		}

		task ("View the details of session entry in Referrers tab") {
			ACCards.viewMetricBarStyle(
				backgroundColor = "rgba(80, 210, 160, 1)",
				cardTitle = "Acquisitions",
				entryName = "${portalURL}",
				style = "width: 100%;");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "cell-expand",
				entryInfo = "1",
				entryName = "${portalURL}");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "column-text-end",
				entryInfo = "100.00%",
				entryName = "${portalURL}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8348 | Test Summary: Assert Sites Acquisition card Source|Medium highest session"
	@priority = "3"
	test AssertSitesAcquisitionCardSourceAndMediumHighestSession {
		task ("Get the portal URL") {
			var portalURL = PropsUtil.get("portal.url");
			var portalURL = StringUtil.replace("${portalURL}", "http://", "");
			var portalURL = StringUtil.replace("${portalURL}", ":8080", "");
		}

		task ("Sign out then sign in as Test Test") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");
		}

		task ("Navigate to the new site via Applications Menu") {
			ApplicationsMenu.gotoSite(site = "Site Name");
		}

		task ("View the site page") {
			Page.viewCurrentPage(pageName = "AC Page");
		}

		task ("Wait for page loading") {
			WaitForPageLoad();
		}

		task ("Close session") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");
		}

		task ("Navigate to the Overview in Sites dashboard") {
			ACNavigation.goToSites();

			ACIndividualsDashboard.goToOverviewTab();
		}

		task ("Select the Last 24 hours in Acquisitions report") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Acquisitions");

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to Source | Medium tab in Acquisitions report") {
			ACNavigation.switchTabInCard(tabName = "Source | Medium");
		}

		task ("View the details of session entry in Source | Medium tab") {
			ACCards.viewMetricBarStyle(
				backgroundColor = "rgba(80, 210, 160, 1)",
				cardTitle = "Acquisitions",
				entryName = "${portalURL} / referral",
				style = "width: 100%;");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "cell-expand",
				entryInfo = "1",
				entryName = "${portalURL} / referral");

			ACCards.viewTableEntryInfo(
				cardTitle = "Acquisitions",
				column = "column-text-end",
				entryInfo = "100.00%",
				entryName = "${portalURL} / referral");
		}
	}

}