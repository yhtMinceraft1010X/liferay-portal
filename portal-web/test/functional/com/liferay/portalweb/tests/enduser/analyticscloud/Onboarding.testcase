@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Create a new workspace") {
			ACUtils.launchAC(
				emailList = "acworkspace@liferay.com",
				workspaceName = "New AC Workspace");
		}

		task ("Set up instance") {
			TestCase.setUpPortalInstance();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: LRAC-8720 | Automation ID: LRAC-10622 | Test Summary: Modal is displayed on first access to a new workspace"
	@priority = "5"
	test ModalDisplayedWhenFirstAccessToWorkspace {
		property test.name.skip.portal.instance = "Onboarding#ModalDisplayedWhenFirstAccessToWorkspace";

		var supportedFPVersionList = "DXP 7.3 Fix Pack 1,DXP 7.2 Fix Pack 11,DXP 7.1 Fix Pack 22,DXP 7.0 Fix Pack 98";

		task ("Check the first screen of the onboarding modal") {
			ACUtils.viewGenericText(textValueList = "Welcome to Analytics Cloud,Just a few more steps to set up your workspace.");
		}

		task ("Navigate to next page") {
			Button.clickNext();
		}

		task ("Check the onboarding connection modal information") {
			task ("Check if the modal title and the copy token button are present") {
				ACUtils.viewGenericText(textValueList = "Connect Your DXP Analytics");

				AssertElementPresent(locator1 = "ACSettings#COPY_TOKEN_BUTTON");
			}

			task ("Check the question mark message") {
				MouseOver(locator1 = "Icon#TOOLTIP");

				ACUtils.viewGenericText(textValueList = "DXP Fix Pack Requirements,Minimum Fix Pack Version Required for Full Functionality");
			}

			task ("Check fix pack versions") {
				for (var key_version : list "${supportedFPVersionList}") {
					AssertElementPresent(locator1 = "ACSettings#FIX_PACK_DROPDOWN");
				}
			}

			task ("Check skip button") {
				ACUtils.viewGenericButton(buttonName = "Skip");
			}
		}

		task ("Click on 'click here' and check if a new tab with connection documentation appears") {
			ACUtils.clickGenericHyperlink(hyperlinkText = "Click here");

			SelectWindow(locator1 = "title=Connecting Liferay DXP to Analytics Cloud — Liferay Learn");

			ACUtils.viewGenericText(textValueList = "Documentation,Connecting Liferay DXP to Analytics Cloud");
		}

		task ("Switch to the AC tab") {
			SelectWindow(locator1 = "title=No Properties Available - Analytics Cloud");
		}

		task ("Copy the token from AC") {
			Copy(locator1 = "ACSettings#TOKEN_INPUT_FIELD");
		}

		task ("Go to DXP and connect the DXP to AC") {
			ACUtils.launchDXP();

			ACDXPSettings.connectDXPtoAnalyticsCloud();
		}

		// Now we are going to add a new DXP Data Source and validate the info shown in the connection modal from Settings.

		task ("Disconnect the DXP from the AC and go to the AC create a new data source") {
			ACDXPSettings.disconnectDXPFromAnalyticsCloud();

			ACUtils.launchAC(workspaceName = "New AC Workspace");

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Check the connection modal information when opened in Settings") {
			task ("Check if the modal title and the copy token button are present") {
				ACUtils.viewGenericText(textValueList = "Connect Your DXP Analytics");

				AssertElementPresent(locator1 = "ACSettings#COPY_TOKEN_BUTTON");
			}

			task ("Check the question mark message") {
				MouseOver(locator1 = "Icon#TOOLTIP");

				ACUtils.viewGenericText(textValueList = "DXP Fix Pack Requirements,Minimum Fix Pack Version Required for Full Functionality");
			}

			task ("Check fix pack versions") {
				for (var key_version : list "${supportedFPVersionList}") {
					AssertElementPresent(locator1 = "ACSettings#FIX_PACK_DROPDOWN");
				}
			}

			task ("Check cancel button") {
				ACUtils.viewGenericButton(buttonName = "Cancel");
			}

			task ("Check skip button is not present") {
				Button.viewNotPresent(button = "Skip");
			}
		}

		task ("Click on 'click here' and check if a new tab with connection documentation appears") {
			ACUtils.clickGenericHyperlink(hyperlinkText = "Click here");

			SelectWindow(locator1 = "title=Connecting Liferay DXP to Analytics Cloud — Liferay Learn");

			ACUtils.viewGenericText(textValueList = "Documentation,Connecting Liferay DXP to Analytics Cloud");
		}
	}

}