@component-name = "portal-questions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Questions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Questions Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "2",
			groupName = "Guest",
			layoutName = "Questions Page",
			widgetName = "Questions");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Message Boards");

			if (IsElementPresent(locator1 = "Questions#QUESTIONS_LIST")) {
				Questions.tearDown();
			}
		}
	}

	@description = "Validate if a user can answer a question that was posted before the workflow was enabled."
	@priority = "4"
	test CanAddAnswerViaJSONAfterEnablingWorkflow {
		property test.name.skip.portal.instance = "QuestionsWorkflow#CanAddAnswerViaJSONAfterEnablingWorkflow";

		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		JSONQuestions.addQuestion(
			bodyField = "Body AddQuestion",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			titleField = "Title AddQuestion");

		Questions.openToConfigInSystemSettings(portlet = "Message Boards Moderation Workflow");

		SystemSettings.configureSystemSetting(
			enableSetting = "true",
			settingFieldName = "Enable Message Boards Moderation");

		JSONQuestions.addAnswer(
			categoryName = "Questions Test Category",
			groupName = "Guest",
			replyBody = "This is my answer",
			threadSubject = "Title AddQuestion",
			titleField = "Title AddQuestion");

		JSONQuestions.getAnswerTitle(
			categoryName = "Questions Test Category",
			groupName = "Guest",
			replyTitle = "Title AddQuestion",
			titleField = "Title AddQuestion");

		JSONQuestions.getApprovedStatus(
			categoryName = "Questions Test Category",
			groupName = "Guest",
			titleField = "Title AddQuestion");
	}

	@description = "Validate if a question can be approved."
	@priority = "4"
	test CanApproveQuestion {
		property test.name.skip.portal.instance = "QuestionsWorkflow#CanApproveQuestion";

		JSONRole.assignRoleToUser(
			roleTitle = "Portal Content Reviewer",
			userEmailAddress = "test@liferay.com");

		Questions.openToConfigInSystemSettings(portlet = "Message Boards Moderation Workflow");

		SystemSettings.configureSystemSetting(
			enableSetting = "true",
			settingFieldName = "Enable Message Boards Moderation");

		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		JSONQuestions.addQuestion(
			bodyField = "Body AddQuestion",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			titleField = "Title AddQuestion");

		Questions.openToQuestionDetails(
			layoutName = "questions-page",
			questionsTitle = "title-addquestion",
			siteURLKey = "guest",
			topicName = "questions-test-category");

		Questions.viewStatus(status = "pending");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Title AddQuestion",
			workflowAssetType = "Message Boards Message",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Title AddQuestion",
			workflowAssetType = "Message Boards Message",
			workflowTask = "Review");

		JSONQuestions.addAnswer(
			categoryName = "Questions Test Category",
			groupName = "Guest",
			replyBody = "This is my answer",
			threadSubject = "Title AddQuestion",
			titleField = "Title AddQuestion");

		JSONQuestions.getAnswerTitle(
			categoryName = "Questions Test Category",
			groupName = "Guest",
			replyTitle = "Title AddQuestion",
			titleField = "Title AddQuestion");
	}

	@description = "Validate if a user can view a question with history router when enabling MB Moderation."
	@priority = "3"
	test CanSetHistoryRouterWithWorkflow {
		property test.name.skip.portal.instance = "QuestionsWorkflow#CanSetHistoryRouterWithWorkflow";

		Questions.openToConfigInSystemSettings(portlet = "Questions");

		SystemSettings.editTextAreaSetting(
			settingName = "Set Base Path for History Router",
			settingValue = "/questions-page");

		SystemSettings.saveConfiguration();

		Questions.openToConfigInSystemSettings(portlet = "Message Boards Moderation Workflow");

		SystemSettings.configureSystemSetting(
			enableSetting = "true",
			settingFieldName = "Enable Message Boards Moderation");

		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		JSONQuestions.addQuestion(
			bodyField = "Body AddQuestion",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			titleField = "Title AddQuestion");

		Navigator.gotoPage(pageName = "Questions Page");

		Questions.gotoCategory(categoryName = "Questions Test Category");

		Questions.viewStatus(status = "pending");

		AssertLocation(value1 = "http://localhost:8080/web/guest/questions-page/questions/questions-test-category");
	}

	@description = "Validate if the pending status can be returned through JSON once MB moderation Workflow is enabled."
	@priority = "4"
	test PendingStatusCanBeReturnedThroughJSON {
		property test.name.skip.portal.instance = "QuestionsWorkflow#PendingStatusCanBeReturnedThroughJSON";

		Questions.openToConfigInSystemSettings(portlet = "Message Boards Moderation Workflow");

		SystemSettings.configureSystemSetting(
			enableSetting = "true",
			settingFieldName = "Enable Message Boards Moderation");

		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		JSONQuestions.addQuestion(
			bodyField = "Body AddQuestion",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			titleField = "Title AddQuestion");

		JSONQuestions.getPendingStatus(
			categoryName = "Questions Test Category",
			groupName = "Guest",
			titleField = "Title AddQuestion");
	}

}