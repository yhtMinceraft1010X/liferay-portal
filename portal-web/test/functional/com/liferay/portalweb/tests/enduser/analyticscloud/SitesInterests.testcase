@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		JSONUser.tearDownNonAdminUsers();

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8283 | Test Summary: Site overview interests card shows what the top interests are"
	@priority = "5"
	test ShowsSitesTopInterests {
		var pageNameList = "sports,technology,science";

		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Add specific pages and web contents to Site as interest topics") {
			for (var layoutName : list "${pageNameList}") {
				ACUtils.addPage(layoutName = "${layoutName}");

				ACUtils.createWCAndAddToPage(
					layoutName = "${layoutName}",
					webContentTitle = "Web Content AC Title ${layoutName}");
			}
		}

		task ("Add a new user and sync the Contact Data") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			ACDXPSettings.syncNewContactData();
		}

		task ("View new pages in site as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			for (var pageName : list "${pageNameList}") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Assert Interests card is set to Last 30 days by default and there are no results") {
			ACNavigation.goToSites();

			ACCards.viewCards(cardTitle = "Interests");

			ACTimeFilter.assertCurrentTimeFilterRange(timeFilterRange = "Last 30 days");

			ACInterests.assertNoCurrentInterests();
		}

		task ("View Interests card with top interests") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Interests");

			ACTimeFilter.setLast24Hours();

			for (var interests : list "site name,sports,technology") {
				ACInterests.viewInterests(interestName = "${interests}");
			}
		}
	}

}