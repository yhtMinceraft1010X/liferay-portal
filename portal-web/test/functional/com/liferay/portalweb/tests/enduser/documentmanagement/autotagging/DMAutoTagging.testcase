@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Auto Tagging";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		AutoTagging.enableAutoTagging(enableAutoTaggingFor = "System Settings");

		AutoTagging.enableTensorFlow();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			PagesAdmin.tearDownCP();

			Site.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This test asserts that an image is auto-tagged during upload when Auto-Tagging is enabled."
	@priority = "5"
	@refactordone
	test CanAddAutoTag {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "DMAutoTagging#CanAddAutoTag";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document JPG",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_4.jpg");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "DM Document JPG",
			groupName = "Guest",
			siteURLKey = "guest");

		DMDocument.viewCP(dmDocumentTitle = "DM Document JPG");

		DMDocument.viewTagInfo(tagName = "carton");
	}

	@description = "This is a test for LPS-93334. It checks that an ODT file can be auto-tagged."
	@priority = "4"
	test CanAddAutoTagForODTFile {
		property test.name.skip.portal.instance = "DMAutoTagging#CanAddAutoTagForODTFile";

		AutoTagging.enableOpenNLP(
			assetType = "Document",
			confidenceThreshold = "0.05");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document ODT",
			groupName = "Guest",
			mimeType = "application/vnd.oasis.opendocument.text",
			sourceFileName = "Alice Adventures in Wonderland.odt");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "DM Document ODT",
			groupName = "Guest",
			siteURLKey = "guest");

		DMDocument.viewCP(dmDocumentTitle = "DM Document ODT");

		DMDocument.viewTagInfo(tagName = "alice");
	}

	@description = "This test asserts that auto-tags added to an image uploaded on a staged site gets published to Live."
	@priority = "4"
	@refactordone
	test CanAssertImageAutoTagAfterPublishToLive {
		property test.name.skip.portal.instance = "DMAutoTagging#CanAssertImageAutoTagAfterPublishToLive";

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Documents and Media Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name",
			layoutName = "Documents and Media Page",
			widgetName = "Documents and Media");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/documents-and-media-page");

		DMDocument.enableActionsMenuOnPortlet();

		JSONStaging.enableLocalStaging(groupName = "Site Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "Document Description",
			dmDocumentTitle = "Document Title",
			groupName = "Site Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_4.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name-staging");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document Title");

		DMDocument.viewCP(dmDocumentTitle = "Document Title");

		DMDocument.viewTagInfo(tagName = "carton");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name-staging/documents-and-media-page");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/documents-and-media-page");

		DMDocument.viewPG(
			dmDocumentDescription = "Document Description",
			dmDocumentTitle = "Document Title");

		DMDocument.viewTagInfo(tagName = "carton");
	}

	@description = "This test covers LPS-101885. It asserts that an auto-tagged document can be deleted when OpenNLP Auto-Tagging is enabled."
	@priority = "4"
	@refactordone
	test CanDeleteAutoTaggedDocument {
		property test.name.skip.portal.instance = "DMAutoTagging#CanDeleteAutoTaggedDocument";

		AutoTagging.enableOpenNLP(
			assetType = "Document",
			confidenceThreshold = "0.05");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Alice's Adventures in Wonderland.docx",
			dmDocumentTitle = "DM Document DOCX",
			groupName = "Guest",
			siteURLKey = "guest");

		JSONDocument.deleteFile(
			dmDocumentTitle = "DM Document DOCX",
			groupName = "Guest");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		AssertConsoleTextNotPresent(value1 = "javax.portlet.PortletException");

		DMDocument.viewDefault();
	}

	@description = "This test asserts that no auto-tags are generated for manually tagged images."
	@priority = "4"
	@refactordone
	test CannotAddAutoTagForManuallyTaggedImage {
		property test.name.skip.portal.instance = "DMAutoTagging#CannotAddAutoTagForManuallyTaggedImage";

		JSONDocument.addFileWithUploadedFile(
			assetTagNames = "manualtag",
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document JPG",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_4.jpg");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "DM Document JPG",
			groupName = "Guest",
			siteURLKey = "guest");

		DMDocument.viewCP(dmDocumentTitle = "DM Document JPG");

		DMDocument.viewTagInfo(tagName = "manualtag");

		DMDocument.viewNoTagInfo(tagName = "carton");
	}

	@description = "This test asserts that auto-tags can be deleted."
	@priority = "4"
	@refactordone
	test CanRemoveImageAutoTag {
		property test.name.skip.portal.instance = "DMAutoTagging#CanRemoveImageAutoTag";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "Auto Tagged Image Description",
			dmDocumentTitle = "Auto Tagged Image",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_4.jpg");

		DMNavigator.openToEditEntryInSite(
			dmDocumentTitle = "Auto Tagged Image",
			groupName = "Guest",
			siteURLKey = "guest");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.removeTag(tagName = "carton");

		Button.clickPublish();

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "Auto Tagged Image",
			groupName = "Guest",
			siteURLKey = "guest");

		DMDocument.viewCP(dmDocumentTitle = "Auto Tagged Image");

		DMDocument.viewNoTagInfo(tagName = "carton");
	}

	@description = "This test covers LPS-94209. It asserts that OpenNLP auto-tags can be deleted."
	@priority = "4"
	@refactordone
	test CanRemoveOpenNLPAutoTag {
		property test.name.skip.portal.instance = "DMAutoTagging#CanRemoveOpenNLPAutoTag";

		AutoTagging.enableOpenNLP(
			assetType = "Document",
			confidenceThreshold = "0.05");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Alice's Adventures in Wonderland.docx",
			dmDocumentTitle = "DM Document DOCX",
			groupName = "Guest",
			siteURLKey = "guest");

		DMNavigator.openToEditEntryInSite(
			dmDocumentTitle = "DM Document DOCX",
			groupName = "Guest",
			siteURLKey = "guest");

		Panel.expandPanel(panel = "Categorization");

		for (var tagName : list "alice,adventures") {
			AssetCategorization.removeTag(tagName = "${tagName}");
		}

		Button.clickPublish();

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "DM Document DOCX",
			groupName = "Guest",
			siteURLKey = "guest");

		DMDocument.viewCP(dmDocumentTitle = "DM Document DOCX");

		for (var tagName : list "alice,adventures") {
			DMDocument.viewNoTagInfo(tagName = "${tagName}");
		}
	}

}