@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This is a test for LPS-136855. It checks that a pending file cannot be added to another asset."
	@priority = "4"
	test CannotAddPendingFileToAsset {
		property portal.acceptance = "true";

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Web Content Display");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMNavigator.openToFolderInAdmin(
			dmFolderName = "DM Folder Name",
			groupName = "Site Name",
			siteURLKey = "site-name");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.png",
			dmDocumentTitle = "Document_1.png");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		WebContentDisplayPortletNavigator.gotoAdd();

		WebContent.addCP(
			embedImage = "true",
			folderName = "DM Folder Name",
			imageFileName = "Document_1.png",
			pendingEntry = "true",
			siteName = "Site Name");
	}

	@description = "This is a test for LPS-84593. It ensures that a user cannot delete the dismissed notification after deleting the pending file."
	@priority = "5"
	test CannotDeleteDismissedNotificationAfterDeletingPendingFile {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMFolder.configureWorkflowCP(
			dmFolderName = "homeFolder",
			homeFolder = "true",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.png",
			dmDocumentTitle = "Document_1.png");

		JSONDocument.moveToRecycleBin(
			dmDocumentTitle = "Document_1.png",
			groupName = "Guest");

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewDeletedContent(
			contentBody = "Notification for My Workflow Tasks was deleted.",
			noOptions = "true");
	}

	@description = "This is a test for LPS-136854. It checks that the single approver workflow can be removed from a folder."
	@priority = "3"
	test CanRemoveWorkflowFromFolder {
		JSONGroup.addGroup(groupName = "Site Name");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMNavigator.openToFolderInAdmin(
			dmFolderName = "DM Folder Name",
			groupName = "Site Name",
			siteURLKey = "site-name");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg");

		DMDocument.viewStatus(
			dmDocumentStatus = "Pending",
			dmDocumentTitle = "Document_1.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "No Workflow",
			workflowRestriction = "Default Workflow");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpeg");

		DMNavigator.openToFolderInAdmin(
			dmFolderName = "DM Folder Name",
			groupName = "Site Name",
			siteURLKey = "site-name");

		DMDocument.viewStatus(
			dmDocumentStatus = "Approved",
			dmDocumentTitle = "DM Document Title");
	}

	@description = "This is a test for LPS-136853. It checks that a file can be resubmitted after it has been rejected."
	@priority = "4"
	test CanResubmitRejectedDocument {
		property portal.acceptance = "true";

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMNavigator.openToFolderInAdmin(
			dmFolderName = "DM Folder Name",
			groupName = "Guest",
			siteURLKey = "guest");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Document_1.doc",
			workflowAssetType = "Document",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Document_1.doc",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Notifications.gotoNotifications();

		AssertClick(
			locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
			value1 = "Your submission was rejected by Test Test, please modify and resubmit.");

		Workflow.gotoPreviewEdit();

		Button.clickSubmitForPublication();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "Document_1.doc",
			workflowAssetType = "Document",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Document_1.doc",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Document_1.doc",
			workflowAssetType = "Document",
			workflowTask = "Review");

		DMNavigator.openToFolderInAdmin(
			dmFolderName = "DM Folder Name",
			groupName = "Guest",
			siteURLKey = "guest");

		DMDocument.viewStatus(
			dmDocumentStatus = "Approved",
			dmDocumentTitle = "Document_1.doc");
	}

}