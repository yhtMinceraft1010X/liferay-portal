@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Fragments";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-147393. The user could add advanced options in fragment's configuration and the advanced options are grouped in collapsable section."
	@priority = "5"
	test ConfigureFragmentAdvancedSettings {
		task ("Add a fragment collection") {
			JSONFragment.addFragmentCollection(
				groupName = "Test Site Name",
				name = "Collection Name");
		}

		task ("Navigate to the fragment collection") {
			FragmentsAdminNavigator.openFragmentsAdmin(siteURLKey = "test-site-name");

			FragmentsAdminNavigator.gotoCollection(collectionName = "Collection Name");
		}

		task ("Add a fragment with colorPicker configuration") {
			FragmentsAdmin.addFragment(fragmentName = "Fragment Name");

			FragmentsEditor.gotoConfigurationTab();

			var jsonSnippet = '''
{
	fieldSets: [
		{
			configurationRole: 'advanced',
			fields: [
				{
					dataType: 'string',
					defaultValue: '1',
					description: '',
					label: 'Advanced Config Field',
					name: 'advancedConfigField',
					type: 'select',
					typeOptions: {
						validValues: [
							{label: '0', value: '0'},
							{label: '1', value: '1'},
						],
					},
				},
			],
			label: 'Advanced Config Fieldset',
		}
	]
}			''';

			FragmentsEditor.typeConfigurationEditor(content = "${jsonSnippet}");

			FragmentsEditor.waitForAutoSave();

			FragmentsEditor.gotoCodeTab();

			var htmlSnippet = '''
<div class="fragment-name">
	Fragment Example
</div>			''';

			FragmentsEditor.typeHtmlEditor(content = "${htmlSnippet}");

			FragmentsEditor.waitForAutoSave();

			FragmentsEditor.publish();
		}

		task ("Add a new fragment to a content page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Collection Name",
				fragmentName = "Fragment Name");
		}

		task ("Change the value of Advanced Config Field to 0") {
			PageEditor.gotoAdvanced(fragmentName = "Fragment Name");

			Select(
				key_fieldLabel = "Advanced Config Field",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "0");

			PageEditor.waitForAutoSave();
		}

		task ("View the Advanced Config Field grouped in collapsable Advancd Config Fieldset") {
			Panel.collapsePanel(panel = "Advanced Config Fieldset");

			AssertElementNotPresent(
				key_fieldLabel = "Advanced Config Field",
				locator1 = "Select#GENERIC_SELECT_FIELD");
		}

		task ("View the Advanced Config Field is persisted after publish") {
			PageEditor.clickPublish();

			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.gotoAdvanced(fragmentName = "Fragment Name");

			AssertSelectedLabel(
				key_fieldLabel = "Advanced Config Field",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "0");
		}
	}

	@description = "This is a test for LPS-147396. Hide from Site Search Results could hide result from search."
	@priority = "5"
	test HideResultFromSearchInAdvancedSettings {
		task ("Add a Home page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Home",
				type = "content");

			JSONLayout.publishLayout(
				groupName = "Test Site Name",
				layoutName = "Home");
		}

		task ("Add a Search Results widget to a Search page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Search");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Search",
				widgetName = "Search Results");
		}

		task ("Add a Button fragment to content page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Button");
		}

		task ("Publish the page") {
			PageEditor.clickPublish();
		}

		task ("Search 'Go Somewhere' from page search bar, assert a search result about Button fragment") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Home",
				siteName = "Test Site Name");

			SearchPortlets.searchEmbedded(searchTerm = "Go Somewhere");

			SearchResultPortlet.viewSearchResults(
				searchAssetTitle = "Go...Somewhere",
				searchAssetType = "Page");
		}

		task ("Check Hide from Site Search Results checkbox in Advanced Settings") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.gotoAdvanced(fragmentName = "Button");

			PageEditor.configureFragment(hideFromSiteSearchResults = "true");
		}

		task ("Publish the page") {
			PageEditor.clickPublish();
		}

		task ("Search 'Go Somewhere' from page search bar, assert no search result about Button fragment") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Home",
				siteName = "Test Site Name");

			SearchPortlets.searchEmbedded(searchTerm = "Go Somewhere");

			SearchResultPortlet.viewNoSearchResults(searchTerm = "Go Somewhere");
		}
	}

	@description = "This is a test for LPS-147396. Hide from Site Search Results could hide single text in multiple results."
	@priority = "3"
	test HideSingleResultInMultipleResultsInAdvancedSettings {
		task ("Add a Home page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Home",
				type = "content");

			JSONLayout.publishLayout(
				groupName = "Test Site Name",
				layoutName = "Home");
		}

		task ("Add a Search Results widget to a Search page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Search");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Search",
				widgetName = "Search Results");
		}

		task ("Add a Paragraph fragment to a content page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Paragraph");
		}

		task ("Edit the inline content of Paragraph") {
			PageEditor.gotoTab(tabName = "Browser");

			Navigator.gotoNavTab(navTab = "Page Content");

			PageEditor.editFragmentTextViaPageContentPanel(
				itemName = "A paragraph is a self-contained unit of a discourse in writing dealing with a particular point or idea. Paragraphs are usually an expected part of formal writing, used to organize longer prose.",
				text = "This has footer text and should not be in search results");

			PageEditor.waitForAutoSave();

			PageEditor.clickPublish();
		}

		task ("Create a couple more content pages with the same Paragraph fragment") {
			for (var pageNum : list "1,2,3") {
				PagesAdmin.openPagesAdmin(siteURLKey = "test-site-name");

				PagesAdmin.gotoPageEllipsisMenuItem(
					menuItem = "Copy Page",
					pageName = "Test Page Name");

				SelectFrame(locator1 = "IFrame#MODAL_BODY");

				PortletEntry.inputName(name = "Page Name ${pageNum}");

				Button.clickAdd();

				SelectFrameTop();

				JSONLayout.publishLayout(
					groupName = "Test Site Name",
					layoutName = "Page Name ${pageNum}");
			}
		}

		task ("Search 'footer' from page search bar, the fragments on all the pages show up in the search results") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Home",
				siteName = "Test Site Name");

			SearchPortlets.searchEmbedded(searchTerm = "footer");

			SearchResultPortlet.viewSearchResults(
				searchAssetTitle = "Test Page Name",
				searchAssetType = "Page");

			for (var pageNum : list "1,2,3") {
				SearchResultPortlet.viewSearchResults(
					searchAssetTitle = "Page Name ${pageNum}",
					searchAssetType = "Page");
			}
		}

		task ("Check Hide from Site Search Results checkbox in Advanced Settings") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.gotoAdvanced(fragmentName = "Paragraph");

			PageEditor.configureFragment(hideFromSiteSearchResults = "true");

			PageEditor.clickPublish();
		}

		task ("Search 'footer' from page search bar, assert the page with Hide from Site Search Results checked does not appear in the search result") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Home",
				siteName = "Test Site Name");

			SearchPortlets.searchEmbedded(searchTerm = "footer");

			SearchResultPortlet.viewSearchResultNotPresent(
				searchAssetTitle = "Test Page Name",
				searchAssetType = "Page");

			for (var pageNum : list "1,2,3") {
				SearchResultPortlet.viewSearchResults(
					searchAssetTitle = "Page Name ${pageNum}",
					searchAssetType = "Page");
			}
		}
	}

	@description = "This is a test for LPS-150921. The user could view message when the fragment is hidden. The Hide from Site Search Results is not grouped in fieldset on Advanced panel."
	@priority = "4"
	test ViewMessageWhenHideFragment {
		task ("Given a Page creator has a content page with a Heading fragment") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");
		}

		task ("When the Page Creator accesses to the Advanced panel of Heading fragment") {
			PageEditor.gotoAdvanced(fragmentName = "Heading");
		}

		task ("Then the Page Creator could view the Hide from Site Search Results is not grouped in fieldset") {
			AssertElementNotPresent(locator1 = "//div[contains(@class,'page-editor__collapse')]//label[contains(.,'Hide from Site Search Results')]//input[@type='checkbox']");
		}

		task ("When the Page Creator hides the Heading via General panel") {
			PageEditor.hideFragmentViaPageStyles(fragmentName = "Heading");
		}

		task ("Then the Page Creator could view warning message on General panel") {
			AssertTextEquals(
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_SECONDARY_TEXT",
				value1 = "This fragment is still visible on search. You can hide it from search in the advanced tab.");
		}
	}

	@description = "This is a test for LPS-150921. The user could view message when the parent fragment is hidden from search."
	@priority = "5"
	test ViewMessageWhenParentFragmentIsHiddenFromSiteSearchResults {
		task ("Given a Page creator has a content page with fragment composition") {
			task ("Add a Container to page") {
				ContentPagesNavigator.openEditContentPage(
					pageName = "Test Page Name",
					siteName = "Test Site Name");

				PageEditor.addFragment(
					collectionName = "Layout Elements",
					fragmentName = "Container");
			}

			task ("Add a Heading fragment into Container") {
				PageEditor.addElementToContainer(
					collectionName = "Basic Components",
					fragmentName = "Heading",
					navTab = "Fragments");
			}
		}

		task ("When the Page creator hides the Container from Site Search Results") {
			PageEditor.editLayoutContainer(
				hideFromSiteSearchResults = "true",
				panel = "Advanced");
		}

		task ("Then the Page creator could view warning message on Advanced panel of Heading fragment") {
			PageEditor.gotoAdvanced(fragmentName = "Heading");

			AssertTextEquals(
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_SECONDARY_TEXT",
				value1 = "This configuration is inherited.");
		}

		task ("When the Page creator click the Go to parent fragment to edit link") {
			Button.click(button = "Go to parent fragment to edit.");
		}

		task ("Then the Page creator should access to the Advanced panel of Container") {
			AssertVisible(
				key_fieldLabel = "HTML Tag",
				locator1 = "FormFields#LABEL");

			PageEditor.viewFragmentHeaderVisible(fragmentName = "Container");
		}
	}

}