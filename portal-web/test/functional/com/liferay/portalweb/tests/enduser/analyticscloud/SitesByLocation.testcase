@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: LRAC-6637 | Automation ID: LRAC-8309 | Test Summary: Private IPs reported as Local Network"
	@priority = "4"
	test CanprivateIpsReportedAsLocalNetwork {
		property portal.upstream = "quarantine";

		// AC Quarantine Reason: Not finding local network under geolocation

		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Create a blog and add to page") {
			ACUtils.createBlogsAndAddToPage();
		}

		task ("View the page and blog") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Go to the sites overview") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Overview");
		}

		task ("View the Sessions by Location card and filter the time") {
			ACCards.viewCards(cardTitle = "Sessions by Location");

			ACTimeFilter.clickTimeFilterButton(cardName = "Sessions by Location");

			ACTimeFilter.setLast24Hours();
		}

		task ("Assert location") {
			ACCards.viewGeomapTableText(
				cardTitle = "Sessions by Location",
				leftText = "Local Network",
				rightText = "1 100%");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8308 | Test Summary: Top 5 locations by session"
	@ignore = "true"
	@priority = "3"
	test LocationsBySession {

		// TODO LRAC-8308 LocationsBySession pending implementation

	}

}