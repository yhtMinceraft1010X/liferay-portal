@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8300 | Test Summary: Search for a property when assigning sites to a property"
	@priority = "5"
	test SearchPropertyToAssignSite {
		task ("Get site assigned property name") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Navigate to AC Settings") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();
		}

		task ("Navigate to properties and add a new property") {
			ACSettings.goToProperties();

			ACProperties.addNewProperty(propertyName = "AC Properties");
		}

		task ("Launch DXP and navigate to Instance settings") {
			ACUtils.launchDXP();

			ACDXPSettings.goToInstanceSettingsAC();
		}

		task ("Navigate and search the new property") {
			ACDXPSettings.navToSyncedSitesMenu();

			ACDXPSettings.searchACItem(searchItem = "AC Properties");
		}

		task ("Assert property name") {
			AssertTextEquals(
				key_tooltipMessage = "AC Properties",
				locator1 = "WorkflowReassignModal#PERMISSION_TOOLTIP_MESSAGE",
				value1 = "AC Properties");
		}
	}

	@description = "Bug: LRAC-8557 | Automation ID: LRAC-11056 | Test Summary: Search using special characters shown in search overview"
	@priority = "4"
	test SearchTermWithSpecialCharacters {
		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();
		}

		task ("Search keywords on DXP Search Bar") {
			Navigator.openURL();

			for (var keyword : list "atenção com a criança,子供との注意,atención al niño") {
				ContentDashboard.searchValue(webContentTitle = "${keyword}");
			}
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Navigate to AC workspace") {
			ACUtils.launchAC();
		}

		task ("Switch to new property in AC") {
			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Go to sites pages tab") {
			ACNavigation.goToSites();

			ACSites.viewSiteOverviewDashboardCards();
		}

		task ("View the new report") {
			ACCards.viewCards(cardTitle = "Search Terms");

			ACTimeFilter.clickTimeFilterButton(cardName = "Search Terms");

			ACTimeFilter.setLast24Hours();
		}

		task ("Assert Keywords Searched") {
			for (var keyword : list "atenção com a criança,子供との注意,atención al niño") {
				ACUtils.viewGenericText(textValueList = "${keyword}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8298 | Test Summary: Site overview search terms shows what keywords are being searched for"
	@priority = "5"
	test ShowsKeywordsBeingSearched {
		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();
		}

		task ("Search keywords on DXP Search Bar") {
			Navigator.openURL();

			for (var keyword : list "liferay,ac") {
				ContentDashboard.searchValue(webContentTitle = "${keyword}");
			}
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Navigate to AC workspace") {
			ACUtils.launchAC();
		}

		task ("Switch to new property in AC") {
			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Go to sites pages tab") {
			ACNavigation.goToSites();

			ACSites.viewSiteOverviewDashboardCards();
		}

		task ("View the new report") {
			ACCards.viewCards(cardTitle = "Search Terms");

			ACTimeFilter.clickTimeFilterButton(cardName = "Search Terms");

			ACTimeFilter.setLast24Hours();
		}

		task ("Assert Keywords Searched") {
			for (var keyword : list "liferay,ac") {
				AssertElementPresent(
					key_keyword = "${keyword}",
					locator1 = "ACSites#SEARCHED_KEYWORD");
			}
		}
	}

}