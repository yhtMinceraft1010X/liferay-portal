@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Automation ID: LRAC-9065 | Test Summary: Admin can delete users"
	@priority = "3"
	test AdminCanDeleteUser {
		task ("Create a new user and check if it is present in the table") {
			ACNavigation.goToSettings();

			ACSettings.goToUserManagement();

			ACSettings.addUser(userInvite = "user@liferay.com");

			ACUtils.searchBar(searchItem = "user@liferay.com");

			ACSettings.assertUserListEmail(userEmail = "user@liferay.com");
		}

		task ("Login with the admin user") {
			ACWorkspace.signOut();

			ACLogin.loginAs(
				emailAddress = "michelle.hoshi@faro.io",
				password = "test");
		}

		task ("Check if the admin user can delete another user") {
			ACWorkspace.openWorkspace();

			ACNavigation.goToSettings();

			ACSettings.goToUserManagement();

			ACUtils.searchBar(searchItem = "user@liferay.com");

			ACSettings.assertUserListEmail(userEmail = "user@liferay.com");

			ACSettings.deleteUser(userDelete = "user@liferay.com");
		}

		task ("Assert user not present") {
			ACUtils.clearSearchBar();

			ACSettings.assertUserNotPresent(userEmail = "user@liferay.com");
		}
	}

	@description = "Automation ID: LRAC-9064 | Test Summary: Select multiple users to delete at once"
	@priority = "3"
	test CanSelectAndDeleteUsers {
		task ("Create two new user and select both") {
			ACNavigation.goToSettings();

			ACSettings.goToUserManagement();

			ACSettings.addUser(userInvite = "user1@liferay.com");

			ACSettings.addUser(userInvite = "user2@liferay.com");

			Click(
				locator1 = "ACSettings#SELECT_USER_EMAIL",
				userEmail = "user1@liferay.com");

			Click(
				locator1 = "ACSettings#SELECT_USER_EMAIL",
				userEmail = "user2@liferay.com");
		}

		task ("Deletes the two selected users and checks if they were deleted") {
			Click(locator1 = "ACSettings#DELETE_USER");

			Click(locator1 = "ACSettings#CONTINUE_BUTTON");

			ACSettings.assertUserNotPresent(userEmail = "user1@liferay.com");

			ACSettings.assertUserNotPresent(userEmail = "user2@liferay.com");
		}
	}

	@description = "Automation ID: LRAC-9063 | Test Summary: Delete button to manage user permissions"
	@priority = "5"
	test DeleteButtonToDeleteUserPermissions {
		task ("Create two new users") {
			ACNavigation.goToSettings();

			ACSettings.goToUserManagement();

			ACSettings.addUser(userInvite = "user1@liferay.com");

			ACSettings.addUser(userInvite = "user2@liferay.com");
		}

		task ("Delete the user by the icon beside and check if it was deleted") {
			Click(
				locator1 = "ACSettings#SELECT_USER_EMAIL",
				userEmail = "user1@liferay.com");

			Click(locator1 = "ACSettings#DELETE_USER");

			Click(locator1 = "ACSettings#CONTINUE_BUTTON");

			ACSettings.assertUserNotPresent(userEmail = "user1@liferay.com");
		}

		task ("Delete the user through the icon at the top of the table and check if it was deleted") {
			ACSettings.deleteUser(userDelete = "user2@liferay.com");

			ACSettings.assertUserNotPresent(userEmail = "user2@liferay.com");
		}
	}

	@description = "Automation ID: LRAC-9066 | Test Summary: Member cannot delete users"
	@priority = "3"
	test MemberCantDeleteUser {
		task ("Login with a member user and go to settings") {
			ACWorkspace.signOut();

			ACLogin.loginAs(
				emailAddress = "corbin.murakami@faro.io",
				password = "test");

			ACWorkspace.openWorkspace();

			ACNavigation.goToSettings();
		}

		task ("Access user management and assert that the member user cannot delete any user") {
			ACSettings.goToUserManagement();

			ACUtils.searchBar(searchItem = "michelle.hoshi@faro.io");

			AssertElementNotPresent(locator1 = "ACSettings#DELETE_USER");
		}
	}

}