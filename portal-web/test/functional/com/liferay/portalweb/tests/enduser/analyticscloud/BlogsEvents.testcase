@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();

		ACUtils.createBlogsAndAddToPage();

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8668 | Test Summary: Check blogClicked is triggered when a blog is clicked within a widget"
	@priority = "3"
	test CheckBlogClickedTriggeredWhenBlogClicked {
		property proxy.server.enabled = "true";

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			Pause(locator1 = "10000");

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${assignedPropertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Go to the site page and click the blog content") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");

			task ("Start Har recording") {
				ProxyUtil.startHarRecording("blogClicked");

				Pause(locator1 = "5000");
			}

			Click(
				key_entryContent = "This is the blog test for AC",
				locator1 = "BlogsEntry#CONTENT");
		}

		task ("Get entryId of blog entry") {
			var entryId = JSONBlog.getBlogEntryId(
				entryTitle = "Blogs AC Title",
				groupName = "Site Name");
		}

		task ("View the properties of blogClicked event") {
			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogClicked",
				property = "entryId",
				value = "${entryId}");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogClicked",
				property = "title",
				value = "Blogs AC Title");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogClicked",
				property = "tagName",
				value = "p");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8661 | Test Summary: Check blogClicked is triggered when a blog entry title is clicked and check its properties (see reference document in comments)"
	@priority = "5"
	test CheckBlogClickedWhenBlogEntryTitleIsClickedAndCheckProperties {
		property proxy.server.enabled = "true";

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			Pause(locator1 = "10000");

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${assignedPropertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Go to the site page and click the blog content") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");

			task ("Start Har recording") {
				ProxyUtil.startHarRecording("blogClicked");

				Pause(locator1 = "5000");
			}

			Click(
				key_entryTitle = "Blogs AC Title",
				locator1 = "BlogsEntry#TITLE");
		}

		task ("Get entryId of blog entry") {
			var entryId = JSONBlog.getBlogEntryId(
				entryTitle = "Blogs AC Title",
				groupName = "Site Name");
		}

		task ("View the properties of blogClicked event") {
			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogClicked",
				property = "entryId",
				value = "${entryId}");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogClicked",
				property = "title",
				value = "Blogs AC Title");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogClicked",
				property = "tagName",
				value = "h3");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8663 | Test Summary: Check blogDepthReached triggers (Level 1)"
	@priority = "5"
	test CheckBlogDepthReachedTo25AndCheckProperties {
		property proxy.server.enabled = "true";

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			Pause(locator1 = "10000");

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${assignedPropertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Add a blog entry") {
			JSONBlog.addEntry(
				entryContent = "Digital Transformation or Digital Experience? When selecting a DXP, companies should decide whether they are ready for deep transformation of their business operations, or are focused primarily on marketing and brand awareness, as these priorities tend to reflect the different strengths among the DXP vendors. Having an attractive website or mobile app is good, but more substantial gains in customer experience require processes to be re-optimized with the customer in mind. In a Forrester presentation, analyst Liz Herbert notes that real digital transformation spans both the experience layer and the operations core. Having an attractive website or mobile app is good, but more substantial gains in customer experience require processes to be re-optimized with the customer in mind. This responsiveness to customer needs can be achieved in a number of ways, from basic personalization of experience, to more advanced configurable workflows, to full modularization of business services that can be quickly re-assembled in new ways. However, not all companies are prepared for that level of change, and may in the meantime want to start segmenting audiences in order to target personalized offers.",
				entryTitle = "Digital Transformation or Digital Experience",
				groupName = "Site Name");
		}

		task ("Go to the site page and view the blog content") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Digital Transformation or Digital Experience",
				pageName = "AC Page",
				siteName = "Site Name");

			ScrollBy(value1 = "0, 1000");

			ProxyUtil.startHarRecording("blogDepthReached");

			Pause(locator1 = "40000");
		}

		task ("Get entryId of blog entry") {
			var entryId = JSONBlog.getBlogEntryId(
				entryTitle = "Digital Transformation or Digital Experience",
				groupName = "Site Name");
		}

		task ("View the properties of blogDepthReached event") {
			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "entryId",
				value = "${entryId}");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "title",
				value = "Digital Transformation or Digital Experience");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "depth",
				value = "25");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8664 | Test Summary: Check blogDepthReached triggers (Level 2)"
	@priority = "5"
	test CheckBlogDepthReachedTo50AndCheckProperties {
		property proxy.server.enabled = "true";

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			Pause(locator1 = "10000");

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${assignedPropertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Add a blog entry") {
			JSONBlog.addEntry(
				entryContent = "Digital Transformation or Digital Experience? When selecting a DXP, companies should decide whether they are ready for deep transformation of their business operations, or are focused primarily on marketing and brand awareness, as these priorities tend to reflect the different strengths among the DXP vendors. Having an attractive website or mobile app is good, but more substantial gains in customer experience require processes to be re-optimized with the customer in mind. In a Forrester presentation, analyst Liz Herbert notes that real digital transformation spans both the experience layer and the operations core. Having an attractive website or mobile app is good, but more substantial gains in customer experience require processes to be re-optimized with the customer in mind. This responsiveness to customer needs can be achieved in a number of ways, from basic personalization of experience, to more advanced configurable workflows, to full modularization of business services that can be quickly re-assembled in new ways. However, not all companies are prepared for that level of change, and may in the meantime want to start segmenting audiences in order to target personalized offers.",
				entryTitle = "Digital Transformation or Digital Experience",
				groupName = "Site Name");
		}

		task ("Go to the site page and view the blog content") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Digital Transformation or Digital Experience",
				pageName = "AC Page",
				siteName = "Site Name");

			ScrollBy(value1 = "0, 2000");

			ProxyUtil.startHarRecording("blogDepthReached");

			Pause(locator1 = "40000");
		}

		task ("Get entryId of blog entry") {
			var entryId = JSONBlog.getBlogEntryId(
				entryTitle = "Digital Transformation or Digital Experience",
				groupName = "Site Name");
		}

		task ("View the properties of blogDepthReached event") {
			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "entryId",
				value = "${entryId}");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "title",
				value = "Digital Transformation or Digital Experience");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "depth",
				value = "50");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8665 | Test Summary: Check blogDepthReached triggers (Level 3)"
	@priority = "5"
	test CheckBlogDepthReachedTo75AndCheckProperties {
		property proxy.server.enabled = "true";

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			Pause(locator1 = "10000");

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${assignedPropertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Add a blog entry") {
			JSONBlog.addEntry(
				entryContent = "Digital Transformation or Digital Experience? When selecting a DXP, companies should decide whether they are ready for deep transformation of their business operations, or are focused primarily on marketing and brand awareness, as these priorities tend to reflect the different strengths among the DXP vendors. Having an attractive website or mobile app is good, but more substantial gains in customer experience require processes to be re-optimized with the customer in mind. In a Forrester presentation, analyst Liz Herbert notes that real digital transformation spans both the experience layer and the operations core. Having an attractive website or mobile app is good, but more substantial gains in customer experience require processes to be re-optimized with the customer in mind. This responsiveness to customer needs can be achieved in a number of ways, from basic personalization of experience, to more advanced configurable workflows, to full modularization of business services that can be quickly re-assembled in new ways. However, not all companies are prepared for that level of change, and may in the meantime want to start segmenting audiences in order to target personalized offers.",
				entryTitle = "Digital Transformation or Digital Experience",
				groupName = "Site Name");
		}

		task ("Go to the site page and view the blog content") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Digital Transformation or Digital Experience",
				pageName = "AC Page",
				siteName = "Site Name");

			ScrollBy(value1 = "0, 2200");

			ProxyUtil.startHarRecording("blogDepthReached");

			Pause(locator1 = "5000");
		}

		task ("Get entryId of blog entry") {
			var entryId = JSONBlog.getBlogEntryId(
				entryTitle = "Digital Transformation or Digital Experience",
				groupName = "Site Name");
		}

		task ("View the properties of blogDepthReached event") {
			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "entryId",
				value = "${entryId}");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "title",
				value = "Digital Transformation or Digital Experience");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "depth",
				value = "75");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8666 | Test Summary: Check blogDepthReached triggers (Level 4)"
	@priority = "5"
	test CheckBlogDepthReachedTo100AndCheckProperties {
		property proxy.server.enabled = "true";

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			Pause(locator1 = "10000");

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${assignedPropertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Add a blog entry") {
			JSONBlog.addEntry(
				entryContent = "Digital Transformation or Digital Experience? When selecting a DXP, companies should decide whether they are ready for deep transformation of their business operations, or are focused primarily on marketing and brand awareness, as these priorities tend to reflect the different strengths among the DXP vendors. Having an attractive website or mobile app is good, but more substantial gains in customer experience require processes to be re-optimized with the customer in mind. In a Forrester presentation, analyst Liz Herbert notes that real digital transformation spans both the experience layer and the operations core. Having an attractive website or mobile app is good, but more substantial gains in customer experience require processes to be re-optimized with the customer in mind. This responsiveness to customer needs can be achieved in a number of ways, from basic personalization of experience, to more advanced configurable workflows, to full modularization of business services that can be quickly re-assembled in new ways. However, not all companies are prepared for that level of change, and may in the meantime want to start segmenting audiences in order to target personalized offers.",
				entryTitle = "Digital Transformation or Digital Experience",
				groupName = "Site Name");
		}

		task ("Go to the site page and view the blog content") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Digital Transformation or Digital Experience",
				pageName = "AC Page",
				siteName = "Site Name");

			ScrollBy(value1 = "0, 2700");

			ProxyUtil.startHarRecording("blogDepthReached");

			Pause(locator1 = "40000");
		}

		task ("Get entryId of blog entry") {
			var entryId = JSONBlog.getBlogEntryId(
				entryTitle = "Digital Transformation or Digital Experience",
				groupName = "Site Name");
		}

		task ("View the properties of blogDepthReached event") {
			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "entryId",
				value = "${entryId}");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "title",
				value = "Digital Transformation or Digital Experience");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogDepthReached",
				property = "depth",
				value = "100");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8669 | Test Summary: Check blogViewed does not trigger when the blog is visible as a widget in the front page"
	@priority = "2"
	test CheckBlogViewedDoesNotTriggerWhenBlogIsVisible {
		property proxy.server.enabled = "true";

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			Pause(locator1 = "10000");

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${assignedPropertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Start Har recording") {
			ProxyUtil.startHarRecording("BlogViewed");

			Pause(locator1 = "5000");
		}

		task ("Go to the site page to assert the blog entry is displayed but don't visit it") {
			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			BlogsEntry.viewEntryPG(
				entryContent = "This is the blog test for AC",
				entryTitle = "Blogs AC Title");
		}

		task ("View the BlogViewed event not triggered") {
			ACUtils.assertEventNotPresent(
				applicationId = "Blog",
				eventId = "BlogViewed");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8662 | Test Summary: Check blogViewed triggers when visiting a DXP blog and check its properties (see reference document in comments)"
	@priority = "5"
	test CheckBlogViewedWhenVisitingDXPBlogAndCheckProperties {
		property proxy.server.enabled = "true";

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			Pause(locator1 = "10000");

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${assignedPropertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${assignedPropertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Start Har recording") {
			ProxyUtil.startHarRecording("blogViewed");

			Pause(locator1 = "5000");
		}

		task ("Go to the site page to visit the blog") {
			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Get entryId of blog entry") {
			var entryId = JSONBlog.getBlogEntryId(
				entryTitle = "Blogs AC Title",
				groupName = "Site Name");
		}

		task ("View the properties of blogClicked event") {
			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogViewed",
				property = "entryId",
				value = "${entryId}");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogViewed",
				property = "title",
				value = "Blogs AC Title");

			ACUtils.assertEventPropertyValue(
				applicationId = "Blog",
				eventId = "blogViewed",
				property = "numberOfWords",
				value = "22");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

}