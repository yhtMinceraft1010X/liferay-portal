@component-name = "portal-lima"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Message Boards";

	var pageName = "Message Boards Page";
	var portletName = "Message Boards";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Message Boards Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "2",
			groupName = "Guest",
			layoutName = "Message Boards Page",
			widgetName = "Message Boards");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			MessageboardsCategory.tearDownCP();

			MessageboardsThread.tearDownCP();

			PagesAdmin.tearDownCP();

			ServerAdministration.tearDownDMFileUploadSettings();
		}
	}

	@priority = "4"
	@refactordone
	@uitest
	test CanAddCategoryWithDescription {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(
			categoryDescription = "MB Category Description",
			categoryDescriptionEnabled = "true",
			categoryName = "MB Category Name");

		MessageboardsCategory.viewPG(
			categoryDescription = "MB Category Description",
			categoryDescriptionEnabled = "true",
			categoryName = "MB Category Name");
	}

	@priority = "4"
	@refactordone
	test CanAddCategoryWithUTF8Characters {
		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Catègory Name",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewPG(categoryName = "MB Catègory Name");
	}

	@priority = "4"
	@refactordone
	test CanAddMBThreadWithMultipleAttachments {
		MessageboardsThread.addPG(
			groupName = "Guest",
			layoutName = "message-boards-page",
			mbAttachmentFileList = "Document_1.doc,Document_1.jpg,Document_1.pdf,Document_1.png,Document_1.pptx,Document_1.mp4",
			siteURLKey = "guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewThreadAttachment(mbAttachmentFileList = "Document_1.doc,Document_1.jpg,Document_1.pdf,Document_1.png,Document_1.pptx,Document_1.mp4");
	}

	@priority = "5"
	@refactordone
	test CanAddMultipleCategories {
		for (var categoryName : list "MB Category1 Name,MB Category2 Name") {
			JSONMBMessage.addCategory(
				categoryDescription = "MB Category Description",
				categoryName = "${categoryName}",
				userEmailAddress = "test@liferay.com");

			Navigator.gotoPage(pageName = "Message Boards Page");

			MessageboardsCategory.viewPG(categoryName = "${categoryName}");
		}
	}

	@priority = "4"
	@refactordone
	test CanAddThreadInCategoryAsQuestion {
		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Category Name",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsThread.addPGAsQuestion(
			breadcrumbName = "MB Category Name",
			categoryName = "MB Category Name",
			lastPostUserName = "Test Test",
			pageName = "Message Boards Page",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "3"
	@refactordone
	test CanConfigureWidgetToAddThreadAsQuestionByDefault {
		property portal.acceptance = "false";

		MessageboardsThread.viewMarkAsQuestionNotChecked(siteURLKey = "guest");

		MessageboardsPortlet.configureGeneralCP(
			siteURLKey = "guest",
			threadAsQuestionByDefaultEnabled = "true");

		MessageboardsThread.viewMarkAsQuestionChecked(siteURLKey = "guest");

		MessageboardsThread.addPG(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadBody = "Thread Body",
			threadSubject = "Thread Subject");

		MessageboardsThread.openToThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadSubject = "Thread Subject");

		MessageboardsThread.replyPG(
			markAsAnswer = "true",
			skipNavigation = "true",
			threadReplyBody = "Thread Reply Body",
			threadSubject = "Thread Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewAnswerPG(
			answerCount = "1",
			threadSubject = "Thread Subject");
	}

	@priority = "5"
	@refactordone
	test CanDeleteCategory {
		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "MB Category Name",
			userEmailAddress = "test@liferay.com");

		JSONMBMessage.deleteCategory(
			categoryName = "MB Category Name",
			groupName = "Guest");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewDefault();
	}

	@priority = "5"
	@refactordone
	@uitest
	test CanDeleteThread {
		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.deletePG(threadSubject = "MB Thread Message Subject");
	}

	@priority = "5"
	@refactordone
	test CanEditCategory {
		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "MB Category Name",
			userEmailAddress = "test@liferay.com");

		MessageboardsCategory.editPG(
			categoryName = "MB Category Name",
			categoryNameEdit = "MB Category Name Edit",
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewPG(categoryName = "MB Category Name Edit");
	}

	@priority = "5"
	@refactordone
	test CanEditThreadSubjectAndBody {
		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.openToThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.editPG(
			threadBodyEdit = "MB Thread Message Body Edit",
			threadSubject = "MB Thread Message Subject",
			threadSubjectEdit = "MB Thread Message Subject Edit");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body Edit",
			threadSubject = "MB Thread Message Subject Edit",
			userName = "Test Test");
	}

	@priority = "4"
	@refactordone
	test CanNotViewSubscribeLinksWithEmailNotificationsDisabled {
		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Category Name",
			userEmailAddress = "test@liferay.com");

		MessageboardsThread.addPG(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewCategorySubscribeLink(categoryName = "MB Category Name");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewThreadSubscribeLink(threadSubject = "MB Thread Message Subject");

		MessageboardsPortlet.configureMessageAddedEmail(
			messageAddedEmailEnabled = "false",
			siteURLKey = "guest");

		MessageboardsPortlet.configureMessageUpdatedEmail(
			messageUpdatedEmailEnabled = "false",
			siteURLKey = "guest");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewCategorySubscribeLink(
			categoryName = "MB Category Name",
			disabledEmailConfiguration = "true");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewThreadSubscribeLink(
			disabledEmailConfiguration = "true",
			threadSubject = "MB Thread Message Subject");
	}

	@description = "This is a use case for LPS-67722."
	@priority = "5"
	@refactordone
	test CanReplyAfterDownloadingMBThreadAttachmentTwice {
		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "Message Boards Thread Body",
			threadSubject = "MB Thread Message Subject");

		JSONMBMessage.addAttachmentToMessage(
			fileName = "Document_1.jpg",
			groupName = "Guest",
			mimeType = "image/jpeg",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.openToThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.downloadAttachmentPG();

		MessageboardsThread.downloadAttachmentPG();

		JSONMBMessage.addMessageReply(
			groupName = "Guest",
			replyBody = "MB Thread Reply Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "5"
	@refactordone
	test CanReplyToThreadAsGuest {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsPermissions.checkReplyToMessageForGuestPG(threadSubject = "MB Thread Message Subject");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.replyPG(
			threadBody = "MB Thread Message Body",
			threadReplyBody = "MB Thread Reply Body As Guest",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewReplyPG(
			guestReply = "true",
			loggedOut = "true",
			replyCount = "1",
			threadBody = "MB Thread Message Body",
			threadReplyBody = "MB Thread Reply Body As Guest",
			threadSubject = "MB Thread Message Subject",
			userName = "Anonymous");
	}

	@priority = "5"
	@refactordone
	test CanSaveThreadAsDraft {
		MessageboardsThread.openToAddThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest");

		MessageboardsThread.saveNewThreadAsDraft(
			skipNavigation = "true",
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Draft");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewDraftThread(threadSubject = "Message Boards Thread Draft");
	}

	@priority = "3"
	@refactordone
	test CanSearchForAttachment {
		property portal.acceptance = "false";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Message Boards Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Message Boards Page",
			widgetName = "Message Boards");

		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		JSONMBMessage.addAttachmentToMessage(
			fileName = "Document_1.doc",
			groupName = "Guest",
			mimeType = "application/msword",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		Search.searchPG(
			portletName = "Message Boards",
			searchTerm = "This is a *.doc file.");

		MessageboardsPortlet.viewSearchResultPG(
			mbThreadAttachment = "Document_1.doc",
			threadSubject = "MB Thread Message Subject");
	}

	@description = "This ensures that an MB thread can be searched via category."
	@priority = "5"
	@refactordone
	test CanSearchForThreadWithCategory {
		JSONCategory.addVocabulary(
			groupName = "Guest",
			title = "Vocabulary Name");

		JSONCategory.addCategory(
			groupName = "Guest",
			title = "Category Name",
			vocabularyName = "Vocabulary Name");

		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.openToEditThread(
			groupName = "Guest",
			siteURLKey = "guest",
			threadSubject = "MB Thread Message Subject");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.addCategory(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name");

		PortletEntry.publish();

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "Category Name");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "MB Thread Message Body",
			searchAssetTitle = "MB Thread Message Subject",
			searchAssetType = "Message Boards Message");
	}

	@priority = "3"
	@refactordone
	test CanSplitThread {
		property portal.acceptance = "false";

		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		JSONMBMessage.addMessageReply(
			groupName = "Guest",
			replyBody = "MB Thread Reply Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.openToThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.splitThreadPG(
			threadBody = "MB Thread Message Body",
			threadReplyBody = "MB Thread Reply Body",
			threadSplitReplyBody = "Split Reply Thread Body",
			threadSplitReplySubject = "Split Reply Thread Subject",
			threadSplitSubject = "MB Thread Split Subject",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewSplitThreadPG(
			pageName = "Message Boards Page",
			threadBody = "MB Thread Message Body",
			threadReplyBody = "MB Thread Reply Body",
			threadSplitReplyBody = "Split Reply Thread Body",
			threadSplitReplySubject = "Split Reply Thread Subject",
			threadSplitSubject = "MB Thread Split Subject",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "4"
	@refactordone
	test CanViewMBThreadReplyViaMoreMessages {
		property custom.properties = "discussion.comments.delta.value=5";

		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject");

		for (var replyCount : list "1,2,3,4,5,6,7") {
			JSONMBMessage.addMessageReply(
				groupName = "Guest",
				replyBody = "Message Boards Thread Reply ${replyCount}",
				threadSubject = "Message Boards Thread Subject");
		}

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "7",
			threadSubject = "Message Boards Thread Subject");

		for (var replyCount : list "1,2,3,4") {
			AssertTextEquals(
				key_threadBody = "Message Boards Thread Reply ${replyCount}",
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "Message Boards Thread Reply ${replyCount}");
		}

		AssertVisible(locator1 = "Button#MORE_MESSAGES");

		for (var replyNotVisible : list "5,6,7") {
			AssertElementNotPresent(
				key_threadBody = "Message Boards Thread Reply ${replyNotVisible}",
				locator1 = "MessageBoardsThread#THREAD_BODY");
		}

		AssertClick(
			locator1 = "Button#MORE_MESSAGES",
			value1 = "More Messages");

		for (var replyCount : list "1,2,3,4,5,6,7") {
			AssertTextEquals(
				key_threadBody = "Message Boards Thread Reply ${replyCount}",
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "Message Boards Thread Reply ${replyCount}");
		}
	}

	@ignore = "true"
	@priority = "4"
	@refactordone
	test CanViewMessageBoardsRSS {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body 1",
			threadSubject = "MB Thread Message Subject 1");

		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body 2",
			threadSubject = "MB Thread Message Subject 2");

		Navigator.gotoPage(pageName = "Message Boards Page");

		RSS.viewFeed(
			entryContent = "MB Thread Message Body 2",
			entryTitle = "MB Thread Message Subject 2",
			feedSubtitle = "MB Thread Message Subject 2",
			feedTitle = "MB Thread Message Subject 2",
			rssURL = "message_boards");

		MessageboardsThread.openToThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadSubject = "MB Thread Message Subject 1");

		RSS.viewFeed(
			entryContent = "MB Thread Message Body 1",
			entryTitle = "MB Thread Message Subject 1",
			feedSubtitle = "MB Thread Message Subject 1",
			feedTitle = "MB Thread Message Subject 1",
			rssURL = "message_boards");

		Click(locator1 = "NavBar#HOME");

		RSS.gotoFeed(rssURL = "message_boards");

		RSS.viewFeedEntry(
			entryContent = "MB Thread Message Body 1,MB Thread Message Body 2",
			entryTitle = "MB Thread Message Subject 1,MB Thread Message Subject 2");
	}

	@description = "This test covers LPS-132060, LPS-77252 and LPS-86797. It ensures that Categories group and Threads group are listed independently with their own pager."
	@priority = "4"
	@refactordone
	test CanViewPagersForCategoriesAndThreads {
		for (var categoryName : list "MB Category1 Name,MB Category2 Name,MB Category3 Name,MB Category4 Name,MB Category5 Name,MB Category6 Name") {
			JSONMBMessage.addCategory(
				categoryDescription = "${categoryName} Description",
				categoryName = "${categoryName}",
				userEmailAddress = "test@liferay.com");
		}

		for (var threadSubjectName : list "MB Thread Message 1,MB Thread Message 2,MB Thread Message 3,MB Thread Message 4,MMB Thread Message 5,MB Thread Message 6") {
			JSONMBMessage.addMessage(
				groupName = "Guest",
				threadBody = "${threadSubjectName} Body",
				threadSubject = "${threadSubjectName} Subject");
		}

		Navigator.gotoPage(pageName = "Message Boards Page");

		Pagination.changePagination(itemsPerPage = "4");

		Pagination.viewResults(results = "Showing 1 to 4 of 6 entries.");

		Click(locator1 = "Pagination#NEXT_LINK");

		AssertTextEquals(
			key_categoryName = "MB Category6 Name",
			locator1 = "MessageBoards#CATEGORY_LIST_CATEGORY",
			value1 = "MB Category6 Name");

		Click(locator1 = "Pagination#ITEMS_PER_PAGE_SELECT_2");

		MenuItem.click(menuItem = "4");

		Pagination.viewResults(results = "Showing 5 to 6 of 6 entries.");

		Click(locator1 = "Pagination#NEXT_LINK_2");

		AssertTextEquals(
			key_categoryName = "MB Category6 Name",
			locator1 = "MessageBoards#CATEGORY_LIST_CATEGORY",
			value1 = "MB Category6 Name");

		AssertTextEquals.assertPartialText(
			key_threadSubject = "MB Thread Message 1 Subject",
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "MB Thread Message 1 Subject");

		Pagination.viewResults(results = "Showing 5 to 6 of 6 entries.");

		for (var categoryName : list "MB Sub Category1 Name,MB Sub Category2 Name,MB Sub Category3 Name,MB Sub Category4 Name,MB Sub Category5 Name,MB Sub Category6 Name") {
			var parentCategoryId = JSONMBMessage.getCategoryIdByName(
				categoryName = "MB Category1 Name",
				groupName = "Guest");

			JSONMBMessage.addCategory(
				categoryDescription = "MB Subcategory Description",
				categoryName = "${categoryName}",
				groupName = "Guest",
				parentCategoryId = "${parentCategoryId}",
				userEmailAddress = "test@liferay.com");
		}

		JSONMBMessage.addMessage(
			categoryName = "MB Category1 Name",
			groupName = "Guest",
			threadBody = "MB Thread Message Body in Sub Category",
			threadSubject = "MB Thread Message Subject in Sub Category");

		MessageboardsCategory.openToCategory(
			categoryName = "MB Category1 Name",
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest");

		AssertTextEquals(
			key_titleName = "Categories",
			locator1 = "MessageBoards#PAGER_TITLE",
			value1 = "Categories");

		AssertTextEquals(
			key_titleName = "Threads",
			locator1 = "MessageBoards#PAGER_TITLE",
			value1 = "Threads");

		AssertElementNotPresent(
			key_threadSubject = "MB Thread Message",
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "MB Thread Message");

		Pagination.changePagination(itemsPerPage = "8");

		Pagination.viewResults(results = "Showing 1 to 6 of 6 entries.");
	}

	@description = "This ensures that users can view subcategory subscription Via My Subscriptions, also covers LPS-127707."
	@priority = "4"
	@refactordone
	test CanViewSubcategorySubscriptionViaMySubscriptionsPage {
		property database.types = "oracle";

		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Category Name",
			userEmailAddress = "test@liferay.com");

		var parentCategoryId = JSONMBMessage.getCategoryIdByName(
			categoryName = "MB Category Name",
			groupName = "Guest");

		JSONMBMessage.addCategory(
			categoryDescription = "MB Subcategory Description",
			categoryName = "MB Subcategory Name",
			groupName = "Guest",
			parentCategoryId = "${parentCategoryId}",
			userEmailAddress = "test@liferay.com");

		var parentCategoryId = JSONMBMessage.getCategoryIdByName(
			categoryName = "MB Subcategory Name",
			groupName = "Guest");

		JSONMBMessage.addCategory(
			categoryDescription = "MB Subcategory 2 Description",
			categoryName = "MB Subcategory Name 2",
			groupName = "Guest",
			parentCategoryId = "${parentCategoryId}",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewPG(
			categoryName = "MB Category Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Name",
			threadCount = "0");

		MessageboardsCategory.openToCategory(
			categoryName = "MB Subcategory Name",
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest");

		MessageboardsCategory.subscribePG(categoryName = "MB Subcategory Name 2");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewMySubscriptionsPG(
			parentcategory1 = "MB Category Name",
			parentcategory2 = "MB Subcategory Name",
			subscribedThread = "MB Subcategory Name 2");
	}

	@priority = "5"
	@refactordone
	test CanViewThread {
		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.openToThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "5"
	@refactordone
	@uitest
	test CanViewThreadInSubcategory {
		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Category Name",
			userEmailAddress = "test@liferay.com");

		var parentCategoryId = JSONMBMessage.getCategoryIdByName(
			categoryName = "MB Category Name",
			groupName = "Guest");

		JSONMBMessage.addCategory(
			categoryDescription = "MB Subcategory Description",
			categoryName = "MB Subcategory Name",
			groupName = "Guest",
			parentCategoryId = "${parentCategoryId}",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(
			categoryName = "MB Category Name",
			subCategoryEnabled = "true",
			subCategoryName = "MB Subcategory Name");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(
			categoryName = "MB Category Name",
			subCategoryEnabled = "true",
			subCategoryName = "MB Subcategory Name");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "4"
	@refactordone
	test CanViewThreadStatistics {
		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread1 Message Body",
			threadSubject = "MB Thread1 Message Subject");

		MessageboardsThread.viewStatisticsPostsCountPG(
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadPostNumber = "1",
			userName = "Test Test");

		MessageboardsThread.openToThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadSubject = "MB Thread1 Message Subject");

		MessageboardsThread.editPG(
			saveAsDraft = "true",
			threadBodyEdit = "MB Thread1 Message Body Edit",
			threadSubject = "MB Thread1 Message Subject",
			threadSubjectEdit = "MB Thread1 Message Subject Edit");

		MessageboardsThread.viewStatisticsPostsCountDefaultPG(
			layoutName = "message-boards-page",
			siteURLKey = "guest");

		MessageboardsThread.editViaMyPosts(
			threadSubject = "MB Thread1 Message Subject Edit",
			threadSubjectEdit = "true");

		MessageboardsThread.viewStatisticsPostsCountPG(
			lastPostUserName = "Test Test",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			startedByUserName = "Test Test",
			threadPostNumber = "1");

		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread2 Message Body",
			threadSubject = "MB Thread2 Message Subject");

		MessageboardsThread.viewStatisticsPostsCountPG(
			lastPostUserName = "Test Test",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			startedByUserName = "Test Test",
			threadPostNumber = "2");

		JSONMBMessage.deleteMessage(
			groupName = "Guest",
			threadSubject = "MB Thread2 Message Subject");

		MessageboardsThread.viewStatisticsPostsCountPG(
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadPostNumber = "1",
			userName = "Test Test");
	}

	@description = "This is a use case for LPS-77263."
	@priority = "5"
	@refactordone
	test CanViewVisualStateOfReadMBThread {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		for (var num : list "1,2") {
			JSONMBMessage.addMessage(
				groupName = "Guest",
				threadBody = "MB Thread Message Body",
				threadSubject = "MB Thread Message Subject ${num}");
		}

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONUser.addUserToSite(
			groupName = "Guest",
			userEmailAddress = "userea@liferay.com");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		MessageboardsThread.openToThread(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadSubject = "MB Thread Message Subject 1");

		Click(
			key_breadcrumbName = "Home",
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK");

		MessageboardsThread.viewMBThreadVisualStatePG(threadSubject = "MB Thread Message Subject 1");

		MessageboardsThread.viewMBThreadVisualStatePG(
			threadSubject = "MB Thread Message Subject 2",
			unReadMBthread = "true");
	}

	@priority = "4"
	@refactordone
	test MBCategoryCannotBeAddedWithoutName {
		MessageboardsCategory.addPG(
			categoryDescription = "MB Category Description",
			categoryDescriptionEnabled = "true",
			categoryName = " ",
			categoryWithoutName = "true",
			layoutName = "message-boards-page",
			siteURLKey = "guest");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewDefault();
	}

	@description = "This test ensures that the MB widget follows W3C accessibility standards"
	@ignore = "true"
	@priority = "4"
	test WidgetFollowsAccessibilityStandards {
		Navigator.openSitePage(
			pageName = "Message Boards Page",
			siteName = "Guest");

		AssertAccessible();
	}

	@description = "This test checks that the javascript in the user name will not be executed when viewing a thread on page."
	@priority = "3"
	test XSSIsNotExecutedWhenViewingUsernameInThread {
		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "Account Settings");

		User.editUserInformation(userLastNameEdit = '''Test<script>alert('hello!')</script>''');

		MessageboardsThread.addPG(
			groupName = "Guest",
			layoutName = "message-boards-page",
			siteURLKey = "guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		AssertAlertNotPresent();
	}

}