@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site and widget page") {
			ACUtils.addSiteAndPage();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8979 | Test Summary: All interests in the workspace appear in a list"
	@ignore = "true"
	@priority = "5"
	test AllInterestsInWorkspaceAppearInList {

		// AC Refactor: data doesn't appear on time and the test needs data from a past date
		// AC Refactor ticket: LRAC-9004

		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Add specific pages and web contents to Site as interest topics") {
			Navigator.openSiteURL(siteName = "Site Name");

			for (var layoutName : list "Movies,Music,Science,Sports,Technology") {
				ACUtils.addPage(layoutName = "${layoutName}");

				ACUtils.createWCAndAddToPage(
					layoutName = "${layoutName}",
					webContentTitle = "Web Content Title ${layoutName}");
			}
		}

		task ("Add new users and sync the Contact Data") {
			for (var name : list "ac,usera") {
				JSONUser.addUser(
					userEmailAddress = "${name}@liferay.com",
					userFirstName = "${name}",
					userLastName = "${name}",
					userScreenName = "${name}");
			}

			ACDXPSettings.syncNewContactData();
		}

		task ("View new pages in site as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			for (var pageName : list "Movies,Music,Science,Sports,Technology") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("View new pages in site as another new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "usera@liferay.com",
				userLoginFullName = "usera usera");

			for (var pageName : list "Movies,Music,Science,Sports,Technology") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Navigate to Individule Tab") {
			ACNavigation.goToIndividuals();
		}

		task ("View All Interests list in workspace") {
			ACCards.viewCards(cardTitle = "Top Interests as of Today");

			Click(locator1 = "ACInterests#VIEW_ALL_INTERESTS_BUTTON");

			for (var interestTopic : list "liferay dxp,site,movies,music,science,sports,technology") {
				ACInterests.viewInterest(interestTopic = "${interestTopic}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8981| Test Summary: Assert individual interest shows contributing pages"
	@ignore = "true"
	@priority = "3"
	test AssertIndividualInterestContributingPages {

		// AC Refactor: data doesn't appear on time and the test needs data from a past date
		// AC Refactor ticket: LRAC-9006

		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Add page and web content to Site as interest topic") {
			Navigator.openSiteURL(siteName = "Site Name");

			ACUtils.addPage(layoutName = "AC Page 1");

			ACUtils.createWCAndAddToPage(
				layoutName = "AC Page 1",
				webContentTitle = "Web Content Title");
		}

		task ("Add a new user and sync the Contact Data") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			ACDXPSettings.syncNewContactData();
		}

		task ("View new page in site as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			ACUtils.navigateToSitePage(
				pageName = "AC Page 1",
				siteName = "Site Name");
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Navigate to the Individual Interests") {
			ACNavigation.goToIndividuals();

			ACNavigation.switchTab(tabName = "Known Individuals");

			ACIndividualsDashboard.goToKnownIndividualDetails(individualName = "ac ac");

			ACNavigation.switchTab(tabName = "Interests");
		}

		task ("View the Individual Interests contributing page") {
			ACInterests.viewInterest(interestTopic = "ac page 1");

			ACInterests.viewInterestContributingPage(
				interestContributingPage = "1 Contributing Pages",
				interestTopic = "ac page 1");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8982| Test Summary: Individuals interest details are shown"
	@priority = "3"
	test AssertIndividualInterestDetails {
		property portal.upstream = "quarantine";

		// AC Quarantine Reason: Individual interests takes time to load

		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Add page and web content to Site as interest topic") {
			Navigator.openSiteURL(siteName = "Site Name");

			ACUtils.addPage(layoutName = "AC Page 1");

			ACUtils.createWCAndAddToPage(
				layoutName = "AC Page 1",
				webContentTitle = "Web Content Title");
		}

		task ("Add a new user and sync the Contact Data") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			ACDXPSettings.syncNewContactData();
		}

		task ("View new page in site as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			ACUtils.navigateToSitePage(
				pageName = "AC Page 1",
				siteName = "Site Name");
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Navigate to the Individual Interests") {
			ACNavigation.goToIndividuals();

			ACNavigation.switchTab(tabName = "Interests");
		}

		task ("View the Individual Interests details") {
			ACInterests.clickInterest(interestTopic = "ac page 1");

			ACInterests.viewInterestPage(pageName = "AC Page 1 - Site Name - Liferay DXP");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8980 | Test Summary: Order the Individual's Interest List"
	@ignore = "true"
	@priority = "3"
	test OrderIndividualsInterests {

		// AC Refactor: data doesn't appear on time and the test needs data from a past date
		// AC Refactor ticket: LRAC-9005

		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Add specific pages and web contents to Site as interest topics") {
			Navigator.openSiteURL(siteName = "Site Name");

			for (var layoutName : list "Movies,Sports,Technology") {
				ACUtils.addPage(layoutName = "${layoutName}");

				ACUtils.createWCAndAddToPage(
					layoutName = "${layoutName}",
					webContentTitle = "Web Content Title ${layoutName}");
			}
		}

		task ("Add a new user and sync the Contact Data") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			ACDXPSettings.syncNewContactData();
		}

		task ("View new pages in site as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			for (var pageName : list "Movies,Sports,Technology") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Navigate to the Individual Interests") {
			ACNavigation.goToIndividuals();

			ACNavigation.switchTab(tabName = "Known Individuals");

			ACIndividualsDashboard.goToKnownIndividualDetails(individualName = "ac ac");

			ACNavigation.switchTab(tabName = "Interests");
		}

		task ("Sort the Interests in descending order") {
			ACUtils.orderArrow(type = "descending");

			ACInterests.viewIndividualInterestSpecificOrder(interestTopic = "technology,sports,site,movies,liferay dxp");
		}

		task ("Sort the Interests in ascending order") {
			ACUtils.orderArrow(type = "ascending");

			ACInterests.viewIndividualInterestSpecificOrder(interestTopic = "liferay dxp,movies,site,sports,technology");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8983 | Test Summary: Individuals Interest list has pagination"
	@ignore = "true"
	@priority = "3"
	test PaginateIndividualsInterestsList {

		// AC Refactor: data doesn't appear on time and the test needs data from a past date
		// AC Refactor ticket: LRAC-9008

		task ("Add specific pages and web contents to Site as interest topics") {
			Navigator.openSiteURL(siteName = "Site Name");

			for (var layoutName : list "Movies,Music,Science,Sports,Technology") {
				ACUtils.addPage(layoutName = "${layoutName}");

				ACUtils.createWCAndAddToPage(
					layoutName = "${layoutName}",
					webContentTitle = "Web Content Title ${layoutName}");
			}
		}

		task ("Add a new user and sync the Contact Data") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			ACDXPSettings.syncNewContactData();
		}

		task ("View new pages in site as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			for (var pageName : list "Movies,Music,Science,Sports,Technology") {
				ACUtils.navigateToSitePage(
					pageName = "${pageName}",
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Navigate to Individule Interests") {
			ACNavigation.goToIndividuals();

			ACNavigation.switchTab(tabName = "Interests");
		}

		task ("Change pagination") {
			ACUtils.changePagination(itemsPerPage = "5");
		}

		task ("Click next page") {
			ACUtils.checkPreviousNextButton(nextButton = "true");
		}

		task ("View technology interest topic should be in next page") {
			ACInterests.viewInterest(interestTopic = "technology");
		}
	}

}