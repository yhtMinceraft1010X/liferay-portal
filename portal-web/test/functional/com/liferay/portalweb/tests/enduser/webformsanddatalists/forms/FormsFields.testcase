@component-name = "portal-web-forms-and-data-lists"
definition {

	property custom.properties = "minifier.enabled=true";
	property osgi.module.configuration.file.names = "com.liferay.frontend.js.loader.modules.extender.internal.configuration.Details.config";
	property osgi.module.configurations = "waitTimeout=&quot;15&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			PagesAdmin.tearDownCP();
		}
	}

	@description = "LPS-68182 - Verify that the Field Label is blank when adding a new Field"
	@priority = "3"
	test AddingANewFieldCreatesADefaultLabel {
		property portal.acceptance = "true";
		property portal.upstream = "true";
		property test.name.skip.portal.instance = "FormsFields#AddingANewFieldCreatesADefaultLabel";

		FormsAdmin.addForm();

		Form.addTextField(fieldPositionNumber = "0");

		Form.editFieldLabelMetal(fieldValue = "One");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "1");

		Form.editFieldLabelMetal(fieldValue = "Two");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "One");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "0");

		FormFields.viewFieldLabel(
			fieldName = "label",
			fieldValue = "Text");
	}

	@description = "LPS-73274 - Verify that when duplicating a Field, the new Field Reference is unique"
	@priority = "4"
	test CanBeDuplicated {
		property portal.acceptance = "true";
		property portal.upstream = "true";
		property test.name.skip.portal.instance = "FormsFields#CanBeDuplicated";

		FormsAdmin.addForm();

		Form.editName();

		Form.editDescription();

		Form.addTextField(fieldPositionNumber = "0");

		Form.editFieldLabelMetal(fieldValue = "Text Field");

		FormFields.duplicateField();

		Form.gotoAdvancedTab();

		var textFieldName = FormFields.getFieldName();

		Form.gotoBasicTab();

		FormFields.viewTextLabel(
			fieldLabel = "Copy of Text Field",
			fieldName = "${textFieldName}");

		Form.editFieldLabelMetal(fieldValue = "My New Text Field");

		FormFields.viewTextLabel(
			fieldLabel = "My New Text Field",
			fieldName = "${textFieldName}");

		Form.closeSidebar();

		Form.save();
	}

	@description = "Verify that a Form with all the Fields can be submitted"
	@priority = "5"
	test CanBeSubmittedWithAllFields {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormsFields#CanBeSubmittedWithAllFields";
		property testray.component.names = "Training";

		FormsAdmin.addForm();

		Form.editName();

		Form.editDescription();

		Form.editPageTitle(
			formPageName = "Page 1",
			formTitleNumber = "1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Paragraph",
			formPageNumber = "0");

		var fieldParagraphField = FormFields.getFieldName();

		FormFields.editParagraphBody(content = "Paragraph body text.");

		Form.closeSidebar();

		Form.addTextField(
			fieldPositionNumber = "1",
			formPageNumber = "0");

		var fieldTextField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "SingleLineText");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Select from List",
			formPageNumber = "0");

		var fieldSelectFromListField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Select");

		FormFields.editOptionsRow(
			optionName = "Select1",
			optionValue = "Select 1");

		FormFields.editOptionsRow(
			optionName = "Select2",
			optionValue = "Select 2",
			rowNumber = "2");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "3",
			fieldType = "Single Selection",
			formPageNumber = "0");

		var fieldSingleSelectionField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Radio");

		FormFields.editOptionsRow(
			optionName = "Option1",
			optionValue = "Option 1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2");

		FormFields.enableSwitch(fieldName = "Required Field");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "4",
			fieldType = "Date",
			formPageNumber = "0");

		var fieldDateField = FormFields.getFieldName();

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "5",
			fieldType = "Multiple Selection",
			formPageNumber = "0");

		var fieldMultipleSelectionField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Checkbox");

		FormFields.editOptionsRow(
			optionName = "Checkbox1",
			optionValue = "Checkbox 1",
			rowNumber = "1");

		FormFields.editOptionsRow(
			optionName = "Checkbox2",
			optionValue = "Checkbox 2",
			rowNumber = "2");

		FormFields.enableSwitch(fieldName = "Required Field");

		Form.closeSidebar();

		Form.addPage(formAddNewPageNumber = "1");

		Form.editPageTitle(
			formPageName = "Page 2",
			formTitleNumber = "2");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Grid",
			formPageNumber = "1");

		var fieldGridField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Grid Field Survey");

		for (var optionNumber : list "1,2,3") {
			FormFields.editGridOptions(
				gridField = "Row",
				optionValue = "Option ${optionNumber}",
				rowNumber = "${optionNumber}");
		}

		for (var optionNumber : list "1,2,3") {
			FormFields.editGridOptions(
				gridField = "Column",
				optionValue = "Category ${optionNumber}",
				rowNumber = "${optionNumber}");
		}

		Form.closeSidebar();

		Form.addPage(formAddNewPageNumber = "2");

		Form.editPageTitle(
			formPageName = "Page 3",
			formTitleNumber = "3");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Upload",
			formPageNumber = "2");

		var fieldUploadField = FormFields.getFieldName();

		Form.editFieldLabelMetal(
			fieldPositionNumber = "0",
			fieldValue = "Upload Field");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Numeric",
			formPageNumber = "2");

		var fieldNumericField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Value");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Color",
			formPageNumber = "2");

		var colorFieldName = FormFields.getFieldName();

		Form.closeSidebar();

		Form.publishForm();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(
			pageName = "Form Page",
			portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormPortlet.waitFormRenderer(text = "Next");

		FormFields.viewParagraphField(
			fieldName = "${fieldParagraphField}",
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text.");

		FormFields.editText(
			fieldName = "${fieldTextField}",
			fieldValue = "Single Line Text");

		FormFields.selectSelectOption(
			fieldName = "${fieldSelectFromListField}",
			selectOption = "Select 1");

		FormFields.selectRadioOption(
			fieldName = "${fieldSingleSelectionField}",
			radioOption = "Option 1");

		FormFields.editDate(
			fieldName = "${fieldDateField}",
			fieldValue = "05/02/2016");

		FormFields.selectCheckboxOption(
			checkboxOption = "Checkbox 1",
			fieldName = "${fieldMultipleSelectionField}");

		FormPortlet.nextPage(
			formPageCurrent = "Page 1",
			formPageNext = "Page 2");

		for (var optionNumber : list "1,2,3") {
			FormFields.selectGridRadioOption(
				categoryColumnName = "Category ${optionNumber}",
				fieldName = "${fieldGridField}",
				optionNumber = "${optionNumber}",
				optionRowName = "Option ${optionNumber}");
		}

		FormPortlet.nextPage(
			formPageCurrent = "Page 2",
			formPageNext = "Page 3");

		FormFields.viewUploadField(
			fieldLabel = "Upload Field",
			fieldName = "${fieldUploadField}");

		ItemSelector.gotoItemSelectorViaSelectButton();

		FormFields.editColor(
			colorSwatchItem = "2BA676",
			fieldLabel = "Color");

		ItemSelector.uploadFile(
			navTab = "Documents and Media",
			uploadFileName = "Document_1.jpg");

		FormPortlet.submitSuccessfully();
	}

	@description = "LPS-70560 - Verify that a user is not able to bypass field validation by pressing Next twice"
	@priority = "4"
	test ViewFieldValidationIsNotBypassedWhenNextButtonIsHitTwice {
		property portal.acceptance = "true";
		property portal.upstream = "true";
		property test.name.skip.portal.instance = "FormsFields#ViewFieldValidationIsNotBypassedWhenNextButtonIsHitTwice";

		FormsAdmin.addForm();

		Form.editName();

		Form.editPageTitle(
			formPageName = "Page 1",
			formTitleNumber = "1");

		Form.addTextField(
			fieldPositionNumber = "0",
			formPageNumber = "0");

		var fieldTextField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field Page 1");

		Form.closeSidebar();

		Form.addPage(formAddNewPageNumber = "1");

		Form.editPageTitle(
			formPageName = "Page 2",
			formTitleNumber = "2");

		Form.addTextField(
			fieldPositionNumber = "0",
			formPageNumber = "1");

		var fieldTextField2 = FormFields.getFieldName();

		FormFields.enableSwitch(fieldName = "required");

		Form.editFieldLabelMetal(fieldValue = "Text Field Page 2");

		Form.closeSidebar();

		Form.addPage(formAddNewPageNumber = "2");

		Form.editPageTitle(
			formPageName = "Page 3",
			formTitleNumber = "3");

		Form.addTextField(
			fieldPositionNumber = "0",
			formPageNumber = "2");

		var fieldTextField3 = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field Page 3");

		Form.closeSidebar();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormPortlet.waitFormRenderer(text = "Next");

		FormFields.editText(
			fieldName = "${fieldTextField}",
			fieldValue = "test");

		FormPortlet.nextPage(
			formPageCurrent = "Page 1",
			formPageNext = "Page 2");

		FormPortlet.clickNextPage();

		FormPortlet.clickNextPage();

		FormFields.viewFieldValidationErrorMessage(
			fieldName = "${fieldTextField2}",
			fieldValidationErrorMessage = "This field is required.");

		DoubleClick(locator1 = "Button#NEXT");

		FormFields.viewFieldValidationErrorMessage(
			fieldName = "${fieldTextField2}",
			fieldValidationErrorMessage = "This field is required.");
	}

}