@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8359 | Test Summary: Page profile views by location shows where views are coming from"
	@ignore = "true"
	@priority = "5"
	test PageLocationCardShowsViewsByExpectedLocation {

		// AC Refactor: data doesn't appear on time
		// AC Refactor ticket: LRAC-9268

		task ("Connect the DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("View the page") {
			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Get the ip country") {
			var country = ACUtils.getIPCountry();
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Navigate to Pages tab in Sites dashboard") {
			ACNavigation.goToSites();

			ACNavigation.switchTab(tabName = "Pages");
		}

		task ("Select the Last 24 hours in time period") {
			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();
		}

		task ("Navigate to page report entry") {
			ACNavigation.openItem(itemName = "AC Page - Site Name - Liferay DXP");
		}

		task ("View the time filter of Views by Location map is Last 24 Hours") {
			ACTimeFilter.assertCurrentTimeFilterRange(
				cardName = "Views by Location",
				timeFilterRange = "Last 24 hours");
		}

		task ("View the views by location info shown in geomap") {
			ACUtils.viewNoResultsMessageNotPresent(noResultMessage = "There are no views on any location on the selected period.");

			ACCards.viewGeomapContainer(cardTitle = "Views by Location");

			ACCards.viewGeomapTableText(
				cardTitle = "Views by Location",
				leftText = "${country}",
				rightText = "1 100%");
		}
	}

}