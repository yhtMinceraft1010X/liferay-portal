@component-name = "portal-questions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Questions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Questions Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "2",
			groupName = "Guest",
			layoutName = "Questions Page",
			widgetName = "Questions");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Message Boards");

			if (IsElementPresent(locator1 = "Questions#QUESTIONS_LIST")) {
				Questions.tearDown();
			}

			PagesAdmin.tearDownCP();
		}
	}

	@description = "Validate if the user can create a question with the maximum of 5 tags with unexisting tag"
	@priority = "3"
	@refactordone
	test CanAddQuestionWithTheMaximumTags {
		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		Questions.askQuestionFillingTheMandatoryFields(
			contentField = "Body AddQuestionWithTheMaximumTags",
			layoutName = "questions-page",
			siteURLKey = "guest",
			tagLocatorList = "Tag1,Tag2,Tag3,Tag4,Tag5",
			titleField = "Title AddQuestionWithTheMaximumTags",
			topicName = "questions-test-category");

		Questions.viewList(listedQuestions = "Title AddQuestionWithTheMaximumTags");
	}

	@description = "Validate if the user can not create a question with the maximum of 6 tags with unexisting tag"
	@priority = "2"
	@refactordone
	test CannotAddQuestionWithMoreThanTheMaximumTags {
		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		Questions.askQuestionFillingTheMandatoryFields(
			contentField = "Body AddQuestionWithMoreThanTheMaximumTags",
			layoutName = "questions-page",
			siteURLKey = "guest",
			tagLocatorList = "Tag1,Tag2,Tag3,Tag4,Tag5,Tag6",
			titleField = "Title AddQuestionWithMoreThanTheMaximumTags",
			topicName = "questions-test-category");

		AssertElementPresent(
			key_errorMessage = "This is an invalid tag.",
			locator1 = "Questions#ASK_QUESTION_ERROR_MESSAGE");
	}

	@description = "Validate that the user cannot post a question with a tag containing Java Script. It also covers LPS-137561 and LPS-137633."
	@priority = "4"
	test CannotPostQuestionWithTagContainingJavaScript {
		Navigator.gotoPage(pageName = "Questions Page");

		Questions.addRootTopic(
			invalidCharacters = "Topic",
			rootTopicDescription = '''<script>alert(123);</script>''',
			rootTopicName = '''<script>alert(123);</script>''');

		Questions.viewDefault();

		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		Questions.askQuestionFillingTheMandatoryFields(
			contentField = "Body AddQuestionWithMoreText",
			invalidCharacters = "Tag",
			layoutName = "questions-page",
			siteURLKey = "guest",
			tagLocatorList = '''<script>alert(123);</script>''',
			titleField = "Title AddQuestion",
			topicName = "questions-test-category");

		AssertAlertNotPresent();
	}

	@description = "Validate if the user can subscribe from the tag."
	@priority = "4"
	test CanSubscribeFromTag {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");

		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		JSONQuestions.addQuestionWithTag(
			bodyField = "Content AddQuestion",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			tagField = "tag",
			titleField = "Title AddQuestion");

		Questions.openToTagsTab(
			layoutName = "questions-page",
			siteURLKey = "guest");

		Questions.subscribeFromTag();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Questions.askQuestionFillingTheMandatoryFields(
			contentField = "Content AddQuestion New",
			layoutName = "questions-page",
			siteURLKey = "guest",
			tagLocatorList = "tag",
			titleField = "Title AddQuestion New",
			topicName = "questions-test-category");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "message boards message",
			contentBody = "Title AddQuestion New",
			user = "userfn userln");

		Notifications.navigateToContent(contentBody = "Title AddQuestion New");

		Questions.viewDetailsTitle(questionTitle = "Title AddQuestion New");
	}

	@description = "Validate if the user can unsubscribe from the tag."
	@priority = "4"
	test CanUnsubscribeFromTag {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");

		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		JSONQuestions.addQuestionWithTag(
			bodyField = "Content AddQuestion",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			tagField = "tag",
			titleField = "Title AddQuestion");

		Questions.openToTagsTab(
			layoutName = "questions-page",
			siteURLKey = "guest");

		Questions.subscribeFromTag();

		Questions.unsubscribeFromTag();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		JSONQuestions.addQuestionWithTag(
			bodyField = "Content AddQuestion New",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			tagField = "tag",
			titleField = "Title AddQuestion New",
			userEmailAddress = "userea@liferay.com");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(notificationCount = "0");
	}

	@description = "Validate if when the user click in the tag of the Tags tab, the user is redirected to the questions that use this tag"
	@priority = "3"
	@refactordone
	test CanViewQuestionViaTag {
		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		JSONQuestions.addQuestionWithTag(
			bodyField = "Body TagCardRedirectTheUserToTheQuestionsThatAreUsingThisTag",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			tagField = "tag1",
			titleField = "Title TagCardRedirectTheUserToTheQuestionsThatAreUsingThisTag");

		Questions.openToTagsTab(
			layoutName = "questions-page",
			siteURLKey = "guest");

		Questions.viewQuestionViaTag(
			questionTitle = "Title TagCardRedirectTheUserToTheQuestionsThatAreUsingThisTag",
			tagName = "tag1");
	}

	@description = "Validate if Question portlet have one tab with all tags used in the questions"
	@priority = "3"
	@refactordone
	test ListOfTagsCanBeViewedInTagsTab {
		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Question ListOfTagsAppearsInTheTagsTab",
			userEmailAddress = "test@liferay.com");

		Questions.openToTagsTab(
			layoutName = "questions-page",
			siteURLKey = "guest");

		Questions.viewTags(noTagResults = "true");

		Questions.configureTagsFilter(filterBy = "Latest Created");

		Questions.viewTags(noTagResults = "true");

		JSONAssettag.addTag(
			groupName = "Guest",
			tagName = "tag2");

		JSONQuestions.addQuestionWithTag(
			bodyField = "Body ListOfTagsAppearsInTheTagsTab",
			categoryName = "Question ListOfTagsAppearsInTheTagsTab",
			groupName = "Guest",
			tagField = "tag1",
			titleField = "Title ListOfTagsAppearsInTheTagsTab");

		Questions.openToTagsTab(
			layoutName = "questions-page",
			siteURLKey = "guest");

		Questions.configureTagsFilter(filterBy = "Latest Created");

		for (var tagName : list "tag1,tag2") {
			Questions.viewTags(tagName = "${tagName}");
		}
	}

	@description = "Validate if the user can sort the tags."
	@priority = "4"
	@refactordone
	@uitest
	test QuestionsTagsCanBeSortedInTagsTab {
		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Questions Test Category",
			userEmailAddress = "test@liferay.com");

		for (var num : list "1,2") {
			JSONQuestions.addQuestionWithTag(
				bodyField = "Question Body ${num}",
				categoryName = "Questions Test Category",
				groupName = "Guest",
				tagField = "tag1",
				titleField = "Question ${num}");
		}

		JSONQuestions.addQuestionWithTag(
			bodyField = "Question Body 3",
			categoryName = "Questions Test Category",
			groupName = "Guest",
			tagField = "tag2",
			titleField = "Question 3");

		Navigator.gotoPage(pageName = "Questions Page");

		Questions.gotoCategory(categoryName = "Questions Test Category");

		Questions.gotoTab(questionTabField = "Tags");

		Questions.viewTagsFilterResults(
			position = "1",
			tagName = "tag1",
			usedTimes = "Used 2 Times");

		Questions.viewTagsFilterResults(
			position = "2",
			tagName = "tag2",
			usedTimes = "Used 1 Times");

		Questions.configureTagsFilter(filterBy = "Latest Created");

		Questions.viewTagsFilterResults(
			position = "1",
			tagName = "tag2");

		Questions.viewTagsFilterResults(
			position = "2",
			tagName = "tag1");

		Questions.configureTagsFilter(filterBy = "Number of Usages");

		Questions.viewTagsFilterResults(
			position = "1",
			tagName = "tag1",
			usedTimes = "Used 2 Times");

		Questions.viewTagsFilterResults(
			position = "2",
			tagName = "tag2",
			usedTimes = "Used 1 Times");
	}

	@description = "Validate if the Tags tab of the question portlet, the tags are ordered by occurrences"
	@priority = "4"
	@refactordone
	test QuestionTagsCanBeOrderedByOccurrenceInTagsTab {
		for (var num : list "1,2") {
			JSONMBMessage.addCategory(
				categoryDescription = "Description",
				categoryName = "Question ValidateTagsOccurrences${num}",
				userEmailAddress = "test@liferay.com");
		}

		for (var num : list "1,2") {
			JSONQuestions.addQuestionWithTag(
				bodyField = "Question Body ${num}",
				categoryName = "Question ValidateTagsOccurrences1",
				groupName = "Guest",
				tagField = "tag1",
				titleField = "Question ${num}");
		}

		Questions.openToTagsTab(
			layoutName = "questions-page",
			siteURLKey = "guest");

		Questions.viewTags(
			amountOfUsedTimes = "2",
			tagName = "tag1");

		JSONQuestions.addQuestionWithTag(
			bodyField = "Question Body 3",
			categoryName = "Question ValidateTagsOccurrences2",
			groupName = "Guest",
			tagField = "tag1",
			titleField = "Question 3");

		Questions.openToTagsTab(
			layoutName = "questions-page",
			siteURLKey = "guest");

		Questions.viewTags(
			amountOfUsedTimes = "3",
			tagName = "tag1");
	}

	@description = "This test covers LPS-119780. It ensures that the user can search by tags in the tags search field."
	@priority = "4"
	@refactordone
	test QuestionTagsCanBeSearchedInTagsTab {
		JSONMBMessage.addCategory(
			categoryDescription = "Description",
			categoryName = "Question ValidateSearchByQuestionTags",
			userEmailAddress = "test@liferay.com");

		for (var num : list "1,2,3") {
			JSONQuestions.addQuestionWithTag(
				bodyField = "Question Body ${num}",
				categoryName = "Question ValidateSearchByQuestionTags",
				groupName = "Guest",
				tagField = "tag${num}",
				titleField = "Question ${num}");
		}

		Questions.openToTagsTab(
			layoutName = "questions-page",
			siteURLKey = "guest");

		Questions.search(
			searchKey = "tag1",
			searchTag = "true");

		Questions.viewTags(tagName = "tag1");

		Questions.viewNoTags(tagsList = "tag2,tag3");

		Questions.clearSearchResults();

		for (var tagName : list "tag1,tag2,tag3") {
			Questions.viewTags(tagName = "${tagName}");
		}

		Questions.configureTagsFilter(filterBy = "Latest Created");

		Questions.search(
			searchKey = "tag2",
			searchTag = "true");

		Questions.viewTags(tagName = "tag2");

		Questions.viewNoTags(tagsList = "tag1,tag3");

		Questions.clearSearchResults();

		for (var tagName : list "tag1,tag2,tag3") {
			Questions.viewTags(tagName = "${tagName}");
		}
	}

}