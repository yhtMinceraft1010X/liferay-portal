@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Documents and Media Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Documents and Media Page",
			widgetName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.enableActionsMenuOnPortlet();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			PagesAdmin.tearDownCP();
		}
	}

	@description = "This checks that users can configure the cache control as private."
	@priority = "4"
	test CanConfigureCacheControlAsPrivate {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "DMCache#CanConfigureCacheControlAsPrivate";

		DMDocument.configureCacheControl(
			cacheControl = "Private",
			maxAge = "30",
			systemSettingsInstanceScope = "true");

		JSONDocument.addFileWithUploadedFile(
			assetTagNames = "Tag Name",
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Commerce_Blue.jpg");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoDocumentPG(dmDocumentTitle = "DM Document Title");

		var responseHeader = DMDocument.getFileResponseHeader(dmDocumentFileName = "Commerce_Blue.jpg");

		DMDocument.viewCacheControlConfigurationInConsole(
			cacheControl = "private",
			maxAge = "30",
			responseHeader = "${responseHeader}");
	}

	@description = "This checks that users can configure the cache control as public."
	@priority = "4"
	test CanConfigureCacheControlAsPublic {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "DMCache#CanConfigureCacheControlAsPublic";

		DMDocument.configureCacheControl(
			cacheControl = "Public",
			maxAge = "30");

		JSONDocument.addFileWithUploadedFile(
			assetTagNames = "Tag Name",
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Commerce_Blue.jpg");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoDocumentPG(dmDocumentTitle = "DM Document Title");

		var responseHeader = DMDocument.getFileResponseHeader(dmDocumentFileName = "Commerce_Blue.jpg");

		DMDocument.viewCacheControlConfigurationInConsole(
			cacheControl = "public",
			maxAge = "30",
			responseHeader = "${responseHeader}");
	}

	@description = "This checks that users can configure uncacheable mime type in the cache control."
	@priority = "3"
	test CanConfigureUncacheableMimeTypeInCacheControl {
		property test.name.skip.portal.instance = "DMCache#CanConfigureUncacheableMimeTypeInCacheControl";

		DMDocument.configureCacheControl(uncacheableMimeTypes = "image/jpeg");

		JSONDocument.addFileWithUploadedFile(
			assetTagNames = "Tag Name",
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Commerce_Blue.jpg");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoDocumentPG(dmDocumentTitle = "DM Document Title");

		var responseHeader = DMDocument.getFileResponseHeader(dmDocumentFileName = "Commerce_Blue.jpg");

		DMDocument.viewCacheControlConfigurationInConsole(
			responseHeader = "${responseHeader}",
			uncacheableMimeType = "true");
	}

	@description = "This checks that the cache control configured in an instance will not affect other instance settings."
	@priority = "4"
	test ConfiguredCacheControlOnlyWorksOnCurrentInstance {
		property test.name.skip.portal.instance = "DMCache#ConfiguredCacheControlOnlyWorksOnCurrentInstance";

		DMDocument.configureCacheControl(
			cacheControl = "Public",
			maxAge = "30");

		HeadlessPortalInstanceAPI.addPortalInstance(
			domain = "www.able.com",
			portalInstanceId = "www.able.com",
			virtualHost = "www.able.com");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.able.com:8080",
			userEmailAddress = "test@www.able.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://www.able.com:8080",
			siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Commerce_Blue.jpg",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		var responseHeader = DMDocument.getFileResponseHeader(dmDocumentFileName = "Commerce_Blue.jpg");

		DMDocument.viewNoCacheControlConfigurationInConsole(
			cacheControlAttribute = "Cache-Control: public, max-age: 30",
			responseHeader = "${responseHeader}");
	}

}