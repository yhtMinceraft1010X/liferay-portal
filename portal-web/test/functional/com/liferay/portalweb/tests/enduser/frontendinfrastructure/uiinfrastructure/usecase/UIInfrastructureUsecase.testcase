@component-name = "portal-frontend-infrastructure"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "User Interface";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PagesAdmin.tearDownCP();

			JSONUser.tearDownNonAdminUsers();
		}
	}

	@description = "This is a use case for LPS-95157. Verify control menu on an admin page is styled correctly after refreshing page"
	@priority = "5"
	@refactordone
	test AdminPageCanDisplayStyleCorrectlyAfterPageRefresh {
		property app.server.types = "tomcat";
		property database.types = "mysql";
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		Refresh();

		AssertCssValue(
			locator1 = "//ul[contains(@id,'controlMenu')]",
			locator2 = "display",
			value1 = "flex");

		AssertCssValue(
			locator1 = "//ul[contains(@id,'controlMenu')]",
			locator2 = "list-style",
			value1 = "outside none none");

		takeScreenshot();
	}

	@description = "This is a use case for LPS-70390."
	@priority = "4"
	@refactordone
	test CanViewNonASCIICharactersWithSPADisabled {
		property custom.properties = "javascript.single.page.application.enabled=false";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "skandi@liferay.com",
			userFirstName = "Skändi",
			userLastName = "Ääkkönen",
			userScreenName = "uskandi");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.viewCP(
			userEmailAddress = "skandi@liferay.com",
			userFirstName = "Skändi",
			userLastName = "Ääkkönen",
			userScreenName = "uskandi");
	}

	@description = "Verify portlets have defined boundaries in 3 column page layout."
	@priority = "5"
	@refactordone
	test PortletBoundariesAreContained {
		property app.server.types = "tomcat";
		property database.types = "mysql";
		property environment.acceptance = "true";
		property osgi.modules.includes = "frontend-taglib-clay-sample-web";
		property portal.acceptance = "true";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page",
			layoutTemplate = "3 Columns");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Test Page",
			widgetName = "Message Boards");

		JSONLayout.addWidgetToPublicLayout(
			column = "2",
			groupName = "Guest",
			layoutName = "Test Page",
			widgetName = "Clay Sample");

		JSONLayout.addWidgetToPublicLayout(
			column = "3",
			groupName = "Guest",
			layoutName = "Test Page",
			widgetName = "Documents and Media");

		Navigator.gotoPage(pageName = "Test Page");

		MouseOver(
			key_pageColumnNumber = "1",
			key_portletName = "Message Boards",
			locator1 = "Portlet#PORTLET_TITLE_INSIDE_PAGE_COLUMN");

		Portlet.assertPortletHeader(portletName = "MBPortlet");

		takeScreenshot();

		MouseOver(
			key_pageColumnNumber = "2",
			key_portletName = "Clay Sample",
			locator1 = "Portlet#PORTLET_TITLE_INSIDE_PAGE_COLUMN");

		Portlet.assertPortletHeader(portletName = "ClaySamplePortlet");

		takeScreenshot();

		MouseOver(
			key_pageColumnNumber = "3",
			key_portletName = "Documents and Media",
			locator1 = "Portlet#PORTLET_TITLE_INSIDE_PAGE_COLUMN");

		Portlet.assertPortletHeader(portletName = "DLPortlet");

		takeScreenshot();
	}

	@description = "Smoke test to verify portlet can be dragged and dropped, configuration is available, look and feel is available, and can be removed"
	@priority = "5"
	@refactordone
	test PortletUISmoke {
		property app.server.types = "jboss,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property osgi.modules.includes = "frontend-taglib-clay-sample-web";
		property portal.acceptance = "true";

		task ("Add portlet to public page") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Test Page");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Guest",
				layoutName = "Test Page",
				widgetName = "Clay Sample");
		}

		task ("Assert the 'Configuration' iframe of the portlet") {
			Navigator.gotoPage(pageName = "Test Page");

			Portlet.gotoPortletOptions(
				portletName = "Clay Sample",
				portletOption = "Configuration");

			IFrame.selectConfigurationFrame();

			AssertTextEquals(
				key_navItem = "Sharing",
				locator1 = "NavBar#NAV_ITEM_LINK",
				value1 = "Sharing");

			IFrame.closeFrame();
		}

		task ("Assert the 'Look and Feel' iframe of the Clay Sample portlet") {
			Navigator.gotoPage(pageName = "Test Page");

			Portlet.gotoPortletOptions(
				portletName = "Clay Sample",
				portletOption = "Look and Feel Configuration");

			IFrame.selectConfigurationFrame();

			var key_tab = "General";

			AssertTextEquals(
				locator1 = "NavTab#TAB_LINK",
				value1 = "General");

			IFrame.closeFrame();
		}

		task ("Assert able to drag and drop portlet") {
			Navigator.gotoPage(pageName = "Test Page");

			Portlet.dragAndDropPortletToColumnPG(
				columnNumberFrom = "1",
				columnNumberTo = "2",
				portletName = "Clay Sample");

			Portlet.dragAndDropPortletToColumnPG(
				columnNumberFrom = "2",
				columnNumberTo = "1",
				portletName = "Clay Sample");
		}

		task ("Removes Clay Sample Portlet on Test Page") {
			Navigator.gotoPage(pageName = "Test Page");

			Portlet.deletePG(portletName = "Clay Sample");

			Portlet.viewNoSpecificPG(portletName = "Clay Sample");
		}
	}

	@description = "This is a use case for LPS-95157. Verify control menu on home page is styled correctly after refreshing page."
	@priority = "5"
	@refactordone
	test SitePageCanDisplayStyleCorrectlyAfterPageRefresh {
		property app.server.types = "tomcat";
		property database.types = "mysql";
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Home");

		ProductMenuHelper.closeProductMenu();

		Refresh();

		AssertCssValue(
			locator1 = "//ul[contains(@id,'controlMenu')]",
			locator2 = "display",
			value1 = "flex");

		AssertCssValue(
			locator1 = "//ul[contains(@id,'controlMenu')]",
			locator2 = "list-style",
			value1 = "outside none none");

		takeScreenshot();

		ProductMenuHelper.openProductMenu();

		Refresh();

		AssertCssValue(
			locator1 = "//ul[contains(@id,'controlMenu')]",
			locator2 = "display",
			value1 = "flex");

		AssertCssValue(
			locator1 = "//ul[contains(@id,'controlMenu')]",
			locator2 = "list-style",
			value1 = "outside none none");

		takeScreenshot();
	}

}