@component-name = "portal-lima"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Wiki";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Staging Test Page");

		JSONStaging.enableLocalStaging(groupName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}
	}

	@description = "This ensures that the deleted page can not be viewed in the live site after publishing."
	@priority = "4"
	@refactordone
	test CannotViewDeletedWikiPageAfterPublishing {
		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name (Staging)",
			layoutName = "Staging Test Page",
			site = "false",
			widgetName = "Wiki");

		JSONWiki.addWikiPage(
			groupName = "Site Name (Staging)",
			site = "false",
			wikiNodeName = "Main",
			wikiPageContent = "Wiki Page Content",
			wikiPageName = "Wiki Page Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		WikiNavigator.gotoWidgetSpecificTabByURL(
			layoutURLKey = "staging-test-page",
			siteURLKey = "site-name-staging",
			tabURLKey = "all_pages",
			wikiNodeName = "Main");

		WikiPage.deletePG(wikiPageTitle = "Wiki Page Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		WikiNavigator.gotoWidgetSpecificTabByURL(
			layoutURLKey = "staging-test-page",
			siteURLKey = "site-name",
			tabURLKey = "all_pages",
			wikiNodeName = "Main");

		WikiPage.viewNoPagePG(wikiPageTitle = "Wiki Page Title");
	}

	@description = "This is a use case for LPS-73992. It asserts removed wiki attachment file can not be viewed after publishing."
	@priority = "5"
	@refactordone
	test CannotViewRemovedAttachmentAfterPublishing {
		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name (Staging)",
			layoutName = "Staging Test Page",
			site = "false",
			widgetName = "Wiki");

		JSONWiki.addWikiPage(
			groupName = "Site Name (Staging)",
			site = "false",
			wikiNodeName = "Main",
			wikiPageContent = "Wiki Page Content",
			wikiPageName = "Wiki Page Title");

		JSONWiki.addAttachmentToWikiPage(
			fileName = "Document_1.jpg",
			groupName = "Site Name (Staging)",
			mimeType = "image/jpeg",
			site = "false",
			wikiNodeName = "Main",
			wikiPageName = "Wiki Page Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.removeAttachmentViaPageEdit(attachmentFileName = "Document_1.jpg");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.viewPageNoAttachment(
			attachmentFileName = "Document_1.jpg",
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");
	}

	@description = "This test covers LPS-95501. It asserts added wiki attachment file can be viewed after publishing."
	@priority = "4"
	@refactordone
	test CanViewAttachmentAfterPublish {
		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name (Staging)",
			layoutName = "Staging Test Page",
			site = "false",
			widgetName = "Wiki");

		JSONWiki.addWikiPage(
			groupName = "Site Name (Staging)",
			site = "false",
			wikiNodeName = "Main",
			wikiPageContent = "Wiki Page Content",
			wikiPageName = "Wiki Page Title");

		JSONWiki.addAttachmentToWikiPage(
			fileName = "Document_1.jpg",
			groupName = "Site Name (Staging)",
			mimeType = "image/jpeg",
			site = "false",
			wikiNodeName = "Main",
			wikiPageName = "Wiki Page Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		WikiNavigator.openToWikiPage(
			layoutURLKey = "staging-test-page",
			siteURLKey = "site-name",
			wikiNodeName = "Main",
			wikiPageTitle = "Wiki Page Title");

		WikiPage.viewPageWithAttachment(
			attachmentFileName = "Document_1.jpg",
			inlineImage = "true",
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		WikiNavigator.openToWikiPage(
			layoutURLKey = "staging-test-page",
			siteURLKey = "site-name-staging",
			wikiNodeName = "Main",
			wikiPageTitle = "Wiki Page Title");

		WikiPage.viewAttachmentPGViaEdit(
			attachmentFileName = "Document_1.jpg",
			wikiPageTitle = "Wiki Page Title");

		ItemSelector.viewWikiAttachment(imageFileName = "Document_1.jpg");
	}

	@description = "This is a test for LPS-95709. It ensures that an attachment for a Wiki frontpage is intact after the entry is published."
	@priority = "4"
	test CanViewAttachmentForFrontPageAfterPublish {
		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name (Staging)",
			layoutName = "Staging Test Page",
			site = "false",
			widgetName = "Wiki");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		JSONWiki.updateWikiPage(
			groupName = "Site Name (Staging)",
			site = "false",
			wikiNodeName = "Main",
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageName = "FrontPage");

		JSONWiki.addAttachmentToWikiPage(
			fileName = "Document_1.jpg",
			groupName = "Site Name (Staging)",
			mimeType = "image/jpeg",
			site = "false",
			wikiNodeName = "Main",
			wikiPageName = "FrontPage");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		WikiNavigator.openToWikiPage(
			layoutURLKey = "staging-test-page",
			siteURLKey = "site-name",
			wikiNodeName = "Main",
			wikiPageTitle = "FrontPage");

		WikiPage.viewPageWithAttachment(
			attachmentFileName = "Document_1.jpg",
			inlineImage = "true",
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageTitle = "FrontPage");
	}

	@description = "This ensures that the added front page can be viewed in the live site after publishing."
	@priority = "4"
	@refactordone
	test CanViewFrontPageAfterPublishing {
		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name (Staging)",
			layoutName = "Staging Test Page",
			site = "false",
			widgetName = "Wiki");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		WikiPage.addFrontPagePG(wikiPageContent = "Wiki FrontPage Content");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		WikiNavigator.gotoWidgetSpecificTabByURL(
			layoutURLKey = "staging-test-page",
			siteURLKey = "site-name",
			tabURLKey = "all_pages",
			wikiNodeName = "Main");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.viewPG(
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageTitle = "FrontPage");
	}

	@description = "This is a use case for LPS-73471. It asserts the renamed child page can be viewed after publishing."
	@priority = "5"
	@refactordone
	test CanViewRenamedChildPageAfterPublishing {
		JSONWiki.addWikiPage(
			groupName = "Site Name (Staging)",
			site = "false",
			wikiNodeName = "Main",
			wikiPageContent = "Wiki Page Content",
			wikiPageName = "Wiki Page Title");

		JSONWiki.addWikiChildPage(
			groupName = "Site Name (Staging)",
			site = "false",
			wikiChildPageContent = "Child Page Content",
			wikiChildPageName = "Child Page Title",
			wikiNodeName = "Main",
			wikiParentPageName = "Wiki Page Title");

		WikiNavigator.openToWikiPage(
			siteURLKey = "site-name-staging",
			wikiNodeName = "Main",
			wikiPageTitle = "Child Page Title");

		WikiPage.renameWikiPageCP(
			wikiPageTitle = "Child Page Title",
			wikiPageTitleRename = "Rename Page Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.configurePublishToLive(checkContentNameList = "Wiki");

		Staging.publishToLive();

		WikiNavigator.openToWikiPage(
			siteURLKey = "site-name-staging",
			wikiNodeName = "Main",
			wikiPageTitle = "Child Page Title");

		WikiPage.renameWikiPageCP(
			wikiPageTitle = "Child Page Title",
			wikiPageTitleRename = "Rename Page Title 1");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.configurePublishToLive(checkContentNameList = "Wiki");

		Staging.publishToLive();

		WikiNavigator.openToWikiNode(
			groupName = "Site Name",
			siteURLKey = "site-name",
			wikiNodeName = "Main");

		for (var wikiPageTitle : list "Child Page Title,Rename Page Title,Rename Page Title 1") {
			LexiconEntry.viewEntryName(rowEntry = "${wikiPageTitle}");
		}
	}

	@description = "This ensures that the added page can be viewed in the live site after publishing."
	@priority = "4"
	@refactordone
	test CanViewWikiPageAfterPublishing {
		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name (Staging)",
			layoutName = "Staging Test Page",
			site = "false",
			widgetName = "Wiki");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		WikiNavigator.gotoWidgetSpecificTabByURL(
			layoutURLKey = "staging-test-page",
			siteURLKey = "site-name",
			tabURLKey = "all_pages",
			wikiNodeName = "Main");

		WikiTable.viewEntry(
			entryStatus = "APPROVED",
			wikiPageTitle = "Wiki Page Title");
	}

}