@component-name = "portal-upgrades"
definition {

	property app.server.types = "jboss,tcserver,tomcat,weblogic,websphere,wildfly";
	property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property test.assert.warning.exceptions = "true";
	property testray.component.names = "Remote Apps";
	property testray.main.component.name = "Upgrades Remote Apps";

	setUp {
		SignIn.signIn();

		var portalURL = PropsUtil.get("portal.url");

		AssertLocation.assertPartialLocation(value1 = "${portalURL}/web/guest");

		SearchAdministration.executeReindex();
	}

	@description = "Upgrade to 7.4.13 and assert custom remote app can be viewed in portlet"
	@priority = "4"
	test CanViewRemoteAppCustomElementPortletAfterUpgrade7413 {
		property data.archive.type = "data-archive-remote-app";
		property portal.version = "7.4.13";
		property test.run.environment = "EE";

		task ("Assert custom remote app is present after upgrade") {
			RemoteAppsUpgrade.assertRemoteAppEntry(
				upgradeName = "Vanilla Counter",
				upgradeType = "Custom Element");
		}

		task ("Assert custom remote app fields are saved after upgrade") {
			RemoteAppsUpgrade.assertCustomRemoteAppEntryFields(
				upgradeCssurl = "https://liferay.github.io/liferay-frontend-projects/index.css",
				upgradeHtmlName = "vanilla-counter",
				upgradeName = "Vanilla Counter",
				upgradeURL = "https://liferay.github.io/liferay-frontend-projects/vanilla-counter/index.js");
		}

		task ("Navigate to content page") {
			Navigator.openURL();

			Navigator.gotoPage(pageName = "Test Page");
		}

		task ("Assert Vanilla Counter is present on page") {
			AssertElementPresent(locator1 = "RemoteApps#VANILLA_COUNTER_REMOTE_APP");
		}
	}

	@description = "Upgrade to 7.3.10.1 and assert remote app fields were saved properly"
	@priority = "5"
	test CanViewRemoteAppFieldsAfterUpgrade73101 {
		property data.archive.type = "data-archive-remote-app";
		property portal.version = "7.3.10.1";
		property test.run.environment = "EE";

		var remoteAppName = "Test Remote App";
		var remoteAppType = "IFrame";
		var remoteAppURL = "http://www.liferay.com";

		task ("Assert remote app is present after upgrade") {
			RemoteAppsUpgrade.assertRemoteAppEntry(
				upgradeName = "${remoteAppName}",
				upgradeType = "${remoteAppType}");
		}

		task ("Assert remote app fields are saved after upgrade") {
			RemoteAppsUpgrade.assertRemoteAppEntryFields(
				upgradeName = "${remoteAppName}",
				upgradeURL = "${remoteAppURL}");
		}
	}

}