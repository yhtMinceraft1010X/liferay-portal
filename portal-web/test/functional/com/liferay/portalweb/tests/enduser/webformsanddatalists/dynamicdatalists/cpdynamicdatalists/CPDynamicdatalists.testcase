@component-name = "portal-web-forms-and-data-lists"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Dynamic Data Lists";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DDLTemplate.tearDownTemplateCP();

			DDLTemplate.tearDownTemplateCP(ddlDataDefinitionName = "Data Definition Copy");

			DDLList.tearDownCP();

			DDLDataDefinition.tearDownCP();

			DMDocument.tearDownCP();

			PagesAdmin.tearDownCP();
		}
	}

	@priority = "4"
	test AddDisplayTemplateFreeMarker {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition FreeMarker Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");
	}

	@priority = "5"
	test AddDisplayTemplateVelocity {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "Velocity (.vm)",
			ddlDisplayTemplateName = "Data Definition Velocity Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");
	}

	@priority = "5"
	test AddFormTemplate {
		task ("Create a Data Definition containing a boolean field and a text field") {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Dynamic Data Lists");

			DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

			DynamicDataMapping.addField(
				field = "Boolean",
				fieldFieldLabel = "Boolean",
				fieldName = "Boolean");

			DynamicDataMapping.addField(
				field = "Text",
				fieldFieldLabel = "Text",
				fieldName = "Text");

			DDLDataDefinition.save();
		}

		task ("Go to Manage Templates of the created Data Definition") {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Dynamic Data Lists");

			DDLNavigator.gotoManageDataDefinitions();

			var key_ddlDataDefinitionName = "Data Definition";

			Click.waitForMenuToggleJSClick(locator1 = "DDMSelectStructure#DDM_STRUCTURE_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Manage Templates");

			ClickNoError(
				ariaLabel = "New",
				locator1 = "Button#ANY_WITH_ARIA_LABEL");

			MenuItem.clickNoError(menuItem = "Add Form Template");

			Type.clickAtType(
				locator1 = "TextInput#NAME",
				value1 = "Form Template Name");
		}

		task ("Assert that boolean field and text field can't be added, as they're present") {
			DynamicDataMapping.viewCannotAddField(field = "Boolean");

			DynamicDataMapping.viewCannotAddField(field = "Text");
		}

		task ("Delete the boolean field and assert that it can be added again") {
			MouseOver(
				key_text = "Boolean",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_TEXT");

			Click.mouseOverClick(locator1 = "DDMEditStructure#FORM_FIELD_DELETE_BUTTON_2");

			AssertTextEquals(
				locator1 = "IFrame#DIALOG_BOX",
				value1 = "Boolean");

			AssertTextEquals(
				locator1 = "DDMEditStructure#ARE_YOU_SURE_DIALOG_BOX_BODY",
				value1 = "Are you sure you want to delete the selected entries? They will be deleted immediately.");

			AssertClick(
				locator1 = "Button#OK",
				value1 = "OK");

			SelectFrame(value1 = "relative=top");

			DynamicDataMapping.viewCanAddField(field = "Boolean");
		}

		task ("Add separator and Paragraph fields to the template") {
			DynamicDataMapping.addFieldFormTemplateSpecific(field = "Separator");

			DynamicDataMapping.addFieldFormTemplateSpecific(field = "Paragraph");

			DDLDataDefinition.save();
		}
	}

	@priority = "4"
	test AddList {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.viewCP(ddlListName = "List Name");
	}

	@priority = "3"
	test AddListAndRecordWithContactsPredefinedDataDefinition {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "Contacts Description",
			ddlListName = "Contacts");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Contacts");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Contacts",
			ddlListName = "Contacts");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Liferay",
			fieldFieldLabel = "Company",
			fieldName = "company");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "test@liferay.com",
			fieldFieldLabel = "Email",
			fieldName = "email");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Test",
			fieldFieldLabel = "First Name",
			fieldName = "firstName");

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "Google Hangouts",
			fieldFieldLabel = "Instant Messenger Service",
			fieldName = "imService");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "testliferay",
			fieldFieldLabel = "Instant Messenger",
			fieldName = "imUserName");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "QA Engineer",
			fieldFieldLabel = "Job Title",
			fieldName = "jobTitle");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Test",
			fieldFieldLabel = "Last Name",
			fieldName = "lastName");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Notes",
			fieldFieldLabel = "Notes",
			fieldName = "notes");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "(123) 456-7890",
			fieldFieldLabel = "Phone (Mobile)",
			fieldName = "phoneMobile");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "(123) 111-2222",
			fieldFieldLabel = "Phone (Office)",
			fieldName = "phoneOffice");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "Contacts");
	}

	@priority = "3"
	test AddListAndRecordWithEventsPredefinedDataDefinition {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "Events Description",
			ddlListName = "Events");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Events");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Events",
			ddlListName = "Events");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.txt",
			fieldFieldLabel = "Attachment",
			fieldName = "attachment");

		DDLRecord.populateFieldNumber(
			ddlRecordFieldData = "10",
			fieldFieldLabel = "Cost",
			fieldName = "cost");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Test Description",
			fieldFieldLabel = "Description",
			fieldName = "description");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2017",
			fieldFieldLabel = "Date",
			fieldName = "eventDate");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Company Party",
			fieldFieldLabel = "Event Name",
			fieldName = "eventName");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "12:00 pm",
			fieldFieldLabel = "Time",
			fieldName = "eventTime");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Room 8",
			fieldFieldLabel = "Location",
			fieldName = "location");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "Events");
	}

	@priority = "3"
	test AddListAndRecordWithInventoryPredefinedDataDefinition {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "Inventory Description",
			ddlListName = "Inventory");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Inventory");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Inventory",
			ddlListName = "Inventory");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Test Description",
			fieldFieldLabel = "Description",
			fieldName = "description");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Liferay Portal",
			fieldFieldLabel = "Item",
			fieldName = "item");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Los Angeles",
			fieldFieldLabel = "Location",
			fieldName = "location");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2017",
			fieldFieldLabel = "Purchase Date",
			fieldName = "purchaseDate");

		DDLRecord.populateFieldNumber(
			ddlRecordFieldData = "12000",
			fieldFieldLabel = "Purchase Price",
			fieldName = "purchasePrice");

		DDLRecord.populateFieldNumber(
			ddlRecordFieldData = "100",
			fieldFieldLabel = "Quantity",
			fieldName = "quantity");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "Inventory");
	}

	@priority = "3"
	test AddListAndRecordWithIssuesTrackingPredefinedDataDefinition {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "Issues Tracking Description",
			ddlListName = "Issues Tracking");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Issues Tracking");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Issues Tracking",
			ddlListName = "Issues Tracking");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Test Test",
			fieldFieldLabel = "Assigned To",
			fieldName = "assignedTo");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.txt",
			fieldFieldLabel = "Attachment",
			fieldName = "attachment");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Comment",
			fieldFieldLabel = "Comments",
			fieldName = "comments");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Test Description",
			fieldFieldLabel = "Description",
			fieldName = "description");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2017",
			fieldFieldLabel = "Due Date",
			fieldName = "dueDate");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "LPS-90000",
			fieldFieldLabel = "Issue ID",
			fieldName = "issueId");

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "Minor",
			fieldFieldLabel = "Severity",
			fieldName = "severity");

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "Open",
			fieldFieldLabel = "Status",
			fieldName = "status");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Minor Issue",
			fieldFieldLabel = "Title",
			fieldName = "title");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "Issues Tracking");
	}

	@priority = "3"
	test AddListAndRecordWithMeetingMinutesPredefinedDataDefinition {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "Meeting Minutes Description",
			ddlListName = "Meeting Minutes");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Meeting Minutes");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Meeting Minutes",
			ddlListName = "Meeting Minutes");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.txt",
			fieldFieldLabel = "Attachment",
			fieldName = "attachment");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Test Test",
			fieldFieldLabel = "Author",
			fieldName = "author");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Test Description",
			fieldFieldLabel = "Description",
			fieldName = "description");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "20 Minutes",
			fieldFieldLabel = "Meeting Duration",
			fieldName = "duration");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2017",
			fieldFieldLabel = "Meeting Date",
			fieldName = "meetingDate");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Minutes Details",
			fieldFieldLabel = "Minutes",
			fieldName = "minutes");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "First Meeting",
			fieldFieldLabel = "Title",
			fieldName = "title");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "Meeting Minutes");
	}

	@priority = "5"
	test AddListAndRecordWithToDoPredefinedDataDefinition {
		property portal.acceptance = "quarantine";
		property portal.upstream = "quarantine";
		property test.name.skip.portal.instance = "CPDynamicdatalists#AddListAndRecordWithToDoPredefinedDataDefinition";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "To Do Description",
			ddlListName = "To Do");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "To Do");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "To Do",
			ddlListName = "To Do");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Test Test",
			fieldFieldLabel = "Assigned To",
			fieldName = "assignedTo");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.txt",
			fieldFieldLabel = "Attachment",
			fieldName = "attachment");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Comment",
			fieldFieldLabel = "Comments",
			fieldName = "comments");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Test Description",
			fieldFieldLabel = "Description",
			fieldName = "description");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2017",
			fieldFieldLabel = "End Date",
			fieldName = "endDate");

		DDLRecord.populateFieldInteger(
			ddlRecordFieldData = "7",
			fieldFieldLabel = "% Complete",
			fieldName = "percentComplete");

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "Major",
			fieldFieldLabel = "Severity",
			fieldName = "severity");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2017",
			fieldFieldLabel = "Start Date",
			fieldName = "startDate");

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "Pending",
			fieldFieldLabel = "Status",
			fieldName = "status");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Test",
			fieldFieldLabel = "Title",
			fieldName = "title");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "To Do");
	}

	@priority = "4"
	test AddListRecordWithBooleanField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "True",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "True",
			field = "Boolean",
			fieldFieldLabel = "Boolean");
	}

	@priority = "4"
	test AddListRecordWithDateField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Date",
			fieldFieldLabel = "Date",
			fieldName = "Date");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Date");

		DynamicDataMapping.viewField(
			field = "Date",
			fieldFieldLabel = "Date",
			fieldName = "Date");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2017",
			fieldFieldLabel = "Date",
			fieldName = "Date");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "4/1/2017",
			ddlRecordFieldData_1 = "4/1/17",
			field = "Date",
			fieldFieldLabel = "Date");
	}

	@priority = "4"
	test AddListRecordWithDecimalField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Decimal",
			fieldFieldLabel = "Decimal",
			fieldName = "Decimal");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Decimal");

		DynamicDataMapping.viewField(
			field = "Decimal",
			fieldFieldLabel = "Decimal",
			fieldName = "Decimal");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldDecimal(
			ddlRecordFieldData = "11.18",
			fieldFieldLabel = "Decimal",
			fieldName = "Decimal");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		Click(locator1 = "DDL#RECORD_TABLE_ELLIPSIS_1");

		MenuItem.click(menuItem = "View");

		AssertTextEquals(
			key_fieldLabel = "Decimal",
			key_fieldName = "Decimal",
			locator1 = "FormFields#TEXT_FIELD",
			value1 = "11.18");
	}

	@priority = "4"
	test AddListRecordWithDocumentsAndMediaField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Documents and Media");

		DynamicDataMapping.viewField(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.txt",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Document_1.txt",
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media");
	}

	@priority = "4"
	test AddListRecordWithGeolocationField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Geolocation",
			fieldFieldLabel = "Geolocation",
			fieldName = "Geolocation");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Geolocation");

		DynamicDataMapping.viewField(
			field = "Geolocation",
			fieldFieldLabel = "Geolocation",
			fieldName = "Geolocation");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldGeolocation(fieldName = "Geolocation");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewGeolocationRecord(fieldFieldLabel = "Geolocation");
	}

	@ignore = "true"
	@priority = "5"
	test AddListRecordWithHTMLField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "HTML",
			fieldFieldLabel = "HTML",
			fieldName = "HTML");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "HTML");

		DynamicDataMapping.viewField(
			field = "HTML",
			fieldFieldLabel = "HTML",
			fieldName = "HTML");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		FormFields.editParagraphBody(content = "Record HTML");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Record HTML",
			field = "HTML",
			fieldFieldLabel = "HTML");
	}

	@priority = "4"
	test AddListRecordWithIntegerField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer");

		DynamicDataMapping.editFieldPredefinedValue(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer",
			fieldPredefinedValue = "7");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Integer");

		DynamicDataMapping.viewField(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		Click(locator1 = "Button#PLUS");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		Click(locator1 = "DDL#RECORD_TABLE_ELLIPSIS_1");

		MenuItem.click(menuItem = "View");

		DDLRecord.viewFieldPredefinedValue(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer",
			fieldPredefinedValue = "7");
	}

	@description = "This is a use case for LPS-65726"
	@ignore = "true"
	@priority = "5"
	test AddListRecordWithLinkToPageField {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPage(pageName = "Test Page");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Link to Page");

		DynamicDataMapping.viewField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldLinkToPage(
			ddlRecordFieldData = "Test Page",
			fieldName = "LinkToPage",
			pagePrivacy = "Public");

		DDLRecord.viewSelectedLinkToPage(
			ddlRecordFieldData = "Test Page",
			fieldName = "LinkToPage");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Test Page",
			field = "Link to Page",
			fieldFieldLabel = "Link to Page");

		DDLRecord.viewLinkToPageLink(ddlRecordFieldData = "Test Page");
	}

	@priority = "4"
	test AddListRecordWithNumberField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Number",
			fieldFieldLabel = "Number",
			fieldName = "Number");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Number");

		DynamicDataMapping.viewField(
			field = "Number",
			fieldFieldLabel = "Number",
			fieldName = "Number");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldNumber(
			ddlRecordFieldData = "46",
			fieldFieldLabel = "Number",
			fieldName = "Number");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "46",
			field = "Number",
			fieldFieldLabel = "Number");
	}

	@priority = "4"
	test AddListRecordWithRadioField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Radio",
			fieldFieldLabel = "Radio",
			fieldName = "Radio");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Radio");

		DynamicDataMapping.viewField(
			field = "Radio",
			fieldFieldLabel = "Radio",
			fieldName = "Radio");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldRadio(
			ddlRecordFieldData = "option 2",
			fieldFieldLabel = "Radio",
			fieldName = "Radio");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "option 2",
			field = "Radio",
			fieldFieldLabel = "Radio");
	}

	@description = "This is a use case for LPS-65248"
	@priority = "4"
	test AddListRecordWithRequiredBooleanField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP();

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DynamicDataMapping.editFieldRequired(fieldFieldLabel = "Boolean");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(fieldFieldLabel = "Boolean");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP();

		DDLDataDefinition.selectCP();

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP();

		FormFields.viewRequiredAsterisk();

		Button.clickPublish();

		Alert.viewRequiredField();

		FormFields.viewRequiredAsterisk();

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "True",
			fieldFieldLabel = "Boolean Required",
			fieldName = "Boolean");

		DoubleClick(
			key_text = "Publish",
			locator1 = "Button#ANY");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "True",
			field = "Boolean",
			fieldFieldLabel = "Boolean");
	}

	@priority = "4"
	test AddListRecordWithSelectField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Select");

		DynamicDataMapping.viewField(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "option 2",
			fieldFieldLabel = "Select",
			fieldName = "Select");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "option 2",
			field = "Select",
			fieldFieldLabel = "Select");
	}

	@priority = "4"
	test AddListRecordWithTextBoxField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Text Box");

		DynamicDataMapping.viewField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Text Box Data",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Text Box Data",
			field = "Text Box",
			fieldFieldLabel = "Text Box");
	}

	@priority = "4"
	test AddListRecordWithTextField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Text");

		DynamicDataMapping.viewField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Data",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Text Data",
			field = "Text",
			fieldFieldLabel = "Text");
	}

	@priority = "3"
	test CopyDataDefinition {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DynamicDataMapping.addFieldFormTemplateSpecific(field = "Separator");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.copyCP(
			ddlDataDefinitionCopyName = "Data Definition Copy",
			ddlDataDefinitionName = "Data Definition");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(ddlDataDefinitionName = "Data Definition Copy");

		DynamicDataMapping.viewField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoManageTemplates(ddlDataDefinitionName = "Data Definition Copy");

		Portlet.viewEmptyMessage(message = "There are no templates.");
	}

	@ignore = "true"
	@priority = "3"
	test CopyDataDefinitionWithCopyDisplayTemplates {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DynamicDataMapping.addFieldFormTemplateSpecific(field = "Separator");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.copyCP(
			copyDisplayTemplates = "true",
			ddlDataDefinitionCopyName = "Data Definition Copy",
			ddlDataDefinitionName = "Data Definition");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(ddlDataDefinitionName = "Data Definition Copy");

		DynamicDataMapping.viewField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition Copy",
			ddlTemplateName = "Data Definition Display Template Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewNoTemplateCP(
			ddlDataDefinitionName = "Data Definition Copy",
			ddlTemplateName = "Data Definition Form Template Name");
	}

	@ignore = "true"
	@priority = "3"
	test CopyDataDefinitionWithCopyFormTemplates {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DynamicDataMapping.addFieldFormTemplateSpecific(field = "Separator");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.copyCP(
			copyFormTemplates = "true",
			ddlDataDefinitionCopyName = "Data Definition Copy",
			ddlDataDefinitionName = "Data Definition");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(ddlDataDefinitionName = "Data Definition Copy");

		DynamicDataMapping.viewField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewFormTemplateCP(
			ddlDataDefinitionName = "Data Definition Copy",
			ddlTemplateName = "Data Definition Form Template Name");

		DynamicDataMapping.viewField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DynamicDataMapping.viewFieldFormTemplateSpecific(
			field = "Separator",
			fieldFieldLabel = "Separator",
			fieldName = "Separator");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewNoTemplateCP(
			ddlDataDefinitionName = "Data Definition Copy",
			ddlTemplateName = "Data Definition Display Template Name");
	}

	@ignore = "true"
	@priority = "4"
	test CopyDataDefinitionWithCopyFormTemplatesAndCopyDisplayTemplates {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DynamicDataMapping.addFieldFormTemplateSpecific(field = "Separator");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.copyCP(
			copyDisplayTemplates = "true",
			copyFormTemplates = "true",
			ddlDataDefinitionCopyName = "Data Definition Copy",
			ddlDataDefinitionName = "Data Definition");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(ddlDataDefinitionName = "Data Definition Copy");

		DynamicDataMapping.viewField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition Copy",
			ddlTemplateName = "Data Definition Display Template Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewFormTemplateCP(
			ddlDataDefinitionName = "Data Definition Copy",
			ddlTemplateName = "Data Definition Form Template Name");

		DynamicDataMapping.viewField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DynamicDataMapping.viewFieldFormTemplateSpecific(
			field = "Separator",
			fieldFieldLabel = "Separator",
			fieldName = "Separator");
	}

	@priority = "4"
	test DeleteDataDefinition {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.deleteCP(ddlDataDefinitionName = "Data Definition");
	}

	@priority = "4"
	test DeleteDisplayTemplateFreeMarker {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition FreeMarker Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.deleteTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlTemplateName = "Data Definition FreeMarker Display Template Name");
	}

	@priority = "4"
	test DeleteDisplayTemplateVelocity {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "Velocity (.vm)",
			ddlDisplayTemplateName = "Data Definition Velocity Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.deleteTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlTemplateName = "Data Definition Velocity Display Template Name");
	}

	@priority = "4"
	test DeleteFormTemplate {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.deleteTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlTemplateName = "Data Definition Form Template Name");
	}

	@priority = "5"
	test DeleteList {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.deleteCP(ddlListName = "List Name");
	}

	@priority = "5"
	test DeleteListRecord {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Field",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.deleteCP(
			ddlListName = "List Name",
			ddlRecordFieldData = "Text Field");
	}

	@priority = "5"
	test EditBooleanFieldFieldLabel {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean");

		DynamicDataMapping.editField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldFieldLabelEdit = "Boolean Edit",
			fieldNameEdit = "BooleanEdit");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean Edit");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean Edit",
			fieldName = "BooleanEdit");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "True",
			fieldFieldLabel = "Boolean Edit",
			fieldName = "BooleanEdit");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "True",
			field = "Boolean",
			fieldFieldLabel = "Boolean Edit");
	}

	@priority = "4"
	test EditBooleanFieldName {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean");

		DynamicDataMapping.editField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldNameEdit = "BooleanEdit");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "BooleanEdit");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "True",
			fieldFieldLabel = "Boolean",
			fieldName = "BooleanEdit");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "True",
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "BooleanEdit");
	}

	@priority = "4"
	test EditBooleanFieldShowLabel {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DynamicDataMapping.editFieldShowLabel(
			fieldFieldLabel = "Boolean",
			fieldShowLabel = "No");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			fieldShowLabel = "No");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "True",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			fieldShowLabel = "No");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "True",
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			fieldShowLabel = "No");
	}

	@priority = "4"
	test EditBooleanFieldTip {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DynamicDataMapping.editFieldTip(
			fieldFieldLabel = "Boolean",
			fieldTip = "Boolean Field Tip");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			fieldTip = "Boolean Field Tip");
	}

	@priority = "5"
	test EditDataDefinition {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.editCP(
			ddlDataDefinitionDescriptionEdit = "Data Definition Description Edit",
			ddlDataDefinitionName = "Data Definition",
			ddlDataDefinitionNameEdit = "Data Definition Edit");

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionDescription = "Data Definition Description Edit",
			ddlDataDefinitionName = "Data Definition Edit");

		DynamicDataMapping.viewField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");
	}

	@priority = "4"
	test EditDisplayTemplateFreeMarker {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition FreeMarker Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.editDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition FreeMarker Display Template Name",
			ddlDisplayTemplateNameEdit = "Data Definition FreeMarker Display Template Name Edit",
			ddlDisplayTemplateTextFieldScriptEdit = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlTemplateName = "Data Definition FreeMarker Display Template Name Edit");
	}

	@priority = "4"
	test EditDisplayTemplateVelocity {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "Velocity (.vm)",
			ddlDisplayTemplateName = "Data Definition Velocity Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.editDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "Velocity (.vm)",
			ddlDisplayTemplateName = "Data Definition Velocity Display Template Name",
			ddlDisplayTemplateNameEdit = "Data Definition Velocity Display Template Name Edit",
			ddlDisplayTemplateTextFieldScriptEdit = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewDisplayTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlTemplateName = "Data Definition Velocity Display Template Name Edit");
	}

	@priority = "4"
	test EditFormTemplate {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.editFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name",
			ddlFormTemplateNameEdit = "Data Definition Form Template Name Edit");

		DynamicDataMapping.addFieldFormTemplateSpecific(
			field = "Fieldset",
			fieldFieldLabel = "Fieldset",
			fieldName = "Fieldset");

		DynamicDataMapping.addFieldFormTemplateSpecific(
			field = "Paragraph",
			fieldFieldLabel = "Paragraph",
			fieldName = "Paragraph");

		DynamicDataMapping.addFieldFormTemplateSpecific(
			field = "Separator",
			fieldFieldLabel = "Separator",
			fieldName = "Separator");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlTemplateName = "Data Definition Form Template Name Edit");

		DynamicDataMapping.viewField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DynamicDataMapping.viewFieldFormTemplateSpecific(
			field = "Fieldset",
			fieldFieldLabel = "Fieldset",
			fieldName = "Fieldset");

		DynamicDataMapping.viewFieldFormTemplateSpecific(
			field = "Paragraph",
			fieldFieldLabel = "Paragraph",
			fieldName = "Paragraph");

		DynamicDataMapping.viewFieldFormTemplateSpecific(
			field = "Separator",
			fieldFieldLabel = "Separator",
			fieldName = "Separator");
	}

	@priority = "4"
	test EditList {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.editCP(
			ddlListDescriptionEdit = "List Description Edit",
			ddlListName = "List Name",
			ddlListNameEdit = "List Name Edit");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.viewCP(
			ddlListDescription = "List Description Edit",
			ddlListName = "List Name Edit");
	}

	@priority = "5"
	test EditListRecord {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.editCP(
			ddlListName = "List Name",
			ddlRecordFieldData = "Record Text");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text Edited",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Record Text Edited",
			field = "Text",
			fieldFieldLabel = "Text");
	}

	@priority = "4"
	test EditListRecordViaRecordView {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.editViaRecordViewCP(ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text Edited",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Record Text Edited",
			field = "Text",
			fieldFieldLabel = "Text");
	}

	@priority = "4"
	test EditRadioFieldOptions {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Radio",
			fieldFieldLabel = "Radio",
			fieldName = "Radio");

		DynamicDataMapping.editFieldOptions(
			field = "Radio",
			fieldFieldLabel = "Radio",
			fieldName = "Radio",
			fieldOptionsNames = "Radio Name 1,Radio Name 2,Radio Name 3",
			fieldOptionsValues = "Radio Value 1,Radio Value 2,Radio Value 3");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Radio");

		DynamicDataMapping.viewField(
			field = "Radio",
			fieldFieldLabel = "Radio",
			fieldName = "Radio",
			fieldOptionsNames = "Radio Name 1,Radio Name 2,Radio Name 3",
			fieldOptionsValues = "Radio Value 1,Radio Value 2,Radio Value 3");
	}

	@priority = "3"
	test EditRadioFieldOptionsWithUTF8Characters {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Radio",
			fieldFieldLabel = "Radio",
			fieldName = "Radio");

		DynamicDataMapping.editFieldOptions(
			field = "Radio",
			fieldFieldLabel = "Radio",
			fieldName = "Radio",
			fieldOptionsNames = "りん�?�,�?ナナ,クランベリー",
			fieldOptionsValues = "Radio Value 1,Radio Value 2,Radio Value 3");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Radio");

		DynamicDataMapping.viewField(
			field = "Radio",
			fieldFieldLabel = "Radio",
			fieldName = "Radio",
			fieldOptionsNames = "りん�?�,�?ナナ,クランベリー",
			fieldOptionsValues = "Radio Value 1,Radio Value 2,Radio Value 3");
	}

	@priority = "5"
	test EditSelectFieldOptions {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select");

		DynamicDataMapping.editFieldOptions(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select",
			fieldOptionsNames = "Select Name 1,Select Name 2,Select Name 3",
			fieldOptionsValues = "Select Value 1,Select Value 2,Select Value 3");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Select");

		DynamicDataMapping.viewField(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select",
			fieldOptionsNames = "Select Name 1,Select Name 2,Select Name 3",
			fieldOptionsValues = "Select Value 1,Select Value 2,Select Value 3");
	}

	@priority = "3"
	test EditSelectFieldOptionsWithUTF8Characters {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select");

		DynamicDataMapping.editFieldOptions(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select",
			fieldOptionsNames = "りん�?�,�?ナナ,クランベリー",
			fieldOptionsValues = "Select Value 1,Select Value 2,Select Value 3");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Select");

		DynamicDataMapping.viewField(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select",
			fieldOptionsNames = "りん�?�,�?ナナ,クランベリー",
			fieldOptionsValues = "Select Value 1,Select Value 2,Select Value 3");
	}

	@priority = "5"
	test ImportLAR {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPDynamicdatalists#ImportLAR";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "True",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		LAR.exportDDL(larFileName = "Dynamic_Data_Lists.portlet.lar");

		DDLList.tearDownCP();

		DDLDataDefinition.tearDownCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		LAR.importPortlet(larFileName = "Dynamic_Data_Lists.portlet.lar");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.viewCP(ddlListName = "List Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "True",
			field = "Boolean",
			fieldFieldLabel = "Boolean");
	}

	@priority = "3"
	test ViewBooleanFieldPredefinedValue {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		DynamicDataMapping.editFieldPredefinedValue(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			fieldPredefinedValue = "Yes");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Boolean");

		DynamicDataMapping.viewField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			fieldPredefinedValue = "Yes");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.viewFieldPredefinedValue(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			fieldPredefinedValue = "True");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "True",
			field = "Boolean",
			fieldFieldLabel = "Boolean");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "False",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "False",
			field = "Boolean",
			fieldFieldLabel = "Boolean");
	}

	@priority = "3"
	test ViewCannotAddNonAlphanumericCharactersToFieldName {
		var character1 = '''`''';

		var character2 = '''~''';

		var character3 = '''!''';

		var character4 = '''@''';

		var character5 = '''#''';

		var character6 = '''$''';

		var character7 = '''%''';

		var character8 = '''^''';

		var character9 = '''&''';

		var character10 = '''*''';

		var character11 = '''(''';

		var character12 = ''')''';

		var character13 = '''-''';

		var character14 = '''+''';

		var character15 = '''=''';

		var character16 = '''[''';

		var character17 = '''{''';

		var character18 = '''}''';

		var character19 = '''?''';

		var character20 = '''|''';

		var character21 = ''';''';

		var character22 = ''':''';
		var character23 = "'";

		var character24 = '''"''';

		var character25 = '''>''';

		var character26 = '''<''';

		var character27 = '''.''';

		var character28 = '''/''';
		var character29 = "test space";

		var characterValid = '''_''';

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		for (var fieldName : list "${character1},${character2},${character3},${character4},${character5},${character6},${character7},${character8},${character9},${character10},${character11},${character12},${character13},${character14},${character15},${character16},${character17}.${character18},${character19},${character20},${character21},${character22},${character23},${character24},${character25},${character26},${character27},${character28},${character29}") {
			DynamicDataMapping.editFieldNameInvalidCharacter(
				field = "Text",
				fieldFieldLabel = "Text",
				fieldName = "${fieldName}");
		}

		DynamicDataMapping.editFieldNameInvalidCharacter(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = ''',''');

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text2",
			fieldName = "Text${characterValid}Text");
	}

	@priority = "3"
	test ViewFormTemplateFieldReadOnlyWithEditMode {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DynamicDataMapping.viewField(
			ddlFormTemplateMode = "Create",
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text",
			fieldReadOnly = "No");

		DDLTemplate.editFormTemplateModeCP(ddlFormTemplateMode = "Edit");

		DynamicDataMapping.viewField(
			ddlFormTemplateMode = "Edit",
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text",
			fieldReadOnly = "No");

		DDLTemplate.editFormTemplateModeCP(ddlFormTemplateMode = "Create");

		DynamicDataMapping.viewField(
			ddlFormTemplateMode = "Create",
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text",
			fieldReadOnly = "No");
	}

	@priority = "3"
	test ViewFormTemplateFields {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DynamicDataMapping.viewCanAddField(field = "Fieldset");

		DynamicDataMapping.viewCanAddField(field = "Paragraph");

		DynamicDataMapping.viewCanAddField(field = "Separator");

		DynamicDataMapping.viewCannotAddField(field = "Text");
	}

	@priority = "3"
	test ViewFormTemplateFieldsAfterSaveAndContinue {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DDLTemplate.saveAndContinueFormTemplateCP();

		DynamicDataMapping.viewCanAddField(field = "Fieldset");

		DynamicDataMapping.viewCanAddField(field = "Paragraph");

		DynamicDataMapping.viewCanAddField(field = "Separator");

		DynamicDataMapping.viewCannotAddField(field = "Text");
	}

	@priority = "3"
	test ViewListRecordAndAssertAnchorLink {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Text");

		DynamicDataMapping.viewField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Data",
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewViaAnchorLink(
			ddlRecordFieldData = "Text Data",
			fieldFieldLabel = "Text");
	}

	@ignore = "true"
	@priority = "3"
	test ViewNoDuplicatesInOriginalAfterCopy {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.addDisplayTemplateCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition",
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Data Definition Display Template Name",
			ddlDisplayTemplateTextFieldScript = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.copyCP(
			copyDisplayTemplates = "true",
			copyFormTemplates = "true",
			ddlDataDefinitionCopyName = "Data Definition Copy",
			ddlDataDefinitionName = "Data Definition");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewNoDuplicateTemplateCP(
			ddlDataDefinitionName = "Data Definition Copy",
			ddlTemplateName = "Data Definition Display Template Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLTemplate.viewNoDuplicateTemplateCP(
			ddlDataDefinitionName = "Data Definition Copy",
			ddlTemplateName = "Data Definition Form Template Name");
	}

	@description = "This is a use case for LPS-66384."
	@priority = "3"
	test ViewRecordInfoSidebar {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP();

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "To Do");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(ddlDataDefinitionName = "To Do");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Test Test",
			fieldFieldLabel = "Assigned To",
			fieldName = "assignedTo");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords();

		DDLNavigator.gotoEdit();

		DDLRecord.expandInfo();
	}

}