@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8493 | Test Summary: Segment Composition shows Active and Known individuals"
	@ignore = "true"
	@priority = "3"
	test SegmentCompositionShowsActiveAndKnownIndividuals {

		// AC Refactor: Test blocked by LRAC-9056
		// AC Refactor Ticket: LRAC-9337

		task ("Create a new user") {
			JSONUser.addUser(
				userEmailAddress = "testac@liferay.com",
				userFirstName = "Test",
				userLastName = "Test",
				userScreenName = "testac");
		}

		task ("Create a Site and Page and Sync DXP to AC") {
			ACUtils.addSiteAndPage();

			ACUtils.createBlogsAndAddToPage();

			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Interact to the page and blog") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "testac@liferay.com",
				userLoginFullName = "Test Test");

			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Launch AC and navigate to Segments") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");

			ACNavigation.goToSegments();
		}

		task ("Create a segment and assert active and known individuals") {
			ACSegments.createStaticSegment();

			ACUtils.setItemName(itemName = "Test Segment");

			ACSegments.addStaticMember(tableMember = "Test Test");

			ACSegments.saveSegment();

			ACNavigation.goToSegments();

			ACUtils.searchBar(searchItem = "Test Segment");

			ACSegments.accessSegment(segmentName = "Test Segment");

			// Active individuals informations does not show up properly on graphic.

			ACSegments.viewSegmentComposition(
				individualsNumber = "1",
				individualsPercent = "100%",
				individualsType = "Active");

			ACSegments.viewSegmentComposition(
				individualsNumber = "1",
				individualsPercent = "100%",
				individualsType = "Known");
		}
	}

}