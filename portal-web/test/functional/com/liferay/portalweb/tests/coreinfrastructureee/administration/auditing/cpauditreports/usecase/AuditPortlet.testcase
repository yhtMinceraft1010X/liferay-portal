@component-name = "portal-core-infrastructure-portal-services-ee"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Auditing";
	property testray.testcase.product.edition = "EE";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONUser.tearDownNonAdminUsers();

			Role.tearDownCP();
		}
	}

	@description = "This test Audit can capture events when assign, unassign user to user group or role, and event details contain the correct info."
	@priority = "3"
	test CanCaptureEventsAboutAssignAndUnassignUserToUserGroupAndRole {
		property test.name.skip.portal.instance = "AuditPortlet#CanCaptureEventsAboutAssignAndUnassignUserToUserGroupAndRole";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addCP(userGroupName = "User Group1");

		UserGroup.assignMemberCP(
			userGroupName = "User Group1",
			userScreenName = "test");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "User Group1",
			clientIp = "127.0.0.1",
			key_resourceAction = "ASSIGN",
			key_resourceName = "User",
			resourceAction = "ASSIGN",
			resourceName = "User",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.removeMemberCP(
			userGroupName = "User Group1",
			userScreenName = "test");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "User Group1",
			clientIp = "127.0.0.1",
			key_resourceAction = "UNASSIGN",
			key_resourceName = "User",
			resourceAction = "UNASSIGN",
			resourceName = "User",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.add(roleTitle = "Role1 Name");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.addAssignee(
			assigneeName = "Test Test",
			assigneeType = "Users",
			roleTitle = "Role1 Name");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "Role1 Name",
			clientIp = "127.0.0.1",
			key_resourceAction = "ASSIGN",
			key_resourceName = "User",
			resourceAction = "ASSIGN",
			resourceName = "User",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.removeAssignee(
			assigneeName = "Test Test",
			assigneeType = "Users",
			roleTitle = "Role1 Name");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "Role1 Name",
			clientIp = "127.0.0.1",
			key_resourceAction = "UNASSIGN",
			key_resourceName = "User",
			resourceAction = "UNASSIGN",
			resourceName = "User",
			userName = "Test Test");
	}

	@description = "This test Audit can capture events when add, update, delete, impersonate user, and event details contain the correct info."
	@priority = "5"
	test CanCaptureEventsAboutUserActions {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "AuditPortlet#CanCaptureEventsAboutUserActions";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "test1@liferay.com",
			userFirstName = "test1",
			userLastName = "test1",
			userScreenName = "test1");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "test1@liferay.com",
			clientIp = "127.0.0.1",
			key_resourceAction = "ADD",
			key_resourceName = "User",
			resourceAction = "ADD",
			resourceName = "User",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		UserNavigator.gotoUser(userScreenName = "test1");

		User.editUserInformation(userMiddleNameEdit = "test1");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "middleName",
			clientIp = "127.0.0.1",
			key_resourceAction = "UPDATE",
			key_resourceName = "User",
			resourceAction = "UPDATE",
			resourceName = "User",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.impersonateCP(
			siteName = "${siteName}",
			userScreenName = "test1");

		Close.closeWindow(locator1 = "title=Home - ${siteName}");

		Navigator.selectSpecificWindow(windowTitle = "Users and Organizations - Liferay DXP");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "test1 test1 test1",
			clientIp = "127.0.0.1",
			key_resourceAction = "IMPERSONATE",
			key_resourceName = "User",
			resourceAction = "IMPERSONATE",
			resourceName = "User",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.deactivateCP(
			deactivateType = "Actions",
			userFirstName = "test1");

		User.deleteCP(
			deactivateType = "Actions",
			userFirstName = "test1");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "test1@liferay.com",
			clientIp = "127.0.0.1",
			key_resourceAction = "DELETE",
			key_resourceName = "User",
			resourceAction = "DELETE",
			resourceName = "User",
			userName = "Test Test");
	}

	@description = "This test Audit can capture events when assign, unassign user to user group or role, and event details contain the correct info."
	@priority = "3"
	test CanCaptureEventsAboutUserGroupAndRole {
		property test.name.skip.portal.instance = "AuditPortlet#CanCaptureEventsAboutUserGroupAndRole";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addCP(userGroupName = "User Group1");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "",
			clientIp = "127.0.0.1",
			key_resourceAction = "ADD",
			key_resourceName = "UserGroup",
			resourceAction = "ADD",
			resourceName = "UserGroup",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.editCP(
			userGroupDescriptionEdit = "This is only for test",
			userGroupName = "User Group1");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "This is only for test",
			clientIp = "127.0.0.1",
			key_resourceAction = "UPDATE",
			key_resourceName = "UserGroup",
			resourceAction = "UPDATE",
			resourceName = "UserGroup",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.deleteCP(userGroupName = "User Group1");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "",
			clientIp = "127.0.0.1",
			key_resourceAction = "DELETE",
			key_resourceName = "UserGroup",
			resourceAction = "DELETE",
			resourceName = "UserGroup",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.add(roleTitle = "Role1 Name");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "",
			clientIp = "127.0.0.1",
			key_resourceAction = "ADD",
			key_resourceName = "Role",
			resourceAction = "ADD",
			resourceName = "Role",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Search.searchCP(searchTerm = "Role1 Name");

		LexiconEntry.gotoEntry(rowEntry = "Role1 Name");

		Type(
			locator1 = "TextInput#KEY",
			value1 = "Role2 Name");

		AssertClick(
			locator1 = "Button#SUBMIT",
			value1 = "Save");

		Alert.viewSuccessMessage();

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "Role2 Name",
			clientIp = "127.0.0.1",
			key_resourceAction = "UPDATE",
			key_resourceName = "Role",
			resourceAction = "UPDATE",
			resourceName = "Role",
			userName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.deleteCP(roleTitle = "Role1 Name");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "",
			clientIp = "127.0.0.1",
			key_resourceAction = "DELETE",
			key_resourceName = "Role",
			resourceAction = "DELETE",
			resourceName = "Role",
			userName = "Test Test");
	}

	@description = "This test Audit can capture events when user login, logout, login fail, view pages, and event details contain the correct info."
	@priority = "4"
	test CanCaptureEventsAboutUserLoginLogoutLoginFailAndViewPages {
		property custom.properties = "audit.message.com.liferay.portal.kernel.model.Layout.VIEW=true";
		property test.name.skip.portal.instance = "AuditPortlet#CanCaptureEventsAboutUserLoginLogoutLoginFailAndViewPages";

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "None",
			clientIp = "127.0.0.1",
			key_resourceAction = "LOGIN",
			key_resourceName = "User",
			resourceAction = "LOGIN",
			resourceName = "User",
			userName = "Test Test");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "None",
			clientIp = "127.0.0.1",
			key_resourceAction = "VIEW",
			key_resourceName = "Layout",
			resourceAction = "VIEW",
			resourceName = "Layout",
			userName = "Test Test");

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "None",
			clientIp = "127.0.0.1",
			key_resourceAction = "LOGOUT",
			key_resourceName = "User",
			resourceAction = "LOGOUT",
			resourceName = "User",
			userName = "Test Test");

		User.logoutPG();

		User.firstLoginUI(
			password = "test2",
			userEmailAddress = "test@liferay.com");

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.viewAuditDetails(
			additionalInformation = "Failed to authenticate by email address",
			clientIp = "127.0.0.1",
			key_resourceAction = "LOGIN_FAILURE",
			key_resourceName = "User",
			resourceAction = "LOGIN_FAILURE",
			resourceName = "User",
			userName = "Test Test");
	}

	@description = "This test Audit events can be searched with the Audit app's advanced search by various search criteria."
	@priority = "4"
	test CanSearchEventsInAuditAdvancedSearch {
		property test.name.skip.portal.instance = "AuditPortlet#CanSearchEventsInAuditAdvancedSearch";

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		AssertTextEquals(
			key_resourceAction = "LOGIN",
			key_resourceName = "User",
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "LOGIN");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.searchCP(
			match = "All",
			resourceAction = "LOGIN",
			searchTerm = "LOGIN",
			userName = "Test Test");

		AssertTextEquals(
			key_resourceAction = "LOGIN",
			key_resourceName = "User",
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "LOGIN");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.searchCP(
			match = "Any",
			resourceAction = "LOGIN",
			resourceName = "com.liferay.portal.kernel.model.User",
			searchTerm = "com.liferay.portal.kernel.model.User");

		AssertTextEquals(
			key_resourceAction = "LOGIN",
			key_resourceName = "User",
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "LOGIN");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Audit");

		Audit.searchCP(
			match = "All",
			resourceAction = "LOGIN",
			resourceName = "com.liferay.portal.kernel.model.User",
			searchTerm = "Test Test",
			userName = "Test Test");

		AssertTextEquals(
			key_resourceAction = "LOGIN",
			key_resourceName = "User",
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "LOGIN");
	}

}