@component-name = "portal-document-management-ee"
definition {

	property osgi.app.includes = "sharepoint-rest";
	property portal.release = "false";
	property portal.ssl.enabled = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Sharepoint";

	var authorizationGrantEndpoint = PropsUtil.get("sharepoint.oauth.authorization.grant.endpoint");
	var authorizationTokenEndpoint = PropsUtil.get("sharepoint.oauth.authorization.token.endpoint");
	var clientId = PropsUtil.get("sharepoint.oauth.client.id");
	var clientSecret = PropsUtil.get("sharepoint.oauth.client.secret");
	var configurationName = PropsUtil.get("sharepoint.oauth.configuration.name");
	var configurationResource = PropsUtil.get("sharepoint.oauth.configuration.resource");
	var configurationScope = PropsUtil.get("sharepoint.oauth.configuration.scope");
	var siteDomain = PropsUtil.get("sharepoint.oauth.site.domain");
	var tenantId = PropsUtil.get("sharepoint.oauth.tenant.id");
	var userName = PropsUtil.get("sharepoint.oauth.user.name");
	var userPassword = PropsUtil.get("sharepoint.oauth.user.password");

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Documents and Media",
			configurationName = "Sharepoint OAuth2",
			configurationScope = "System Scope");

		Button.clickAdd();

		Type(
			key_text = "name",
			locator1 = "TextArea#ANY",
			value1 = "${configurationName}");

		Type(
			key_text = "authorizationGrantEndpoint",
			locator1 = "TextArea#ANY",
			value1 = "${authorizationGrantEndpoint}");

		Type(
			key_text = "authorizationTokenEndpoint",
			locator1 = "TextArea#ANY",
			value1 = "${authorizationTokenEndpoint}");

		Type(
			key_text = "clientId",
			locator1 = "TextArea#ANY",
			value1 = "${clientId}");

		Type(
			key_text = "clientSecret",
			locator1 = "TextArea#ANY",
			value1 = "${clientSecret}");

		Type(
			key_text = "scope",
			locator1 = "TextArea#ANY",
			value1 = "${configurationScope}");

		Type(
			key_text = "tenantId",
			locator1 = "TextArea#ANY",
			value1 = "${tenantId}");

		Type(
			key_text = "siteDomain",
			locator1 = "TextArea#ANY",
			value1 = "${siteDomain}");

		Type(
			key_text = "resource",
			locator1 = "TextArea#ANY",
			value1 = "${configurationResource}");

		PortletEntry.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Documents and Media");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoAddRepositoryCP();

		Type(
			key_fieldLabel = "Name",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "Collaboration Test Application");

		DMRepository.addSharepoint(
			dmRepositoryLibraryPath = "Documentos compartidos",
			dmRepositoryName = "Sharepoint (${configurationName})",
			dmRepositorySiteAbsoluteURL = "https://liferaycolab.sharepoint.com",
			permissionDefinitionKey = "ACCESS",
			roleTitle = "Guest");

		PortletEntry.save();

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		AssertClick(
			key_dmRepositoryName = "Collaboration Test Application",
			locator1 = "DocumentsAndMedia#REPOSITORY_FOLDER_NAME_DESCRIPTIVE_VIEW",
			value1 = "Collaboration Test Application");

		MicrosoftLogin.accountSignIn(
			userEmail = "${userName}",
			userPassword = "${userPassword}");

		MicrosoftLogin.confirmSharepointApp(dmRepositoryName = "Collaboration Test Application");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "This is a test for LPS-136821. It checks that a repository can be published."
	@priority = "3"
	test CanPublishRepository {
		property test.name.skip.portal.instance = "SharepointREST#CanPublishRepository";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Documents and Media Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Documents and Media Page",
			widgetName = "Documents and Media");

		JSONStaging.enableLocalStaging(groupName = "Guest");

		Navigator.gotoStagedSitePage(
			defaultSite = "true",
			pageName = "Documents and Media Page");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoRepository(dmRepositoryName = "Collaboration Test Application");
	}

	@description = "This is a test for LPS-122682. It checks that a repository can be remote published in depot."
	@priority = "4"
	test CanRemotePublishRepositoryInDepot {
		property app.server.bundles.size = "1";
		property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
		property databases.size = "1";
		property minimum.slave.ram = "24";
		property test.name.skip.portal.instance = "SharepointREST#CanRemotePublishRepositoryInDepot";

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		SystemSettings.openSystemSettingsAdmin(baseURL = "http://localhost:9080");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Documents and Media",
			configurationName = "Sharepoint OAuth2",
			configurationScope = "System Scope");

		Button.clickAdd();

		Type(
			key_text = "name",
			locator1 = "TextArea#ANY",
			value1 = "${configurationName}");

		Type(
			key_text = "authorizationGrantEndpoint",
			locator1 = "TextArea#ANY",
			value1 = "${authorizationGrantEndpoint}");

		Type(
			key_text = "authorizationTokenEndpoint",
			locator1 = "TextArea#ANY",
			value1 = "${authorizationTokenEndpoint}");

		Type(
			key_text = "clientId",
			locator1 = "TextArea#ANY",
			value1 = "${clientId}");

		Type(
			key_text = "clientSecret",
			locator1 = "TextArea#ANY",
			value1 = "${clientSecret}");

		Type(
			key_text = "scope",
			locator1 = "TextArea#ANY",
			value1 = "${configurationScope}");

		Type(
			key_text = "tenantId",
			locator1 = "TextArea#ANY",
			value1 = "${tenantId}");

		Type(
			key_text = "siteDomain",
			locator1 = "TextArea#ANY",
			value1 = "${siteDomain}");

		Type(
			key_text = "resource",
			locator1 = "TextArea#ANY",
			value1 = "${configurationResource}");

		PortletEntry.save();

		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		Depot.remoteStagingSetUpViaJson(
			groupName = "Test Depot Name",
			remotePort = "9080",
			site = "false");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoAddRepositoryCP();

		Type(
			key_fieldLabel = "Name",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "Collaboration Test Application");

		DMRepository.addSharepoint(
			dmRepositoryLibraryPath = "Documentos compartidos",
			dmRepositoryName = "Sharepoint (${configurationName})",
			dmRepositorySiteAbsoluteURL = "https://liferaycolab.sharepoint.com");

		PortletEntry.save();

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		DepotNavigator.openDepotAdmin(baseURL = "http://localhost:9080");

		DepotNavigator.gotoDepot(depotName = "Remote Depot");

		DepotNavigator.gotoPortlet(portlet = "Documents and Media");

		DMFolder.viewEntryPresent(dmFolderName = "Collaboration Test Application");
	}

	@priority = "4"
	@refactorneeded
	test CheckinDocument {
		property test.name.skip.portal.instance = "SharepointREST#CheckinDocument";

		DMRepository.cleanRepository(dmDocumentTitle = "Document_3.txt");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.txt",
			dmDocumentTitle = "Document_3.txt");

		Pause(locator1 = "5000");

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_3.txt",
			dmRepositoryName = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_3.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.txt");

		Pause(locator1 = "5000");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		DMDocument.checkinCP(dmRepositoryName = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		var key_dmDocumentTitle = "Document_3.txt";

		AssertElementNotPresent(locator1 = "DocumentsAndMedia#ICON_DOCUMENT_ICON_LOCKED");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.txt");

		DMDocument.viewCheckedinCP(
			dmDocumentVersionNumber = "2.0",
			dmRepositoryName = "true");
	}

	@priority = "4"
	@refactorneeded
	test DeleteDocumentInSubfolder {
		property test.name.skip.portal.instance = "SharepointREST#DeleteDocumentInSubfolder";

		DMRepository.cleanRepository(dmFolderName = "DM Folder3 Name");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		DMFolder.addCP(dmFolderName = "DM Folder3 Name");

		DMFolder.viewCP(dmFolderName = "DM Folder3 Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_2.doc",
			dmDocumentTitle = "Document_2.doc");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_2.doc");

		DMDocument.viewCP(dmDocumentTitle = "Document_2.doc");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMDocument.deleteCP(
			dmDocumentTitle = "Document_2.doc",
			recycleBinDisabled = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMDocument.cannotViewCP(dmDocumentTitle = "Document_2.doc");

		DMDocument.viewDefault();

		DMRepository.cleanRepository(dmFolderName = "DM Folder3 Name");
	}

	@priority = "4"
	@refactorneeded
	test DeleteSubfolder {
		property test.name.skip.portal.instance = "SharepointREST#DeleteSubfolder";

		DMRepository.cleanRepository(dmFolderName = "DM Folder Name");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		DMFolder.addCP(dmFolderName = "DM Folder Name");

		DMFolder.deleteCP(
			dmFolderName = "DM Folder Name",
			recycleBinDisabled = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMFolder.cannotViewCP(dmFolderName = "DM Folder Name");

		DMRepository.cleanRepository(dmFolderName = "DM Folder Name");
	}

	@priority = "4"
	@refactorneeded
	test EditDocumentFile {
		property test.name.skip.portal.instance = "SharepointREST#EditDocumentFile";

		DMRepository.cleanRepository(dmDocumentTitle = "Document_3.doc");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.doc",
			dmDocumentTitle = "Document_3.doc");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.doc");

		DMDocument.viewCP(
			dmDocumentSize = "38 KB",
			dmDocumentTitle = "Document_3.doc");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Documents and Media");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.editCP(
			dmDocumentFileEdit = "Document_2.jpg",
			dmDocumentTitle = "Document_3.doc");

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Documents and Media");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.doc");

		DMDocument.viewCP(
			dmDocumentSize = "30 KB",
			dmDocumentTitle = "Document_3.doc");

		DMDocument.cannotViewDocumentMetadataCP(
			metadataData = "image/jpeg",
			metadataLabel = "Content Type");

		DMDocument.cannotViewDocumentMetadataCP(
			metadataData = "ISO-8859-1",
			metadataLabel = "Content Encoding");

		DMRepository.cleanRepository(dmDocumentTitle = "Document_3.doc");
	}

	@priority = "4"
	@refactorneeded
	test MoveCheckedoutDocumentToFolder {
		property test.name.skip.portal.instance = "SharepointREST#MoveCheckedoutDocumentToFolder";

		DMRepository.cleanRepository(dmFolderName = "Sharepoint Subfolder");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		DMFolder.addCP(dmFolderName = "Sharepoint Subfolder");

		DMFolder.viewCP(dmFolderName = "Sharepoint Subfolder");

		DMRepository.cleanRepository(dmDocumentTitle = "Document_1.txt");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "Document_1.txt");

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_1.txt",
			dmRepositoryName = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.txt");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		DMDocument.moveToSubFolderCP(
			dmDocumentTitle = "Document_1.txt",
			dmFolderName = "Collaboration Test Application",
			dmSubFolderName = "Sharepoint Subfolder");

		DMDocument.viewMovedToFolderCP(
			dmDocumentTitle = "Document_1.txt",
			dmFolderName = "Sharepoint Subfolder");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.txt");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		DMRepository.cleanRepository(dmFolderName = "Sharepoint Subfolder");
	}

	@priority = "4"
	@refactorneeded
	test MoveDocumentToHome {
		property test.name.skip.portal.instance = "SharepointREST#MoveDocumentToHome";

		DMRepository.cleanRepository(dmDocumentTitle = "Document_1.odt");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.odt",
			dmDocumentTitle = "Document_1.odt");

		DMDocument.moveToFolderCP(
			dmDocumentTitle = "Document_1.odt",
			dmFolderName = "Home");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.odt");

		DMDocument.viewCP(dmDocumentTitle = "Document_1.odt");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.cannotViewCP(dmDocumentTitle = "Document_1.odt");
	}

	@priority = "4"
	@refactorneeded
	test SearchDocumentViaHome {
		property test.name.skip.portal.instance = "SharepointREST#SearchDocumentViaHome";

		DMRepository.cleanRepository(dmDocumentTitle = "Document_3.odt");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.odt",
			dmDocumentTitle = "Document_3.odt");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		Search.searchCP(searchTerm = "Document_3.odt");

		DMDocument.viewSearchResultsCP(
			dmDocumentTitle = "Document_3.odt",
			dmRepositoryName = "Collaboration Test Application");

		DMRepository.cleanRepository(dmDocumentTitle = "Document_3.odt");
	}

	@priority = "4"
	@refactorneeded
	test ViewDocumentAsGuest {
		property test.name.skip.portal.instance = "SharepointREST#ViewDocumentAsGuest";

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMRepository.cleanRepository(dmDocumentTitle = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoRepository(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc");

		DMDocument.viewPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc",
			dmRepositoryName = "true");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		AssertClick(
			key_dmFolderName = "Collaboration Test Application",
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_FOLDER_TITLE",
			value1 = "Collaboration Test Application");

		Pause(locator1 = "3000");

		AssertElementNotPresent(
			key_dmDocumentTitle = "Document_1.doc",
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_TITLE");

		User.loginUserPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMRepository.cleanRepository(dmDocumentTitle = "Document_1.doc");
	}

	@priority = "4"
	@refactorneeded
	test ViewEditedCheckedoutDocument {
		property test.name.skip.portal.instance = "SharepointREST#ViewEditedCheckedoutDocument";

		DMRepository.cleanRepository(dmDocumentTitle = "Document_1.xls");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.xls",
			dmDocumentTitle = "Document_1.xls");

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_1.xls",
			dmRepositoryName = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Document_1.xls");

		DMDocument.editCmd(dmDocumentTitleEdit = "Document_1_Edit.xls");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		Alert.viewSuccessMessage();

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1_Edit.xls");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1_Edit.xls");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		DMRepository.cleanRepository(dmDocumentTitle = "Document_1_Edit.xls");
	}

	@priority = "4"
	@refactorneeded
	test ViewOriginalFileExtensionAfterUnsuccessfulExtensionChange {
		property test.name.skip.portal.instance = "SharepointREST#ViewOriginalFileExtensionAfterUnsuccessfulExtensionChange";

		DMRepository.cleanRepository(dmDocumentTitle = "Document_1.docx");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.docx",
			dmDocumentTitle = "Document_1.docx");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Document_1.docx");

		DMDocument.editCmd(dmDocumentTitleEdit = "Document_1.jpg");

		Click(locator1 = "Button#PUBLISH");

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "The source file does not have the same extension as the original file.");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.docx");

		DMDocument.viewCP(dmDocumentTitle = "Document_1.docx");

		DMRepository.cleanRepository(dmDocumentTitle = "Document_1.docx");
	}

	@priority = "4"
	@refactorneeded
	test ViewOriginalFileExtensionAfterUnsuccessfulExtensionRemoval {
		property test.name.skip.portal.instance = "SharepointREST#ViewOriginalFileExtensionAfterUnsuccessfulExtensionRemoval";

		DMRepository.cleanRepository(dmDocumentTitle = "Document_3.docx");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.docx",
			dmDocumentTitle = "Document_3.docx");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Document_3.docx");

		DMDocument.editCmd(dmDocumentTitleEdit = "Document_3");

		Click(locator1 = "Button#PUBLISH");

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "The source file does not have the same extension as the original file.");

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.docx");

		DMDocument.viewCP(dmDocumentTitle = "Document_3.docx");

		DMRepository.cleanRepository(dmDocumentTitle = "Document_3.docx");
	}

	@description = "This test ensures that repositories can be added both on site admin and on a content page."
	@priority = "4"
	@refactorneeded
	test ViewRepository {
		property test.name.skip.portal.instance = "SharepointREST#ViewRepository";

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMRepository.viewBreadcrumb(dmRepositoryName = "Collaboration Test Application");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Content Page Name",
			type = "content");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Guest");

		PageEditor.addWidget(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		PageEditor.clickPublish();

		ContentPagesNavigator.openViewContentPage(
			pageName = "Test Content Page Name",
			siteName = "Guest");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoAddRepositoryCP();

		Type(
			key_fieldLabel = "Name",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "Collaboration Test Application 2");

		DMRepository.addSharepoint(
			dmRepositoryLibraryPath = "Documentos compartidos",
			dmRepositoryName = "Sharepoint (CollabQA)",
			dmRepositorySiteAbsoluteURL = "https://liferaycolab.sharepoint.com",
			permissionDefinitionKey = "ACCESS",
			roleTitle = "Guest");

		PortletEntry.save();

		Navigator.openSpecificURL(url = "https://localhost:8443/group/guest/~/control_panel/manage?p_p_id=com_liferay_document_library_web_portlet_DLAdminPortlet");

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application 2");

		DMRepository.viewBreadcrumb(dmRepositoryName = "Collaboration Test Application 2");
	}

}