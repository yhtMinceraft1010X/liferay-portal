@component-name = "portal-document-management-ee"
definition {

	property cmis.repository.type = "sharepoint2010";
	property custom.properties = "session.store.password=true${line.separator}company.security.auth.type=screenName${line.separator}default.layout.template.id=1_column";
	property osgi.app.includes = "sharepoint-soap";
	property portal.release = "false";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Sharepoint";

	setUp {
		TestCase.setUpPortalInstance(authenticationMethod = "By Screen Name");

		var sharepointVmHostName = PropsUtil.get("cmis.repository.vm.host.name");

		AntCommand(
			locator1 = "build-test-sharepoint.xml",
			value1 = "clean-sharepoint-repository -Dssh.host=${sharepointVmHostName}");

		User.firstLoginByScreenNamePG(
			authenticationMethod = "By Screen Name",
			userScreenName = "test");

		Navigator.openURL();

		Navigator.gotoAccountSettings();

		User.editUserInformation(userScreenNameEdit = "administrator");

		Navigator.openURL();

		Navigator.gotoAccountSettings();

		User.editPassword(
			currentPassword = "test",
			newPassword = "password");

		User.logoutPG();

		User.firstLoginUI(
			authenticationMethod = "By Screen Name",
			password = "password",
			userScreenName = "administrator");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoAddRepositoryPG();

		DMRepository.edit(dmRepositoryName = "Sharepoint Repository Name");

		DMRepository.addSharepoint(
			dmRepositoryLibraryName = "Documents",
			dmRepositoryName = "Sharepoint",
			dmRepositorySiteURL = "http://${sharepointVmHostName}",
			permissionDefinitionKey = "ACCESS",
			roleTitle = "Guest");

		PortletEntry.save();

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP(authenticationMethod = "By Screen Name");
		}
		else {
			DMRepository.tearDownCP();

			DMDocument.tearDownCP();

			Navigator.openURL();

			UserBar.gotoDropdownItem(dropdownItem = "Account Settings");

			User.editUserInformation(userScreenNameEdit = "test");

			Navigator.openURL();

			UserBar.gotoDropdownItem(dropdownItem = "Account Settings");

			User.editPassword(
				currentPassword = "password",
				newPassword = "test");

			User.logoutPG();

			User.loginByScreenNamePG(
				authenticationMethod = "By Screen Name",
				password = "test",
				userScreenName = "test");
		}
	}

	@priority = "4"
	@refactorneeded
	test ViewDocumentAsGuest {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoRepository(dmRepositoryName = "Sharepoint Repository Name");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc");

		DMDocument.viewPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc",
			dmRepositoryName = "true");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoRepository(dmRepositoryName = "Sharepoint Repository Name");

		DMDocument.viewPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc",
			dmRepositoryName = "true");

		User.loginByScreenNamePG(
			authenticationMethod = "By Screen Name",
			password = "password",
			userScreenName = "administrator");
	}

}