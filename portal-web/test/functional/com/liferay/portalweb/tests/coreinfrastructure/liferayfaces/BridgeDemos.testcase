@component-name = "core-infrastructure"
definition {

	property custom.properties = "company.default.time.zone=America/Los_Angeles";
	property liferay.faces = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Liferay Faces";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Bridge Demos");

		PagesAdmin.openPagesAdmin(siteURLKey = "Bridge Demos");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@priority = "5"
	test AlloyApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "alloy-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "alloy-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/alloy-applicant");

		Portlet.addPG(portletName = "alloy-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/alloy-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Button.click(button = "Reset");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Button.click(button = "Submit");

		for (var fieldName : list "firstName,lastName,emailAddress,phoneNumber,city,postalCode,provinceId") {
			BridgeDemos.viewFieldErrorMessage(
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/alloy-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/alloy-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/alloy-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/alloy-applicant");

		BridgeDemos.autoPopulateCityState(
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/alloy-applicant");

		BridgeDemos.uploadFile(fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@ignore = "true"
	@priority = "5"
	test BootsFacesApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "bootsfaces-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "bootsfaces-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/bootsfaces-applicant");

		Portlet.addPG(portletName = "bootsfaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/bootsfaces-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Button.click(button = "Reset");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Button.click(button = "Submit");

		for (var fieldName : list "firstName,lastName,emailAddress,phoneNumber,city,postalCode,provinceId") {
			BridgeDemos.viewFieldErrorMessage(
				applicantName = "Boots Faces",
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			applicantName = "Boots Faces",
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/bootsfaces-applicant");

		BridgeDemos.validateField(
			applicantName = "Boots Faces",
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/bootsfaces-applicant");

		BridgeDemos.validateField(
			applicantName = "Boots Faces",
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/bootsfaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/bootsfaces-applicant");

		BridgeDemos.autoPopulateCityState(
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/bootsfaces-applicant");

		BridgeDemos.uploadFile(fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@priority = "5"
	test ButterFacesApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "butterfaces-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "butterfaces-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/butterfaces-applicant");

		Portlet.addPG(portletName = "butterfaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/butterfaces-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Click(locator1 = "BridgeDemos#RESET_BUTTON");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Click(locator1 = "BridgeDemos#SUBMIT_BUTTON");

		for (var fieldName : list "First Name,Last Name,Email Address,Phone Number,City,State/Province,Zip/Postal") {
			BridgeDemos.viewFieldErrorMessage(
				applicantName = "Butter Faces",
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			applicantName = "Butter Faces",
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/butterfaces-applicant");

		BridgeDemos.validateField(
			applicantName = "Butter Faces",
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/butterfaces-applicant");

		BridgeDemos.validateField(
			applicantName = "Butter Faces",
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/butterfaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/butterfaces-applicant");

		BridgeDemos.autoPopulateCityState(
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/butterfaces-applicant");

		BridgeDemos.uploadFile(fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@priority = "5"
	test JSF_IPCEventsPortletsSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf-events");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf-events",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-events");

		Portlet.addPG(portletName = "jsf-ipc-events-customers");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-events");

		Portlet.addPG(portletName = "jsf-ipc-events-bookings");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-events");

		var currentDate = DateUtil.getFormattedCurrentDate("MM/dd/yyyy");

		BridgeDemos.viewNames(
			customerId = "1",
			firstName = "Brian",
			lastName = "Green",
			lastNameEdit = "Greeny");

		BridgeDemos.viewStartDate(
			customerId = "1",
			startDate = "${currentDate}",
			startDateEdit = "12/25/1999");

		BridgeDemos.viewNames(
			customerId = "2",
			firstName = "Liz",
			firstNameEdit = "Lizy",
			lastName = "Kessler");

		BridgeDemos.viewNames(
			customerId = "3",
			firstName = "Rich",
			firstNameEdit = "Richy",
			lastName = "Shearer");

		BridgeDemos.viewStartDate(
			customerId = "1",
			startDate = "12/25/1999",
			startDateEdit = "${currentDate}");
	}

	@priority = "5"
	test JSF_IPCPublicRenderParamsPortletsSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf-prp");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf-prp",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-prp");

		Portlet.addPG(portletName = "jsf-ipc-pub-render-params-customers");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-prp");

		Portlet.addPG(portletName = "jsf-ipc-pub-render-params-bookings");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-prp");

		var currentDate = DateUtil.getFormattedCurrentDate("MM/dd/yyyy");

		BridgeDemos.viewNames(
			customerId = "1",
			firstName = "Brian",
			lastName = "Green",
			lastNameEdit = "Greeny");

		BridgeDemos.viewStartDate(
			customerId = "1",
			startDate = "${currentDate}",
			startDateEdit = "12/25/1999");

		BridgeDemos.viewNames(
			customerId = "2",
			firstName = "Liz",
			firstNameEdit = "Lizy",
			lastName = "Kessler");

		BridgeDemos.viewNames(
			customerId = "3",
			firstName = "Rich",
			firstNameEdit = "Richy",
			lastName = "Shearer");

		BridgeDemos.viewStartDate(
			customerId = "1",
			startDate = "12/25/1999",
			startDateEdit = "${currentDate}");
	}

	@priority = "5"
	test JSFApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-applicant");

		Portlet.addPG(portletName = "jsf-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Click(locator1 = "BridgeDemos#RESET_BUTTON");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Click(locator1 = "BridgeDemos#SUBMIT_BUTTON");

		for (var fieldName : list "firstName,lastName,emailAddress,phoneNumber,city,postalCode,provinceId") {
			BridgeDemos.viewFieldErrorMessage(
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/jsf-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/jsf-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/jsf-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-applicant");

		BridgeDemos.autoPopulateCityState(
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-applicant");

		BridgeDemos.uploadFile(fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@priority = "5"
	test JSFCDIApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf-cdi-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf-cdi-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-cdi-applicant");

		Portlet.addPG(portletName = "jsf-cdi-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-cdi-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Click(locator1 = "BridgeDemos#RESET_BUTTON");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Click(locator1 = "BridgeDemos#SUBMIT_BUTTON");

		for (var fieldName : list "firstName,lastName,emailAddress,phoneNumber,city,postalCode,provinceId") {
			BridgeDemos.viewFieldErrorMessage(
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/jsf-cdi-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/jsf-cdi-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/jsf-cdi-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-cdi-applicant");

		BridgeDemos.autoPopulateCityState(
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-cdi-applicant");

		BridgeDemos.uploadFile(fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@priority = "5"
	test JSFExportPDFPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf-pdf");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf-pdf",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-pdf");

		Portlet.addPG(portletName = "jsf-export-pdf");

		// Only export files, no verification of file content

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-pdf");

		BridgeDemos.exportFile(lastName = "Green,Kessler,Shearer");
	}

	@priority = "5"
	test JSFFlowsPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf flows");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf flows",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-flows");

		Portlet.addPG(portletName = "jsf-flows");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-flows");

		BridgeDemos.viewLibraries(libraryName = "Mojarra,Liferay Faces Alloy,Liferay Faces Bridge Impl,Liferay Faces Bridge Ext,Weld");

		Click(
			key_buttonName = "Enter Booking Flow",
			locator1 = "BridgeDemos#JSF_FLOWS_BUTTON");

		AssertElementPresent(
			key_buttonName = "Exit Booking Flow",
			locator1 = "BridgeDemos#JSF_FLOWS_BUTTON");

		Click(
			key_buttonName = "Exit Booking Flow",
			locator1 = "BridgeDemos#JSF_FLOWS_BUTTON");

		AssertElementPresent(
			key_buttonName = "Enter Booking Flow",
			locator1 = "BridgeDemos#JSF_FLOWS_BUTTON");

		BridgeDemos.findFlight(
			arrival = "Louisville: Louisville International Standiford Field (SDF)",
			bookAdditionalTravel = "true",
			bookingType = "Flight",
			date = "08/12/2015",
			departure = "Los Angeles: Los Angeles International Airport (LAX)");

		Select(
			key_item = "bookingType",
			locator1 = "BridgeDemos#FLIGHT_SELECT",
			value1 = "Cruise");

		AssertTextEquals(
			locator1 = "//fieldset[contains(@id,':bookingTypeFieldSet')]/p",
			value1 = "'Flight' is currently the only type of booking that is implemented in this demo.");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-flows");

		BridgeDemos.findFlight(
			arrival = "Louisville: Louisville International Standiford Field (SDF)",
			bookingType = "Flight",
			date = "08/12/2015",
			departure = "Los Angeles: Los Angeles International Airport (LAX)");

		BridgeDemos.bookFlight(
			accountNumber = "12345678901234567890",
			addressLine1 = "123 Gilgod Ave",
			city = "Hollywood",
			cvv = "123",
			emailAddress = "John@Adams.org",
			expirationMonth = "01/10",
			firstName = "John",
			lastName = "Adams",
			paymentType = "Visa",
			phoneNumber = "1234567890",
			province = "California",
			title = "Mr.");

		BridgeDemos.submitSurvey(
			question1 = "Liferay",
			question2 = "Cockpit");

		BridgeDemos.viewLibraries(libraryName = "bookingFlowModelBeanInScope=false,cartModelBeanInScope=false,flightSearchModelBeanInScope=false,surveyFlowModelBeanInScope=false");
	}

	@priority = "5"
	test JSFHTML5ApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf-html5-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf-html5-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-html5-applicant");

		Portlet.addPG(portletName = "jsf-html5-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-html5-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Click(locator1 = "BridgeDemos#RESET_BUTTON");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Click(locator1 = "BridgeDemos#SUBMIT_BUTTON");

		for (var fieldName : list "firstName,lastName,emailAddress,phoneNumber,city,postalCode,provinceId") {
			BridgeDemos.viewFieldErrorMessage(
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/jsf-html5-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/jsf-html5-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/jsf-html5-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-html5-applicant");

		BridgeDemos.autoPopulateCityState(
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-html5-applicant");

		BridgeDemos.uploadFile(fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@priority = "5"
	test JSFJSPApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf-jsp-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf-jsp-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-jsp-applicant");

		Portlet.addPG(portletName = "jsf-jsp-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-jsp-applicant");

		BridgeDemos.viewApplication(applicantName = "JSF JSP");

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Click(locator1 = "BridgeDemos#RESET_BUTTON");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Click(locator1 = "BridgeDemos#SUBMIT_BUTTON");

		BridgeDemos.viewFieldErrorMessage(
			applicantName = "JSF JSP",
			errorMessage = "Value is required",
			fieldName = "${fieldName}");

		BridgeDemos.validateField(
			applicantName = "JSF JSP",
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/jsf-jsp-applicant");

		BridgeDemos.validateField(
			applicantName = "JSF JSP",
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/jsf-jsp-applicant");

		BridgeDemos.validateField(
			applicantName = "JSF JSP",
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/jsf-jsp-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-jsp-applicant");

		BridgeDemos.uploadFile(
			applicantName = "JSF JSP",
			fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			applicantName = "JSF JSP",
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@priority = "5"
	test JSFSpringApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "jsf-spring-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "jsf-spring-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos");

		Portlet.addPG(portletName = "jsf-spring-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-spring-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Click(locator1 = "BridgeDemos#RESET_BUTTON");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Click(locator1 = "BridgeDemos#SUBMIT_BUTTON");

		for (var fieldName : list "firstName,lastName,emailAddress,phoneNumber,city,postalCode,provinceId") {
			BridgeDemos.viewFieldErrorMessage(
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/jsf-spring-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/jsf-spring-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/jsf-spring-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-spring-applicant");

		BridgeDemos.autoPopulateCityState(
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/jsf-spring-applicant");

		BridgeDemos.uploadFile(fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@priority = "5"
	test PrimeFacesCDIApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "primefaces-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "primefaces-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/primefaces-applicant");

		Portlet.addPG(portletName = "primefaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/primefaces-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Click(locator1 = "BridgeDemos#RESET_BUTTON");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Click(locator1 = "BridgeDemos#SUBMIT_BUTTON");

		for (var fieldName : list "firstName,lastName,emailAddress,phoneNumber,city,postalCode,provinceId") {
			BridgeDemos.viewFieldErrorMessage(
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			applicantName = "Prime Faces",
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/primefaces-applicant");

		BridgeDemos.validateField(
			applicantName = "Prime Faces",
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/primefaces-applicant");

		BridgeDemos.validateField(
			applicantName = "Prime Faces",
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/primefaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/primefaces-applicant");

		BridgeDemos.autoPopulateCityState(
			applicantName = "Prime Faces",
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/primefaces-applicant");

		BridgeDemos.uploadFile(
			applicantName = "Prime Faces",
			fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			applicantName = "Prime Faces",
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

	@priority = "5"
	test RichFacesCDIApplicantPortletSmoke {
		JSONLayout.addPublicLayout(
			groupName = "Bridge Demos",
			layoutName = "richfaces-applicant");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "richfaces-applicant",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/richfaces-applicant");

		Portlet.addPG(portletName = "richfaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/richfaces-applicant");

		BridgeDemos.viewApplication();

		BridgeDemos.editDateFormat(dateFormat = "MM/dd/yy");

		BridgeDemos.gotoEdit();

		Click(locator1 = "BridgeDemos#RESET_BUTTON");

		BridgeDemos.viewDateFormat(
			dateFormat = "MM/dd/yyyy",
			displayDate = "${displayDate}");

		Click(locator1 = "BridgeDemos#SUBMIT_BUTTON");

		for (var fieldName : list "firstName,lastName,emailAddress,phoneNumber,city,postalCode,provinceId") {
			BridgeDemos.viewFieldErrorMessage(
				errorMessage = "Value is required",
				fieldName = "${fieldName}");
		}

		BridgeDemos.validateField(
			errorMessage = "Invalid date format",
			fieldName = "Birthday",
			fieldNameText = "dateOfBirth",
			fieldValue = "12/34/5678",
			urlAppend = "web/bridge-demos/richfaces-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "test",
			urlAppend = "web/bridge-demos/richfaces-applicant");

		BridgeDemos.validateField(
			errorMessage = "Invalid e-mail address",
			fieldName = "Email Address",
			fieldNameText = "emailAddress",
			fieldValue = "@liferay.com",
			urlAppend = "web/bridge-demos/richfaces-applicant");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/richfaces-applicant");

		BridgeDemos.autoPopulateCityState(
			city = "Orlando",
			postalCode = "32801",
			state = "FL");

		BridgeDemos.addComment(comments = "testing 1, 2, 3");

		Click(locator1 = "BridgeDemos#SHOW_HIDE_COMMENTS_LINK");

		BridgeDemos.viewComment(comments = "testing 1, 2, 3");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/bridge-demos/richfaces-applicant");

		BridgeDemos.uploadFile(
			applicantName = "Rich JSP",
			fileName = "Document_2.jpeg");

		BridgeDemos.submit(
			city = "Orlando",
			comments = "Indeed the people are one and they all have one language, and this is what they begin to do ...",
			confirmation = "Thank you David",
			emailAddress = "no_need@just.pray",
			firstName = "David",
			lastName = "Samuel",
			phoneNumber = "1112223333",
			postalCode = "32801",
			state = "FL");
	}

}