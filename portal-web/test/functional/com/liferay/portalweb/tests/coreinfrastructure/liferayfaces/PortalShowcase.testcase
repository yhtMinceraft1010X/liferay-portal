@component-name = "core-infrastructure"
definition {

	property liferay.faces = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Liferay Faces";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Portal Showcase");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "Portal Showcase",
			sitePageType = "Widget Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/guest/portal-showcase");

		Portlet.addPG(portletName = "Portal Showcase");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/guest/portal-showcase");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@ignore = "true"
	@priority = "5"
	test InputRichTextSmoke {
		Navigator.openWithAppendToBaseURL(urlAppend = "web/guest/portal-showcase/-/portal-tag/portal/inputrichtext/general");

		AssertElementPresent(locator1 = "PortalShowcase#CHECKED_RENDERED_CHECKBOX");

		// InputRichTextHidden

		PortalShowcase.checkText(
			boldClose = "</strong>",
			boldOpen = "<strong>",
			italicClose = "</em>",
			italicOpen = "<em>",
			usecase = "Hidden");

		// InputRichTextGeneral

		PortalShowcase.checkText(
			boldClose = "</strong>",
			boldOpen = "<strong>",
			italicClose = "</em>",
			italicOpen = "<em>",
			usecase = "General");

		// InputRichTextBBCode

		PortalShowcase.checkText(
			boldClose = "[/b]",
			boldOpen = "[b]",
			italicClose = "[/i]",
			italicOpen = "[i]",
			usecase = "BBCode");

		// InputRichTextCreole

		PortalShowcase.checkText(
			boldClose = "**",
			boldOpen = "**",
			italicClose = "//",
			italicOpen = "//",
			usecase = "Creole");

		// InputRichTextInstantAjax

		PortalShowcase.checkText(
			boldClose = "</strong>",
			boldOpen = "<strong>",
			italicClose = "</em>",
			italicOpen = "<em>",
			usecase = "Instant Ajax");

		// InputRichTextDOMEvents

		Navigator.openWithAppendToBaseURL(urlAppend = "web/guest/portal-showcase/-/portal-tag/portal/inputrichtext/general");

		Click(
			key_field = "DOM Events",
			locator1 = "PortalShowcase#INPUT_RICH_TEXT");

		Click(locator1 = "PortalShowcase#WRITEABLE_FIELD");

		RobotType(locator1 = "Hello world!");

		AssertTextEquals(
			locator1 = "PortalShowcase#TEXT_FEEDBACK",
			value1 = "onfocus");

		PortalShowcase.submit();

		AssertTextEquals(
			locator1 = "PortalShowcase#TEXT_FEEDBACK",
			value1 = "onfocus onchange onblur");

		AssertTextEquals.assertPartialText(
			locator1 = "PortalShowcase#MODAL_VALUE",
			value1 = "<p>Hello world!</p>");

		Click(locator1 = "PortalShowcase#WRITEABLE_FIELD");

		AssertTextEquals(
			locator1 = "PortalShowcase#TEXT_FEEDBACK",
			value1 = "onfocus onchange onblur onfocus");

		PortalShowcase.submit();

		AssertTextEquals(
			locator1 = "PortalShowcase#TEXT_FEEDBACK",
			value1 = "onfocus onchange onblur onfocus onblur");

		// InputRichTextGeneralTest

		Navigator.openWithAppendToBaseURL(urlAppend = "web/guest/portal-showcase/-/portal-tag/portal/inputrichtext/general");

		Click(locator1 = "//a[contains(text(),'Default Value')]");

		AssertElementPresent(
			key_message = "<p>This is some <strong>bold</strong> text<br />",
			locator1 = "JSFShowcase#RESULT_MESSAGE");

		AssertElementPresent(
			key_message = "and this is some <em>italic</em> text.</p>",
			locator1 = "JSFShowcase#RESULT_MESSAGE");

		KeyPress(
			locator1 = "PortalShowcase#WRITEABLE_FIELD",
			value1 = "\UP");

		Click(locator1 = "PortalShowcase#WRITEABLE_FIELD");

		KeyPress(
			locator1 = "PortalShowcase#WRITEABLE_FIELD",
			value1 = "\UP");

		var i = "0";

		while ("${i}" != "7") {
			KeyPress(
				locator1 = "PortalShowcase#WRITEABLE_FIELD",
				value1 = "\LEFT");

			var i = ${i} + 1;
		}

		RobotType(locator1 = "ld o");

		PortalShowcase.submit();

		AssertElementPresent(
			key_message = "<p>This is some <strong>bold old</strong> text<br />",
			locator1 = "JSFShowcase#RESULT_MESSAGE");

		// InputRichTextImmediateTest

		Navigator.openWithAppendToBaseURL(urlAppend = "web/guest/portal-showcase/-/portal-tag/portal/inputrichtext/general");

		Click(locator1 = "//a[contains(text(),'Immediate')]");

		PortalShowcase.submitImmediate(
			immediate = "true",
			messageImmediate1 = "APPLY_REQUEST_VALUES",
			text = "Hello World!",
			textResult = "<p>Hello world!</p>");

		PortalShowcase.submitImmediate(
			immediate = "false",
			messageImmediate2 = "PROCESS_VALIDATIONS",
			text = "Hello World!",
			textResult = "<p>Hello world!</p>");
	}

}