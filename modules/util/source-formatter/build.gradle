apply plugin: "com.liferay.maven.plugin.builder"

buildPluginDescriptor {
	ext {
		autoClean = false
	}

	finalizedBy formatSource

	forcedExclusions "com.ibm.icu:icu4j:2.6.1"
	goalPrefix = "source-formatter"
}

dependencies {
	compile group: "com.googlecode.java-diff-utils", name: "diffutils", version: "1.3.0"
	compile group: "com.puppycrawl.tools", name: "checkstyle", version: "8.29"
	compile group: "com.thoughtworks.qdox", name: "qdox", version: "2.0-M5"
	compile group: "commons-io", name: "commons-io", version: "2.8.0"
	compile group: "commons-logging", name: "commons-logging", version: "1.2"
	compile(group: "jaxen", name: "jaxen", version: "1.1.1") {
		exclude group: "com.ibm.icu", module: "icu4j"
	}
	compile group: "junit", name: "junit", version: "4.13.1"
	compile group: "org.antlr", name: "antlr4-runtime", version: "4.8-1"
	compile group: "org.apache.ant", name: "ant", version: "1.10.11"
	compile group: "org.apache.maven", name: "maven-artifact", version: "3.3.9"
	compile group: "org.dom4j", name: "dom4j", version: "2.1.3"
	compile group: "org.json", name: "json", version: "20180813"
	compile group: "org.reflections", name: "reflections", "version": "0.10.2"
	compile group: "xerces", name: "xercesImpl", version: "2.12.1"

	compileInclude group: "com.liferay", name: "com.liferay.petra.function", version: "5.0.1"
	compileInclude group: "com.liferay", name: "com.liferay.petra.lang", version: "1.0.0"
	compileInclude group: "com.liferay", name: "com.liferay.petra.nio", version: "1.0.0"
	compileInclude group: "com.liferay", name: "com.liferay.petra.string", version: "2.0.0"
	compileInclude group: "com.liferay", name: "com.liferay.poshi.core", version: "1.0.63"

	compileOnly group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.concurrent", version: "1.1.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.content", version: "1.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.memory", version: "1.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.reflect", version: "1.1.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.xml", version: "1.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.portal.tools.java.parser", version: "1.0.46"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.java", version: "2.5.0"
	compileOnly group: "org.apache.felix", name: "org.apache.felix.http.servlet-api", version: "1.1.2"
	compileOnly group: "org.apache.maven", name: "maven-plugin-api", transitive: false, version: "3.0.4"
}

deployDependencies {
	from (configurations.compile) {
		include "checkstyle-*.jar"
	}

	rename(/checkstyle-(.+)\.jar/, "checkstyle" + renameSuffix)
}

liferay {
	deployDir = "../../../tools/sdk/dependencies/com.liferay.source.formatter/lib"
}

liferayOSGi {
	expandCompileInclude = true
}

updateFileVersions {
	match(/<artifactId>com\.liferay\.source\.formatter<\/artifactId>\s+<version>(.+)<\/version>/, "../../etl/talend/pom.xml")
	match(/\t\t\t\t<version>(\d.+)<\/version>/, "samples/pom.xml")
	match(/com\.liferay\.source\.formatter=(\d.+)/, "../../sdk/gradle-plugins/src/main/resources/com/liferay/gradle/plugins/dependencies/portal-tools.properties")
	match(/\t\t<dependency name="com.liferay.source.formatter" org="com.liferay" rev="(\d.+)" \/>/, "../../../tools/sdk/dependencies/com.liferay.source.formatter/ivy.xml")

	replaceOnlyIf([{
		String group, String replacement, String content, File contentFile ->

		if (content.contains("task runGradleTest")) {
			return false
		}

		return true
	}])
}