components:
    schemas:
        ExportTask:
            # @review
            properties:
                className:
                    description:
                        The item class name for which data will be exported in batch.
                    example: com.liferay.headless.delivery.dto.v1_0.BlogPosting
                    type: string
                contentType:
                    description:
                        The file content type.
                    example: JSON
                    type: string
                endTime:
                    description:
                        The end time of export task operation.
                    example: 2019-27-09'T'08:33:33'Z'
                    format: date-time
                    type: string
                errorMessage:
                    description:
                        The error message in case of export task's failed execution.
                    example: File import failed
                    type: string
                executeStatus:
                    description:
                        The status of export task's execution.
                    enum: [COMPLETED, FAILED, INITIAL, STARTED]
                    example: INITIALIZED
                    type: string
                externalReferenceCode:
                    # @review
                    description:
                        The optional external key of this account.
                    type: string
                id:
                    description:
                        The task's ID.
                    example: 30130
                    format: int64
                    minimum: 0
                    type: integer
                processedItemsCount:
                    description:
                        Number of items processed by export task opeartion.
                    example: 100
                    minimum: 0
                    type: integer
                startTime:
                    description:
                        The start time of export task operation.
                    example: 2019-27-09'T'08:23:33'Z'
                    format: date-time
                    type: string
                totalItemsCount:
                    description:
                        Total number of items that will be processed by export task operation.
                    example: 1000
                    minimum: 0
                    type: integer
            type: object
        FailedItem:
            properties:
                item:
                    description:
                        The item which failed to be imported.
                    type: string
                itemIndex:
                    description:
                        Position of the item in the import file. For CSV file it will represent a line number, for JSON
                        file it will represent an array index etc.
                    type: integer
                message:
                    description:
                        Message describing the reason of import failure.
                    type: string
        ImportTask:
            # @review
            properties:
                className:
                    description:
                        The item class name for which data will be processed in batch.
                    example: com.liferay.headless.delivery.dto.v1_0.BlogPosting
                    type: string
                contentType:
                    description:
                        The file content type.
                    example: JSON
                    type: string
                endTime:
                    description:
                        The end time of import task operation.
                    example: 2019-27-09'T'08:33:33'Z'
                    format: date-time
                    type: string
                errorMessage:
                    description:
                        The error message in case of import task's failed execution.
                    example: File import failed
                    type: string
                executeStatus:
                    description:
                        The status of import task's execution.
                    enum: [COMPLETED, FAILED, INITIAL, STARTED]
                    example: INITIALIZED
                    type: string
                externalReferenceCode:
                    # @review
                    description:
                        The optional external key of this account.
                    type: string
                failedItems:
                    items:
                        $ref: "#/components/schemas/FailedItem"
                    type: array
                id:
                    description:
                        The task's ID.
                    example: 30130
                    format: int64
                    minimum: 0
                    type: integer
                importStrategy:
                    description:
                        Defines if import task will fail when error occurs or continue importing rest of the items.
                    enum: [ON_ERROR_CONTINUE, ON_ERROR_FAIL]
                    type: string
                operation:
                    description:
                        The operation of import task.
                    enum: [CREATE, DELETE, UPDATE]
                    example: CREATE
                    type: string
                processedItemsCount:
                    description:
                        Number of items processed by import task opeartion.
                    example: 100
                    minimum: 0
                    type: integer
                startTime:
                    description:
                        The start time of import task operation.
                    example: 2019-27-09'T'08:23:33'Z'
                    format: date-time
                    type: string
                totalItemsCount:
                    description:
                        Total number of items that will be processed by import task operation.
                    example: 1000
                    minimum: 0
                    type: integer
            type: object
info:
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Headless Batch Engine"
    version: v1.0
openapi: 3.0.1
paths:
    /export-task/by-external-reference-code/{externalReferenceCode}:
        get:
            description:
                Retrieves the export task by external reference code.
            operationId: getExportTaskByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExportTask"
            tags: ["ExportTask"]
    /export-task/by-external-reference-code/{externalReferenceCode}/content:
        # @review
        get:
            description:
                Retrieves the exported content by external reference code.
            operationId: getExportTaskByExternalReferenceCodeContent
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/octet-stream:
                            schema:
                                format: binary
                                type: string
            tags: ["ExportTask"]
    /export-task/{className}/{contentType}:
        # @review
        post:
            description:
                Submits a request for exporting items to a file.
            operationId: postExportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contentType
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
                - in: query
                  name: externalReferenceCode
                  schema:
                      type: string
                - in: query
                  name: fieldNames
                  schema:
                      type: string
                - in: query
                  name: taskItemDelegateName
                  schema:
                      type: string
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExportTask"
                    description:
                        Async
            tags: ["ExportTask"]
    /export-task/{exportTaskId}:
        # @review
        get:
            description:
                Retrieves the export task.
            operationId: getExportTask
            parameters:
                - in: path
                  name: exportTaskId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExportTask"
            tags: ["ExportTask"]
    /export-task/{exportTaskId}/content:
        # @review
        get:
            description:
                Retrieves the exported content.
            operationId: getExportTaskContent
            parameters:
                - in: path
                  name: exportTaskId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/octet-stream:
                            schema:
                                format: binary
                                type: string
            tags: ["ExportTask"]
    /import-task/by-external-reference-code/{externalReferenceCode}:
        # @review
        get:
            description:
                Retrieves the import task by external reference code.
            operationId: getImportTaskByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
            tags: ["ImportTask"]
    /import-task/by-external-reference-code/{externalReferenceCode}/content:
        get:
            description:
                Retrieves the exported content by external reference code.
            operationId: getImportTaskByExternalReferenceCodeContent
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/octet-stream:
                            schema:
                                format: binary
                                type: string
            tags: ["ImportTask"]
    /import-task/by-external-reference-code/{externalReferenceCode}/failed-items/report:
        get:
            operationId: getImportTaskByExternalReferenceCodeFailedItemReport
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/octet-stream:
                            schema:
                                format: binary
                                type: string
            tags: ["ImportTask"]
    /import-task/{className}:
        # @review
        delete:
            description:
                Uploads a new file for deleting items in batch.
            operationId: deleteImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
                - in: query
                  name: externalReferenceCode
                  schema:
                      type: string
                - in: query
                  name: importStrategy
                  schema:
                      enum: [ON_ERROR_CONTINUE, ON_ERROR_FAIL]
                      type: string
                - in: query
                  name: taskItemDelegateName
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                    application/x-ndjson:
                        schema:
                            type: object
                    application/xml:
                        schema:
                            type: object
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                    text/csv:
                        schema:
                            type: object
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                    description:
                        Async
            tags: ["ImportTask"]
        post:
            description:
                Uploads a new file for creating new items in batch.
            operationId: postImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
                - in: query
                  name: createStrategy
                  schema:
                      enum: [INSERT, UPSERT]
                      type: string
                - in: query
                  name: externalReferenceCode
                  schema:
                      type: string
                - in: query
                  name: fieldNameMapping
                  schema:
                      type: string
                - in: query
                  name: importStrategy
                  schema:
                      enum: [ON_ERROR_CONTINUE, ON_ERROR_FAIL]
                      type: string
                - in: query
                  name: taskItemDelegateName
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                    application/x-ndjson:
                        schema:
                            type: object
                    application/xml:
                        schema:
                            type: object
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                    text/csv:
                        schema:
                            type: object
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                    description:
                        Async
            tags: ["ImportTask"]
        put:
            description:
                Uploads a new file for updating items in batch.
            operationId: putImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
                - in: query
                  name: externalReferenceCode
                  schema:
                      type: string
                - in: query
                  name: importStrategy
                  schema:
                      enum: [ON_ERROR_CONTINUE, ON_ERROR_FAIL]
                      type: string
                - in: query
                  name: taskItemDelegateName
                  schema:
                      type: string
                - in: query
                  name: updateStrategy
                  schema:
                      enum: [PARTIAL_UPDATE, UPDATE]
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                    application/x-ndjson:
                        schema:
                            type: object
                    application/xml:
                        schema:
                            type: object
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                    text/csv:
                        schema:
                            type: object
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                    description:
                        Async
            tags: ["ImportTask"]
    /import-task/{importTaskId}:
        # @review
        get:
            description:
                Retrieves the import task.
            operationId: getImportTask
            parameters:
                - in: path
                  name: importTaskId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
            tags: ["ImportTask"]
    /import-task/{importTaskId}/content:
        get:
            description:
                Retrieves the exported content.
            operationId: getImportTaskContent
            parameters:
                - in: path
                  name: importTaskId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/octet-stream:
                            schema:
                                format: binary
                                type: string
            tags: ["ImportTask"]
    /import-task/{importTaskId}/failed-items/report:
        get:
            operationId: getImportTaskFailedItemReport
            parameters:
                - in: path
                  name: importTaskId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/octet-stream:
                            schema:
                                format: binary
                                type: string
            tags: ["ImportTask"]