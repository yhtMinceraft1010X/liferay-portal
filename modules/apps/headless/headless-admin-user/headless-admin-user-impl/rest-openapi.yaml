components:
    schemas:
        Account:
            # @review
            description:
                An account represents an external account, for example a customer business.
            properties:
                accountUserAccounts:
                    description:
                        The users linked to the account
                    items:
                        $ref: "#/components/schemas/UserAccount"
                    type: array
                actions:
                    additionalProperties:
                        additionalProperties:
                            type: string
                        type: object
                    # @review
                    description:
                        Block of actions allowed by the user making the request.
                    readOnly: true
                    type: object
                description:
                    type: string
                domains:
                    # @review
                    description:
                        The account's email domains. Users assigned to this account generally will have email addresses
                        under one of these domains.
                    items:
                        type: string
                    type: array
                externalReferenceCode:
                    # @review
                    description:
                        The optional external key of this account.
                    type: string
                id:
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    type: string
                numberOfUsers:
                    description:
                        The number of this account's associated users.
                    readOnly: true
                    type: integer
                organizationIds:
                    items:
                        format: int64
                        type: integer
                    type: array
                parentAccountId:
                    format: int64
                    type: integer
                status:
                    type: integer
                type:
                    enum: [business, guest, person]
            required:
                - name
            type: object
        AccountBrief:
            description:
                Represents an account's basic information, to be embedded in other resources. This resource's ID can be
                used to query the account's complete information.
            properties:
                externalReferenceCode:
                    description:
                        The account's external reference code.
                    readOnly: true
                    type: string
                id:
                    description:
                        The account's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description:
                        The account's name.
                    readOnly: true
                    type: string
                roleBriefs:
                    description:
                        A list of the user's roles.
                    items:
                        $ref: "#/components/schemas/RoleBrief"
                    readOnly: true
                    type: array
            type: object
        AccountRole:
            # @review
            description:
                A role that belongs to an account
            properties:
                accountId:
                    # @review
                    description:
                        The primary key of the account that owns this role.
                    format: int64
                    readOnly: true
                    type: integer
                description:
                    type: string
                displayName:
                    type: string
                id:
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    type: string
                roleId:
                    # @review
                    description:
                        The primary key of the underlying system role.
                    format: int64
                    readOnly: true
                    type: integer
        Creator:
            description:
                Represents the user who created/authored the content. Properties follow the
                [creator](https://schema.org/creator) specification.
            properties:
                additionalName:
                    description:
                        The user's additional name, which can be used as a middle name.
                    readOnly: true
                    type: string
                contentType:
                    # @review
                    description:
                        The type of the content.
                    readOnly: true
                    type: string
                familyName:
                    description:
                        The user's surname (last name).
                    readOnly: true
                    type: string
                givenName:
                    description:
                        The user's first name.
                    readOnly: true
                    type: string
                id:
                    description:
                        The user's ID.
                    format: int64
                    readOnly: true
                    type: integer
                image:
                    description:
                        A relative URL to the user's profile image.
                    format: uri
                    readOnly: true
                    type: string
                name:
                    description:
                        The user's full name.
                    readOnly: true
                    type: string
                profileURL:
                    description:
                        A relative URL to the user's profile.
                    format: uri
                    readOnly: true
                    type: string
            type: object
        CustomField:
            # @review
            description:
                Represents the value of each custom field. Fields can contain different information types (e.g.,
                geolocation, strings, etc.).
            properties:
                customValue:
                    properties:
                        data:
                            description:
                                The field's content for simple types.
                            type: object
                        data_i18n:
                            additionalProperties:
                                type: string
                            type: object
                        geo:
                            description:
                                A point determined by latitude and longitude.
                            properties:
                                latitude:
                                    description:
                                        The latitude of a point in space.
                                    format: double
                                    type: number
                                longitude:
                                    description:
                                        The longitude of a point in space.
                                    format: double
                                    type: number
                            type: object
                    type: object
                dataType:
                    description:
                        The field type (e.g., image, text, etc.).
                    readOnly: true
                    type: string
                name:
                    description:
                        The field's internal name. This is valid for comparisons and unique in the structured content.
                    type: string
        EmailAddress:
            description:
                Represents an email address. Properties follow the [email](https://schema.org/email) specification.
            properties:
                emailAddress:
                    description:
                        The email address.
                    type: string
                id:
                    description:
                        The email address's ID.
                    format: int64
                    readOnly: true
                    type: integer
                # @review
                primary:
                    description:
                        A flag that indicates whether this is the main email address of the user/organization.
                    type: boolean
                type:
                    description:
                        The email address's type.
                    type: string
            type: object
        Organization:
            description:
                Represents an organization. Organizations can contain other organizations (suborganizations). Properties
                follow the [Organization](https://schema.org/Organization) specification.
            properties:
                actions:
                    additionalProperties:
                        additionalProperties:
                            type: string
                        type: object
                    readOnly: true
                    type: object
                childOrganizations:
                    items:
                        $ref: "#/components/schemas/Organization"
                    type: array
                comment:
                    description:
                        The text of a comment associated with the organization.
                    type: string
                customFields:
                    items:
                        $ref: "#/components/schemas/CustomField"
                    type: array
                dateCreated:
                    description:
                        The organization's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time any of the organization's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                externalReferenceCode:
                    # @review
                    description:
                        The optional external key of this organization.
                    type: string
                id:
                    description:
                        The organization's ID.
                    type: string
                image:
                    description:
                        A relative URL to the organization's image.
                    format: uri
                    readOnly: true
                    type: string
                keywords:
                    description:
                        A list of keywords describing the organization.
                    items:
                        type: string
                    readOnly: true
                    type: array
                location:
                    description:
                        The organization's postal information (country and region).
                    properties:
                        addressCountry:
                            description:
                                The organization's country. This follows the
                                [`addressCountry`](https://schema.org/addressCountry) specification.
                            type: string
                        addressCountry_i18n:
                            additionalProperties:
                                type: string
                            type: object
                        addressRegion:
                            description:
                                The organization's region. This follows the
                                [`addressRegion`](https://schema.org/addressRegion) specification.
                            type: string
                        id:
                            description:
                                The location's ID.
                            format: int64
                            readOnly: true
                            type: integer
                    type: object
                name:
                    description:
                        The organization's name.
                    type: string
                numberOfAccounts:
                    description:
                        The number of this organization's associated accounts.
                    readOnly: true
                    type: integer
                numberOfOrganizations:
                    description:
                        The number of this organization's child organizations.
                    readOnly: true
                    type: integer
                numberOfUsers:
                    description:
                        The number of this organization's associated users.
                    readOnly: true
                    type: integer
                organizationAccounts:
                    items:
                        $ref: "#/components/schemas/Account"
                    type: array
                organizationContactInformation:
                    description:
                        The organization's contact information, which includes email addresses, postal addresses, phone
                        numbers, and web URLs. This is modeled internally as a `Contact`.
                    properties:
                        emailAddresses:
                            description:
                                The organization's email addresses, with one optionally marked as primary.
                            items:
                                $ref: "#/components/schemas/EmailAddress"
                            type: array
                        postalAddresses:
                            description:
                                The organization's postal addresses, with one optionally marked as primary.
                            items:
                                $ref: "#/components/schemas/PostalAddress"
                            type: array
                        telephones:
                            description:
                                The organization's phones numbers, with one optionally marked as primary.
                            items:
                                $ref: "#/components/schemas/Phone"
                            type: array
                        webUrls:
                            description:
                                The organization's web URLs, with one optionally marked as primary.
                            items:
                                $ref: "#/components/schemas/WebUrl"
                            type: array
                    type: object
                parentOrganization:
                    allOf:
                        - $ref: "#/components/schemas/Organization"
                    description:
                        The organization's parent organization.
                services:
                    description:
                        A list of services the organization provides. This follows the
                        [`Service`](https://www.schema.org/Service) specification.
                    items:
                        properties:
                            hoursAvailable:
                                description:
                                    A list of hours when the organization is open. This follows the
                                    [`OpeningHoursSpecification`](https://www.schema.org/OpeningHoursSpecification)
                                    specification.
                                items:
                                    properties:
                                        closes:
                                            description:
                                                The organization's closing time (in `HH:MM` format).
                                            type: string
                                        dayOfWeek:
                                            description:
                                                The day of the week.
                                            type: string
                                        opens:
                                            description:
                                                The organization's opening time (in `HH:MM` format).
                                            type: string
                                    type: object
                                type: array
                            serviceType:
                                description:
                                    The type of service the organization provides.
                                type: string
                        type: object
                    type: array
                userAccounts:
                    items:
                        $ref: "#/components/schemas/UserAccount"
                    type: array
            type: object
        OrganizationBrief:
            description:
                Represents an organization's basic information, to be embedded in other resources. This resource's ID
                can be used to query the organization's complete information.
            properties:
                id:
                    description:
                        The organization's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description:
                        The organization's name.
                    readOnly: true
                    type: string
                roleBriefs:
                    description:
                        A list of the user's roles.
                    items:
                        $ref: "#/components/schemas/RoleBrief"
                    readOnly: true
                    type: array
            type: object
        Phone:
            description:
                Represents a phone number. This follows the [telephone](https://schema.org/telephone) specification.
            properties:
                extension:
                    description:
                        The phone number's extension.
                    type: string
                id:
                    description:
                        The phone number's ID.
                    format: int64
                    type: integer
                phoneNumber:
                    description:
                        The phone number without its extension.
                    type: string
                phoneType:
                    description:
                        The phone number's type.
                    type: string
                primary:
                    description:
                        A flag that identifies whether this is the main phone number of the user/organization.
                    type: boolean
            type: object
        PostalAddress:
            description:
                Represents a mailing address. This follows the [`PostalAddress`](https://www.schema.org/PostalAddress)
                specification.
            properties:
                addressCountry:
                    description:
                        The address's country (e.g., USA).
                    type: string
                addressCountry_i18n:
                    additionalProperties:
                        type: string
                    type: object
                addressLocality:
                    description:
                        The address's locality (e.g., city).
                    type: string
                addressRegion:
                    description:
                        The address's region (e.g., state).
                    type: string
                addressType:
                    description:
                        The address's type.
                    type: string
                id:
                    description:
                        The address's ID.
                    format: int64
                    type: integer
                postalCode:
                    description:
                        The address's postal code (e.g., zip code).
                    type: string
                primary:
                    description:
                        A flag that identifies whether this is the main address of the user/organization.
                    type: boolean
                streetAddressLine1:
                    description:
                        The street address's first line (e.g., 1600 Amphitheatre Pkwy.).
                    type: string
                streetAddressLine2:
                    description:
                        The street address's second line.
                    type: string
                streetAddressLine3:
                    description:
                        The street address's third line.
                    type: string
            type: object
        Role:
            description:
                Represents a relationship between a user and a company or site. This follows the
                [`Role`](https://www.schema.org/Role) specification.
            properties:
                actions:
                    additionalProperties:
                        additionalProperties:
                            type: string
                        type: object
                    # @review
                    description:
                        Block of actions that the user can perform with the roles.
                    readOnly: true
                    type: object
                availableLanguages:
                    description:
                        A list of languages for which the role has a translation.
                    items:
                        type: string
                    readOnly: true
                    type: array
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description:
                        The role's creator.
                    readOnly: true
                dateCreated:
                    description:
                        The role's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The last time any of the role's fields were changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description:
                        The role's description.
                    readOnly: true
                    type: string
                description_i18n:
                    additionalProperties:
                        type: string
                    readOnly: true
                    type: object
                id:
                    description:
                        The role's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description:
                        The role's name.
                    readOnly: true
                    type: string
                name_i18n:
                    additionalProperties:
                        type: string
                    readOnly: true
                    type: object
                roleType:
                    description:
                        The role's type.
                    readOnly: true
                    type: string
            type: object
        RoleBrief:
            description:
                Represents a role's basic information, to be embedded with other resources. The ID of this resource can
                be used to query the role's complete information.
            properties:
                id:
                    description:
                        The role's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description:
                        The role's name.
                    readOnly: true
                    type: string
                name_i18n:
                    additionalProperties:
                        type: string
                    readOnly: true
                    type: object
            type: object
        Segment:
            description:
                Represents a set of users that meet certain criteria. Segments may be used to create customized
                experiences for users.
            properties:
                active:
                    description:
                        A flag that indicates whether the segment is active.
                    readOnly: true
                    type: boolean
                criteria:
                    description:
                        The segment's criteria.
                    readOnly: true
                    type: string
                criteriaValue:
                    additionalProperties:
                        type: object
                    description:
                        The segment's criteria in JSON.
                    readOnly: true
                    type: object
                dateCreated:
                    description:
                        The segment's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The segment's most recent modification date.
                    format: date-time
                    readOnly: true
                    type: string
                id:
                    description:
                        The segment's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description:
                        The segment's name.
                    readOnly: true
                    type: string
                siteId:
                    description:
                        The ID of the segment's site.
                    format: int64
                    readOnly: true
                    type: integer
                source:
                    description:
                        The segment's source.
                    readOnly: true
                    type: string
            required:
                - criteria
                - name
            type: object
        SegmentUser:
            description:
                Represents a user who belongs to a segment.
            properties:
                emailAddress:
                    description:
                        The user's email address.
                    readOnly: true
                    type: string
                id:
                    description:
                        The user's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description:
                        The user's full name.
                    readOnly: true
                    type: string
            type: object
        Site:
            # @review
            description:
                Represents the site where the content is created. Properties follow the
                [WebSite](https://schema.org/WebSite) specification.
            properties:
                availableLanguages:
                    items:
                        type: string
                    type: array
                creator:
                    $ref: "#/components/schemas/Creator"
                description:
                    type: string
                description_i18n:
                    additionalProperties:
                        type: string
                    type: object
                friendlyUrlPath:
                    type: string
                id:
                    format: int64
                    type: integer
                key:
                    type: string
                membershipType:
                    type: string
                name:
                    type: string
                name_i18n:
                    additionalProperties:
                        type: string
                    type: object
                parentSiteId:
                    format: int64
                    type: integer
                sites:
                    items:
                        $ref: "#/components/schemas/Site"
                    type: array
            type: object
        SiteBrief:
            description:
                Represents a site's basic information.
            properties:
                id:
                    description:
                        The site's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description:
                        The site's name.
                    readOnly: true
                    type: string
                name_i18n:
                    additionalProperties:
                        type: string
                    readOnly: true
                    type: object
            type: object
        Subscription:
            properties:
                contentId:
                    type: object
                contentType:
                    type: string
                dateCreated:
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    format: date-time
                    readOnly: true
                    type: string
                frequency:
                    type: string
                id:
                    format: int64
                    readOnly: true
                    type: integer
                siteId:
                    format: int64
                    type: integer
        UserAccount:
            description:
                Represents a user.
            properties:
                accountBriefs:
                    description:
                        A list of the user's account.
                    items:
                        $ref: "#/components/schemas/AccountBrief"
                    readOnly: true
                    type: array
                actions:
                    additionalProperties:
                        additionalProperties:
                            type: string
                        type: object
                    readOnly: true
                    type: object
                additionalName:
                    description:
                        The user's additional name (e.g., middle name).
                    type: string
                alternateName:
                    description:
                        The user's alias or screen name.
                    type: string
                birthDate:
                    description:
                        The user's date of birth, in ISO 8601 format.
                    format: date-time
                    type: string
                customFields:
                    items:
                        $ref: "#/components/schemas/CustomField"
                    type: array
                dashboardURL:
                    description:
                        A relative URL to the user's dashboard.
                    readOnly: true
                    type: string
                dateCreated:
                    description:
                        The creation date of the user's account.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The last time any field of the user's account was changed.
                    format: date-time
                    readOnly: true
                    type: string
                emailAddress:
                    description:
                        The user's main email address.
                    type: string
                externalReferenceCode:
                    # @review
                    description:
                        The optional external key of this user account.
                    readOnly: true
                    type: string
                familyName:
                    description:
                        The user's surname (last name).
                    type: string
                givenName:
                    description:
                        The user's first name.
                    type: string
                honorificPrefix:
                    description:
                        The user's title (e.g., Dr., Mr., Mrs, Ms., etc.).
                    type: string
                honorificSuffix:
                    description:
                        The user's suffix (e.g., II, Jr., PhD, etc.).
                    type: string
                id:
                    description:
                        The user's ID.
                    format: int64
                    readOnly: true
                    type: integer
                image:
                    description:
                        A relative URL to the user's profile image.
                    format: uri
                    readOnly: true
                    type: string
                jobTitle:
                    description:
                        The user's job title.
                    type: string
                keywords:
                    description:
                        A list of keywords describing the user.
                    items:
                        type: string
                    readOnly: true
                    type: array
                lastLoginDate:
                    description:
                        The last time the user logged in.
                    format: date-time
                    readOnly: true
                    type: string
                name:
                    description:
                        The user's full name.
                    readOnly: true
                    type: string
                organizationBriefs:
                    description:
                        A list of the user's organizations.
                    items:
                        $ref: "#/components/schemas/OrganizationBrief"
                    readOnly: true
                    type: array
                password:
                    description:
                        The user's password.
                    type: string
                    writeOnly: true
                profileURL:
                    description:
                        A relative URL to the user's profile.
                    readOnly: true
                    type: string
                roleBriefs:
                    description:
                        A list of the user's roles.
                    items:
                        $ref: "#/components/schemas/RoleBrief"
                    readOnly: true
                    type: array
                siteBriefs:
                    description:
                        A list of the user's sites.
                    items:
                        $ref: "#/components/schemas/SiteBrief"
                    readOnly: true
                    type: array
                userAccountContactInformation:
                    description:
                        The user's contact information.
                    properties:
                        emailAddresses:
                            description:
                                A list of the user's email addresses, with one optionally marked as primary.
                            items:
                                $ref: "#/components/schemas/EmailAddress"
                            type: array
                        facebook:
                            description:
                                The user's Facebook account.
                            type: string
                        id:
                            description:
                                The ID of the `contactInformation`.
                            format: int64
                            readOnly: true
                            type: integer
                        jabber:
                            description:
                                The user's Jabber handle.
                            type: string
                        postalAddresses:
                            description:
                                A list of user's postal addresses, with one optionally marked as primary.
                            items:
                                $ref: "#/components/schemas/PostalAddress"
                            type: array
                        skype:
                            description:
                                The user's Skype handle.
                            type: string
                        sms:
                            description:
                                The user's SMS number.
                            type: string
                        telephones:
                            description:
                                A list of the user's phone numbers, with one optionally marked as primary.
                            items:
                                $ref: "#/components/schemas/Phone"
                            type: array
                        twitter:
                            description:
                                The user's Twitter handle.
                            type: string
                        webUrls:
                            description:
                                A list of the user's web URLs, with one optionally marked as primary.
                            items:
                                $ref: "#/components/schemas/WebUrl"
                            type: array
                    type: object
            type: object
        UserGroup:
            properties:
                actions:
                    additionalProperties:
                        additionalProperties:
                            type: string
                        type: object
                    readOnly: true
                    type: object
                description:
                    type: string
                externalReferenceCode:
                    type: string
                id:
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    type: string
                usersCount:
                    format: int32
                    readOnly: true
                    type: integer
            required:
                - name
            type: object
        WebUrl:
            description:
                Represents a URL to an external site. This is modeled internally as a `WebSite`.
            properties:
                id:
                    description:
                        The URL's ID.
                    format: int64
                    type: integer
                primary:
                    description:
                        A flag that identifies whether this is the main web address of the user/organization.
                    type: boolean
                url:
                    description:
                        The absolute URL.
                    type: string
                urlType:
                    description:
                        The URL's type.
                    type: string
            type: object
info:
    description:
        "A Java client JAR is available for use with the group ID 'com.liferay', artifact ID
        'com.liferay.headless.admin.user.client', and version '4.0.26'."
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Headless Admin User"
    version: v1.0
openapi: 3.0.1
paths:
    "/accounts":
        get:
            # @review
            description:
                Retrieves the accounts. Results can be paginated, filtered, searched, and sorted.
            operationId: getAccountsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
            tags: ["Account"]
        post:
            description:
                Creates a new account
            operationId: postAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
            responses:
                201:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    # @review
                    description:
                        "Account successfully created"
            tags: ["Account"]
    "/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-external-reference-code/{userAccountExternalReferenceCode}":
        delete:
            # @review
            description:
                Unassigns account users by external reference code from the account role
            operationId: deleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: accountExternalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountRoleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountExternalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["AccountRole"]
        post:
            # @review
            description:
                Assigns account users by external reference code to the account role
            operationId: postAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: accountExternalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountRoleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountExternalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["AccountRole"]
    "/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{userAccountExternalReferenceCode}":
        delete:
            # @review
            description:
                Removes a user by their external reference code from an account by external reference code
            operationId: deleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: accountExternalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: userAccountExternalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
        post:
            # @review
            description:
                Assigns a user by their external reference code to an account by external reference code
            operationId: postAccountByExternalReferenceCodeUserAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: accountExternalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: userAccountExternalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
    "/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{userAccountExternalReferenceCode}/account-roles":
        get:
            # @review
            description:
                Gets a user's account roles by their external reference code from an account by external reference code
            operationId: getAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPage
            parameters:
                - in: path
                  name: accountExternalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: userAccountExternalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AccountRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AccountRole"
                                type: array
            tags: ["AccountRole"]
    "/accounts/by-external-reference-code/{externalReferenceCode}":
        delete:
            # @review
            description:
                Deletes an account.
            operationId: deleteAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Account"]
        get:
            operationId: getAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
            tags: ["Account"]
        patch:
            # @review
            description:
                Updates the account with information sent in the request body. Only the provided fields are updated.
            operationId: patchAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    # @review
                    description:
                        "Account successfully updated"
            tags: ["Account"]
        put:
            # @review
            description:
                Replaces the account with information sent in the request body. Any missing fields are deleted unless
                they are required.
            operationId: putAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    # @review
                    description:
                        "Account successfully replaced"
            tags: ["Account"]
    "/accounts/by-external-reference-code/{externalReferenceCode}/account-roles":
        get:
            # @review
            description:
                Gets the account's roles
            operationId: getAccountAccountRolesByExternalReferenceCodePage
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AccountRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AccountRole"
                                type: array
                    # @review
            tags: ["AccountRole"]
        post:
            # @review
            description:
                Adds a role for the account
            operationId: postAccountAccountRoleByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AccountRole"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/AccountRole"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AccountRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/AccountRole"
                    # @review
            tags: ["AccountRole"]
    "/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-email-address/{emailAddress}":
        delete:
            # @review
            description:
                Unassigns account users by email address from the account role
            operationId: deleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountRoleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["AccountRole"]
        post:
            # @review
            description:
                Assigns account users by email address to the account role
            operationId: postAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountRoleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["AccountRole"]
    "/accounts/by-external-reference-code/{externalReferenceCode}/organizations":
        get:
            description:
                Retrieves the account's organizations. Results can be paginated, filtered, searched, and sorted.
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
            tags: ["Organization"]
    "/accounts/by-external-reference-code/{externalReferenceCode}/organizations/{organizationId}":
        delete:
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Organization"]
        post:
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Organization"]
    "/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts":
        get:
            # @review
            description:
                Gets the users assigned to an account
            operationId: getAccountUserAccountsByExternalReferenceCodePage
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
            tags: ["UserAccount"]
        post:
            # @review
            description:
                Creates a user and assigns them to the account
            operationId: postAccountUserAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["UserAccount"]
    "/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address":
        delete:
            # @review
            description:
                Removes users from an account by their email addresses
            operationId: deleteAccountUserAccountsByExternalReferenceCodeByEmailAddress
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                # @review
                description:
                    A list of user email addresses to remove from the account
                required: true
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
        post:
            # @review
            description:
                Assigns users to an account by their email addresses
            operationId: postAccountUserAccountsByExternalReferenceCodeByEmailAddress
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                # @review
                description:
                    A list of user email addresses to assign to the account
                required: true
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
    "/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}":
        delete:
            # @review
            description:
                Removes a user from an account by external reference code by their email address
            operationId: deleteAccountUserAccountByExternalReferenceCodeByEmailAddress
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
        post:
            # @review
            description:
                Assigns a user to an account by external reference code by their email address
            operationId: postAccountUserAccountByExternalReferenceCodeByEmailAddress
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
    "/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}/account-roles":
        get:
            # @review
            description:
                Gets a user's account roles by their email address from an account by external reference code
            operationId: getAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPage
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AccountRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AccountRole"
                                type: array
            tags: ["AccountRole"]
    "/accounts/{accountId}":
        delete:
            # @review
            description:
                Deletes an account.
            operationId: deleteAccount
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Account"]
        get:
            operationId: getAccount
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
            tags: ["Account"]
        patch:
            # @review
            description:
                Updates the account with information sent in the request body. Only the provided fields are updated.
            operationId: patchAccount
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    # @review
                    description:
                        "Account successfully updated"
            tags: ["Account"]
        put:
            # @review
            description:
                Replaces the account with information sent in the request body. Any missing fields are deleted unless
                they are required.
            operationId: putAccount
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    # @review
                    description:
                        "Account successfully replaced"
            tags: ["Account"]
    "/accounts/{accountId}/account-roles":
        get:
            # @review
            description:
                Gets the account's roles
            operationId: getAccountAccountRolesPage
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AccountRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AccountRole"
                                type: array
                    # @review
            tags: ["AccountRole"]
        post:
            # @review
            description:
                Adds a role for the account
            operationId: postAccountAccountRole
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AccountRole"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/AccountRole"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AccountRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/AccountRole"
                    # @review
            tags: ["AccountRole"]
    "/accounts/{accountId}/account-roles/{accountRoleId}/user-accounts/{userAccountId}":
        delete:
            # @review
            description:
                Unassigns account users to the account role
            operationId: deleteAccountAccountRoleUserAccountAssociation
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: accountRoleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["AccountRole"]
        post:
            # @review
            description:
                Assigns account users to the account role
            operationId: postAccountAccountRoleUserAccountAssociation
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: accountRoleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["AccountRole"]
    "/accounts/{accountId}/organizations":
        get:
            description:
                Retrieves the account's organizations. Results can be paginated, filtered, searched, and sorted.
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
            tags: ["Organization"]
    "/accounts/{accountId}/organizations/{organizationId}":
        delete:
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Organization"]
        post:
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Organization"]
    "/accounts/{accountId}/user-accounts":
        get:
            # @review
            description:
                Gets the users assigned to an account
            operationId: getAccountUserAccountsPage
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
            tags: ["UserAccount"]
        post:
            # @review
            description:
                Creates a user and assigns them to the account
            operationId: postAccountUserAccount
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["UserAccount"]
    "/accounts/{accountId}/user-accounts/by-email-address":
        delete:
            # @review
            description:
                Removes users from an account by their email addresses
            operationId: deleteAccountUserAccountsByEmailAddress
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                # @review
                description:
                    A list of user email addresses to remove from the account
                required: true
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
        post:
            # @review
            description:
                Assigns users to an account by their email addresses
            operationId: postAccountUserAccountsByEmailAddress
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: accountRoleIds
                  required: false
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                # @review
                description:
                    A list of user email addresses to assign to the account
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
            tags: ["UserAccount"]
    "/accounts/{accountId}/user-accounts/by-email-address/{emailAddress}":
        delete:
            # @review
            description:
                Removes a user from an account by their email address
            operationId: deleteAccountUserAccountByEmailAddress
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
        post:
            # @review
            description:
                Assigns a user to an account by their email address
            operationId: postAccountUserAccountByEmailAddress
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["UserAccount"]
    "/email-addresses/{emailAddressId}":
        get:
            description:
                Retrieves the email address.
            operationId: getEmailAddress
            parameters:
                - in: path
                  name: emailAddressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/EmailAddress"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/EmailAddress"
            tags: ["EmailAddress"]
    "/my-user-account":
        get:
            description:
                Retrieves information about the user who made the request.
            operationId: getMyUserAccount
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["UserAccount"]
    "/my-user-account/sites":
        get:
            operationId: getMyUserAccountSitesPage
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Site"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Site"
                                type: array
            tags: ["Site"]
    "/my-user-account/subscriptions":
        get:
            operationId: getMyUserAccountSubscriptionsPage
            parameters:
                - in: query
                  name: contentType
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Subscription"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Subscription"
                                type: array
            tags: ["Subscription"]
    "/my-user-account/subscriptions/{subscriptionId}":
        delete:
            operationId: deleteMyUserAccountSubscription
            parameters:
                - in: path
                  name: subscriptionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Subscription"]
        get:
            operationId: getMyUserAccountSubscription
            parameters:
                - in: path
                  name: subscriptionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Subscription"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Subscription"
            tags: ["Subscription"]
    "/organizations":
        get:
            description:
                Retrieves the organizations. Results can be paginated, filtered, searched, and sorted.
            operationId: getOrganizationsPage
            parameters:
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
            tags: ["Organization"]
        post:
            description:
                Creates a new organization
            operationId: postOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Organization"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Organization"
            responses:
                201:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Organization"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Organization"
                    description:
                        "Organizations successfully created"
            tags: ["Organization"]
    "/organizations/by-external-reference-code/{externalReferenceCode}":
        delete:
            # @review
            description:
                Deletes an organization.
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Organization"]
        get:
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Organization"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Organization"
            tags: ["Organization"]
        patch:
            # @review
            description:
                Updates the organization with information sent in the request body. Only the provided fields are
                updated.
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Organization"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Organization"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Organization"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Organization"
                    # @review
                    description:
                        "Organization successfully updated"
            tags: ["Organization"]
        put:
            # @review
            description:
                Replaces the organization with information sent in the request body. Any missing fields are deleted
                unless they are required.
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Organization"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Organization"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Organization"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Organization"
                    # @review
                    description:
                        "Organization successfully replaced"
            tags: ["Organization"]
    "/organizations/move-accounts/{sourceOrganizationId}/{targetOrganizationId}":
        patch:
            operationId: patchOrganizationMoveAccounts
            parameters:
                - in: path
                  name: sourceOrganizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: targetOrganizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
                # @review
                description:
                    An array of accountIds to move from the source organization to the target organization
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Account"]
    "/organizations/move-accounts/{sourceOrganizationId}/{targetOrganizationId}/by-external-reference-code":
        patch:
            operationId: patchOrganizationMoveAccountsByExternalReferenceCode
            parameters:
                - in: path
                  name: sourceOrganizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: targetOrganizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                type: string
                            type: array
                # @review
                description:
                    An array of account external reference codes to move from the source organization to the target
                    organization
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Account"]
    "/organizations/{organizationId}":
        delete:
            # @review
            description:
                Deletes an organization.
            operationId: deleteOrganization
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Organization"]
        get:
            description:
                Retrieves the organization.
            operationId: getOrganization
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Organization"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Organization"
            tags: ["Organization"]
        patch:
            # @review
            description:
                Updates the organization with the information sent in the request body. Fields not present in the
                request body are left unchanged.
            operationId: patchOrganization
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Organization"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Organization"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Organization"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Organization"
                    # @review
                    description:
                        "Organization successfully updated"
            tags: ["Organization"]
        put:
            # @review
            description:
                Replaces the organization with information sent in the request body. Any missing fields are deleted
                unless they are required.
            operationId: putOrganization
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Organization"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Organization"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Organization"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Organization"
                    description:
                        "Organization successfully replaced"
            tags: ["Organization"]
    "/organizations/{organizationId}/accounts":
        delete:
            operationId: deleteOrganizationAccounts
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
                # @review
                description:
                    An array of accountIds to remove from an organization
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Account"]
        get:
            description:
                Retrieves the organization's members (accounts). Results can be paginated, filtered, searched, and
                sorted.
            operationId: getOrganizationAccountsPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
            tags: ["Account"]
        post:
            operationId: postOrganizationAccounts
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
                # @review
                description:
                    An array of accountIds to add to an organization
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Account"]
    "/organizations/{organizationId}/accounts/by-external-reference-code":
        delete:
            operationId: deleteOrganizationAccountsByExternalReferenceCode
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                type: string
                            type: array
                # @review
                description:
                    An array of account external reference codes to remove from an organization
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Account"]
        post:
            operationId: postOrganizationAccountsByExternalReferenceCode
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                type: string
                            type: array
                # @review
                description:
                    An array of account external reference codes to add to an organization
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Account"]
    "/organizations/{organizationId}/child-organizations":
        get:
            description:
                Retrieves the parent organization's child organizations. Results can be paginated, filtered, searched,
                and sorted.
            operationId: getOrganizationChildOrganizationsPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
            tags: ["Organization"]
    "/organizations/{organizationId}/email-addresses":
        get:
            description:
                Retrieves the organization's email addresses.
            operationId: getOrganizationEmailAddressesPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/EmailAddress"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/EmailAddress"
                                type: array
            tags: ["EmailAddress"]
    "/organizations/{organizationId}/phones":
        get:
            description:
                Retrieves the organization's phone numbers.
            operationId: getOrganizationPhonesPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Phone"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Phone"
                                type: array
            tags: ["Phone"]
    "/organizations/{organizationId}/postal-addresses":
        get:
            description:
                Retrieves the organization's postal addresses.
            operationId: getOrganizationPostalAddressesPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/PostalAddress"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/PostalAddress"
                                type: array
            tags: ["PostalAddress"]
    "/organizations/{organizationId}/user-accounts":
        get:
            description:
                Retrieves the organization's members (users). Results can be paginated, filtered, searched, and sorted.
            operationId: getOrganizationUserAccountsPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
            tags: ["UserAccount"]
    "/organizations/{organizationId}/user-accounts/by-email-address":
        delete:
            # @review
            description:
                Removes users from an organization by their email addresses
            operationId: deleteUserAccountsByEmailAddress
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                # @review
                description:
                    A list of user email addresses to remove from the organization
                required: true
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Organization"]
        post:
            # @review
            description:
                Assigns users to an organization by their email addresses
            operationId: postUserAccountsByEmailAddress
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: organizationRoleIds
                  required: false
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: email
                                type: string
                            type: array
                # @review
                description:
                    A list of user email addresses to assign to the organization
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
            tags: ["Organization"]
    "/organizations/{organizationId}/user-accounts/by-email-address/{emailAddress}":
        delete:
            # @review
            description:
                Removes a user from an organization by their email address
            operationId: deleteUserAccountByEmailAddress
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Organization"]
        post:
            # @review
            description:
                Assigns a user to an organization by their email address
            operationId: postUserAccountByEmailAddress
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["Organization"]
    "/organizations/{organizationId}/web-urls":
        get:
            description:
                Retrieves the organization's URLs.
            operationId: getOrganizationWebUrlsPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/WebUrl"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/WebUrl"
                                type: array
            tags: ["WebUrl"]
    "/organizations/{parentOrganizationId}/organizations":
        get:
            description:
                Retrieves the parent organization's child organizations. Results can be paginated, filtered, searched,
                and sorted.
            operationId: getOrganizationOrganizationsPage
            parameters:
                - in: path
                  name: parentOrganizationId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
            tags: ["Organization"]
    "/phones/{phoneId}":
        get:
            description:
                Retrieves the phone number.
            operationId: getPhone
            parameters:
                - in: path
                  name: phoneId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Phone"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Phone"
            tags: ["Phone"]
    "/postal-addresses/{postalAddressId}":
        get:
            description:
                Retrieves the postal address.
            operationId: getPostalAddress
            parameters:
                - in: path
                  name: postalAddressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
            tags: ["PostalAddress"]
    "/roles":
        get:
            description:
                Retrieves the portal instance's roles. Results can be paginated.
            operationId: getRolesPage
            parameters:
                - in: query
                  name: types
                  schema:
                      items:
                          type: integer
                      type: array
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Role"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Role"
                                type: array
            tags: ["Role"]
    "/roles/{roleId}":
        get:
            description:
                Retrieves the role.
            operationId: getRole
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Role"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Role"
            tags: ["Role"]
    "/roles/{roleId}/association/user-account/{userAccountId}":
        delete:
            # @review
            description:
                Unassociates a role with a user account
            operationId: deleteRoleUserAccountAssociation
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Role"]
        post:
            # @review
            description:
                Associates a role with a user account
            operationId: postRoleUserAccountAssociation
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Role"]
    "/roles/{roleId}/association/user-account/{userAccountId}/organization/{organizationId}":
        delete:
            # @review
            description:
                Unassociates an organization role with a user account
            operationId: deleteOrganizationRoleUserAccountAssociation
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Role"]
        post:
            # @review
            description:
                Associates a organization role with a user account
            operationId: postOrganizationRoleUserAccountAssociation
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Role"]
    "/roles/{roleId}/association/user-account/{userAccountId}/site/{siteId}":
        delete:
            # @review
            description:
                Unassociates a site role with a user account
            operationId: deleteSiteRoleUserAccountAssociation
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Role"]
        post:
            # @review
            description:
                Associates a site role with a user account
            operationId: postSiteRoleUserAccountAssociation
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["Role"]
    "/segments/{segmentId}/user-accounts":
        get:
            description:
                Gets a segment's users.
            operationId: getSegmentUserAccountsPage
            parameters:
                - in: path
                  name: segmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/SegmentUser"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/SegmentUser"
                                type: array
            tags: ["SegmentUser"]
    "/sites/by-friendly-url-path/{friendlyUrlPath}":
        get:
            operationId: getSiteByFriendlyUrlPath
            parameters:
                - in: path
                  name: friendlyUrlPath
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Site"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Site"
            tags: ["Site"]
    "/sites/{siteId}":
        get:
            operationId: getSite
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Site"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Site"
            tags: ["Site"]
    "/sites/{siteId}/segments":
        get:
            description:
                Gets a site's segments.
            operationId: getSiteSegmentsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Segment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Segment"
                                type: array
            tags: ["Segment"]
    "/sites/{siteId}/user-accounts":
        get:
            description:
                Retrieves the site members' user accounts. Results can be paginated, filtered, searched, and sorted.
            operationId: getSiteUserAccountsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
            tags: ["UserAccount"]
    "/sites/{siteId}/user-accounts/{userAccountId}/segments":
        get:
            # @review
            description:
                "Gets a user's segments. The set of available headers are: Accept-Language (string), Host (string),
                User-Agent (string), X-Browser (string), X-Cookies (collection string), X-Device-Brand (string),
                X-Device-Model (string), X-Device-Screen-Resolution-Height (double), X-Device-Screen-Resolution-Width
                (double), X-Last-Sign-In-Date-Time (date time) and X-Signed-In (boolean). Local date will be always
                present in the request."
            operationId: getSiteUserAccountSegmentsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Segment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Segment"
                                type: array
            tags: ["Segment"]
    "/user-accounts":
        get:
            description:
                Retrieves the user accounts. Results can be paginated, filtered, searched, and sorted.
            operationId: getUserAccountsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
            tags: ["UserAccount"]
        post:
            description:
                Creates a new user account
            operationId: postUserAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
            responses:
                201:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["UserAccount"]
    "/user-accounts/by-external-reference-code/{externalReferenceCode}":
        delete:
            operationId: deleteUserAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
        get:
            operationId: getUserAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["UserAccount"]
        put:
            operationId: putUserAccountByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["UserAccount"]
    "/user-accounts/{userAccountId}":
        delete:
            # @review
            description:
                Deletes the user account
            operationId: deleteUserAccount
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserAccount"]
        get:
            description:
                Retrieves the user account.
            operationId: getUserAccount
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
            tags: ["UserAccount"]
        patch:
            # @review
            description:
                Updates the user account with information sent in the request body. Only the provided fields are
                updated.
            operationId: patchUserAccount
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                    description:
                        "UserAccount successfully updated"
            tags: ["UserAccount"]
        put:
            # @review
            description:
                Replaces the user account with information sent in the request body. Any missing fields are deleted
                unless they are required.
            operationId: putUserAccount
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                    description:
                        "UserAccount successfully updated"
            tags: ["UserAccount"]
    "/user-accounts/{userAccountId}/email-addresses":
        get:
            description:
                Retrieves the user's email addresses.
            operationId: getUserAccountEmailAddressesPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/EmailAddress"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/EmailAddress"
                                type: array
            tags: ["EmailAddress"]
    "/user-accounts/{userAccountId}/phones":
        get:
            description:
                Retrieves the user's phone numbers.
            operationId: getUserAccountPhonesPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Phone"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Phone"
                                type: array
            tags: ["Phone"]
    "/user-accounts/{userAccountId}/postal-addresses":
        get:
            description:
                Retrieves the user's postal addresses.
            operationId: getUserAccountPostalAddressesPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/PostalAddress"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/PostalAddress"
                                type: array
            tags: ["PostalAddress"]
    "/user-accounts/{userAccountId}/web-urls":
        get:
            description:
                Retrieves the user's URLs.
            operationId: getUserAccountWebUrlsPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/WebUrl"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/WebUrl"
                                type: array
            tags: ["WebUrl"]
    "/user-groups":
        get:
            operationId: getUserGroupsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserGroup"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserGroup"
                                type: array
            tags: ["UserGroup"]
        post:
            operationId: postUserGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
            responses:
                201:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
            tags: ["UserGroup"]
    "/user-groups/by-external-reference-code/{externalReferenceCode}":
        delete:
            operationId: deleteUserGroupByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserGroup"]
        get:
            operationId: getUserGroupByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
            tags: ["UserGroup"]
        patch:
            operationId: patchUserGroupByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
            tags: ["UserGroup"]
        put:
            operationId: putUserGroupByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
            tags: ["UserGroup"]
    "/user-groups/{userGroupId}":
        delete:
            operationId: deleteUserGroup
            parameters:
                - in: path
                  name: userGroupId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserGroup"]
        get:
            operationId: getUserGroup
            parameters:
                - in: path
                  name: userGroupId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
            tags: ["UserGroup"]
        patch:
            operationId: patchUserGroup
            parameters:
                - in: path
                  name: userGroupId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
            tags: ["UserGroup"]
        put:
            operationId: putUserGroup
            parameters:
                - in: path
                  name: userGroupId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/UserGroup"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/UserGroup"
            tags: ["UserGroup"]
    "/user-groups/{userGroupId}/user-group-users":
        delete:
            operationId: deleteUserGroupUsers
            parameters:
                - in: path
                  name: userGroupId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserGroup"]
        post:
            operationId: postUserGroupUsers
            parameters:
                - in: path
                  name: userGroupId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
                    application/xml:
                        schema:
                            items:
                                format: int64
                                type: integer
                            type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["UserGroup"]
    "/web-urls/{webUrlId}":
        get:
            description:
                Retrieves the web URL.
            operationId: getWebUrl
            parameters:
                - in: path
                  name: webUrlId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WebUrl"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/WebUrl"
            tags: ["WebUrl"]