@component-name = "portal-object"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ObjectAdmin.deleteAllCustomObjectsViaAPI();
		}
	}

	@description = "LPS-148544 - Verify it's possible to create a template with an object as an item type"
	@priority = "5"
	test CanCreateTemplateWithObject {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149237",
			objectName = "CustomObject149237",
			pluralLabelName = "Custom Objects 149237");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject149237");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149237");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149237");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Custom Field",
			panelTitle = "Custom Object 149237");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");
	}

	@description = "LPS-148544 - Verify it's possible to map a boolean field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewBooleanField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149241",
			objectName = "CustomObject149241",
			pluralLabelName = "Custom Objects 149241");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "Boolean",
			isRequired = "false",
			objectName = "CustomObject149241");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149241");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149241");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject149241",
			value = "149241");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149241");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Custom Field",
			panelTitle = "Custom Object 149241");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149241");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Test Information Template");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "149241");
	}

	@description = "LPS-148544 - Verify it's possible to map a Date field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewDateField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149245",
			objectName = "CustomObject149245",
			pluralLabelName = "Custom Objects 149245");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Date",
			fieldLabelName = "Date",
			fieldName = "customObjectField",
			fieldType = "Date",
			isRequired = "false",
			objectName = "CustomObject149245");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149245");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149245");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject149245",
			value = "2021-01-01");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149245");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Date",
			panelTitle = "Custom Object 149245");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149245");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Date");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "1/1/21");
	}

	@description = "LPS-148544 - Verify it's possible to map a Decimal field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewDecimalField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149246",
			objectName = "CustomObject149246",
			pluralLabelName = "Custom Objects 149246");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Decimal",
			fieldLabelName = "Decimal",
			fieldName = "customObjectField",
			fieldType = "Double",
			isRequired = "false",
			objectName = "CustomObject149246");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149246");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149246");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject149246",
			value = "149246");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149246");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Decimal",
			panelTitle = "Custom Object 149246");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149246");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Decimal");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "149246.0");
	}

	@description = "LPS-148544 - Verify it's possible to map an integer field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewIntegerField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149242",
			objectName = "CustomObject149242",
			pluralLabelName = "Custom Objects 149242");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Integer",
			fieldLabelName = "Integer",
			fieldName = "customObjectField",
			fieldType = "Integer",
			isRequired = "false",
			objectName = "CustomObject149242");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149242");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149242");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject149242",
			value = "149242");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149242");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Integer",
			panelTitle = "Custom Object 149242");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149242");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Test Information Template");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "149242");
	}

	@description = "LPS-148544 - Verify it's possible to map a Long text field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewLongField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149244",
			objectName = "CustomObject149244",
			pluralLabelName = "Custom Objects 149244");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "LongText",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "Clob",
			isRequired = "false",
			objectName = "CustomObject149244");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149244");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149244");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject149244",
			value = "By building a vibrant business, making technology useful, and investing in communities, we make it possible for people to reach their full potential to serve others.");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149244");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Custom Field",
			panelTitle = "Custom Object 149244");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149244");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Custom Field");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "By building a vibrant business, making technology useful, and investing in communities, we make it possible for people to reach their full potential to serve others.");
	}

	@description = "LPS-148544 - Verify it's possible to map a picklist field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewPicklistField {
		Picklist.addPicklistViaAPI(picklistName = "Custom Picklist");

		Picklist.addPicklistItemViaAPI(
			itemKey = "0",
			itemName = "Item Test",
			picklistName = "Custom Picklist");

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149243",
			objectName = "CustomObject149243",
			pluralLabelName = "Custom Objects 149243");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149243");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		ObjectAdmin.goToFieldsTab();

		ObjectAdmin.addObjectFieldViaUI(
			fieldLabel = "Field Picklist",
			fieldPicklist = "Custom Picklist",
			fieldType = "Picklist");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149243");

		Navigator.openURL();

		ObjectAdmin.goToCustomObject(objectName = "CustomObject149243");

		ObjectAdmin.addObjectPicklistFieldEntryViaUI(picklistOption = "Item Test");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149243");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Field Picklist",
			panelTitle = "Custom Object 149243");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149243");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Field Picklist");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "Item Test");
	}

	@description = "LPS-148544 - Verify it's possible to map a text field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewTextField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149240",
			objectName = "CustomObject149240",
			pluralLabelName = "Custom Objects 149240");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject149240");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149240");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149240");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject149240",
			value = "Custom Entry A");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149240");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Custom Field",
			panelTitle = "Custom Object 149240");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149240");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Test Information Template");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "Custom Entry A");
	}

}