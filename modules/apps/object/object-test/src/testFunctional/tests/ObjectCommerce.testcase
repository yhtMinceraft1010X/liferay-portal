@component-name = "portal-object"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ObjectAdmin.deleteAllCustomObjectsViaAPI();
		}
	}

	@description = "LPS-136741 - Verify that Commerce notification works for creating an entry"
	@ignore = "Test Stub"
	@priority = "4"
	test CreateEntryNotification {

		// TODO LPS-145736 CreateEntryNotification pending implementation

	}

	@description = "LPS-136741 - Verify that Commerce notification works for deleting an entry"
	@ignore = "Test Stub"
	@priority = "4"
	test DeleteEntryNotification {

		// TODO LPS-145738 DeleteEntryNotification pending implementation

	}

	@description = "LPS-136741 - Verify that Object scoped by Company is not displayed on the Commerce notification type for Site type Channel"
	@priority = "4"
	test ObjectScopedCompanyNotDisplayedSiteChannel {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 145735",
			objectName = "CustomObject145735",
			pluralLabelName = "Custom Objects 145735");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject145735");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject145735");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewChannelsEntry(
			channelCurrency = "US Dollar",
			channelName = "Test Channel",
			channelType = "Site");

		Refresh();

		ObjectCommerce.channelsTab(navigatorChannels = "Notification Templates");

		LexiconEntry.gotoAdd();

		for (var optionTypeList : list "Create,Delete,Update") {
			ObjectCommerce.viewNotPresentOptionType(optionType = "${optionTypeList}");
		}
	}

	@description = "LPS-136741 - Verify that Commerce notification works for updating an entry"
	@ignore = "Test Stub"
	@priority = "4"
	test UpdateEntryNotification {

		// TODO LPS-145737 UpdateEntryNotification pending implementation

	}

}