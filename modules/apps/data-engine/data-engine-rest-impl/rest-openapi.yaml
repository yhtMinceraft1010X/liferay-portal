components:
    schemas:
        DataDefinition:
            description:
                https://www.schema.org/DataDefinition
            properties:
                availableLanguageIds:
                    items:
                        type: string
                    type: array
                contentType:
                    type: string
                dataDefinitionFields:
                    items:
                        $ref: "#/components/schemas/DataDefinitionField"
                    type: array
                dataDefinitionKey:
                    type: string
                dataRules:
                    items:
                        $ref: "#/components/schemas/DataRule"
                    type:
                        array
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                defaultDataLayout:
                    allOf:
                        - $ref: "#/components/schemas/DataLayout"
                defaultLanguageId:
                    type: string
                description:
                    additionalProperties:
                        type: object
                    type: object
                id:
                    format: int64
                    type: integer
                name:
                    additionalProperties:
                        type: object
                    type: object
                siteId:
                    format: int64
                    type: integer
                storageType:
                    type: string
                userId:
                    format: int64
                    type: integer
            type: object
        DataDefinitionField:
            # @review
            description:
                Represents the value of each field in data definition.
            properties:
                customProperties:
                    additionalProperties:
                        type: object
                    type: object
                defaultValue:
                    additionalProperties:
                        type: object
                    type: object
                fieldType:
                    type: string
                id:
                    format: int64
                    type: integer
                indexType:
                    default: "all"
                    enum: [all, keyword, none, text]
                    type: string
                indexable:
                    type: boolean
                label:
                    additionalProperties:
                        type: object
                    type: object
                localizable:
                    type: boolean
                name:
                    type: string
                nestedDataDefinitionFields:
                    description:
                        "A list of child data definition fields that depend on this resource."
                    items:
                        $ref: "#/components/schemas/DataDefinitionField"
                    type:
                        array
                readOnly:
                    type: boolean
                repeatable:
                    type: boolean
                required:
                    type: boolean
                showLabel:
                    type: boolean
                tip:
                    additionalProperties:
                        type: object
                    type: object
                visible:
                    type: boolean
            type: object
        DataDefinitionFieldLink:
            properties:
                dataDefinition:
                    allOf:
                        - $ref: "#/components/schemas/DataDefinition"
                dataLayouts:
                    items:
                        $ref: "#/components/schemas/DataLayout"
                    type:
                        array
                dataListViews:
                    items:
                        $ref: "#/components/schemas/DataListView"
                    type:
                        array
            type: object
        DataLayout:
            properties:
                contentType:
                    type: string
                dataDefinitionId:
                    format: int64
                    type: integer
                dataLayoutFields:
                    additionalProperties:
                        type: object
                    type: object
                dataLayoutKey:
                    type: string
                dataLayoutPages:
                    items:
                        $ref: "#/components/schemas/DataLayoutPage"
                    type:
                        array
                dataRules:
                    items:
                        $ref: "#/components/schemas/DataRule"
                    type:
                        array
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                description:
                    additionalProperties:
                        type: object
                    type: object
                id:
                    format: int64
                    type: integer
                name:
                    additionalProperties:
                        type: object
                    type: object
                paginationMode:
                    type: string
                siteId:
                    format: int64
                    type: integer
                userId:
                    format: int64
                    type: integer
            type: object
        DataLayoutColumn:
            properties:
                columnSize:
                    type: integer
                fieldNames:
                    items:
                        type: string
                    type:
                        array
            type: object
        DataLayoutPage:
            properties:
                dataLayoutRows:
                    items:
                        $ref: "#/components/schemas/DataLayoutRow"
                    type:
                        array
                description:
                    additionalProperties:
                        type: object
                    type: object
                title:
                    additionalProperties:
                        type: object
                    type: object
            type: object
        DataLayoutRenderingContext:
            properties:
                containerId:
                    type: string
                dataRecordValues:
                    additionalProperties:
                        type: object
                    type: object
                namespace:
                    type: string
                pathThemeImages:
                    type: string
                readOnly:
                    type: boolean
                scopeGroupId:
                    format: int64
                    type: integer
                siteGroupId:
                    format: int64
                    type: integer
            type: object
        DataLayoutRow:
            properties:
                dataLayoutColumns:
                    items:
                        $ref: "#/components/schemas/DataLayoutColumn"
                    type:
                        array
            type: object
        DataListView:
            properties:
                appliedFilters:
                    additionalProperties:
                        type: object
                    type: object
                dataDefinitionId:
                    format: int64
                    type: integer
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                fieldNames:
                    items:
                        type: string
                    type:
                        array
                id:
                    format: int64
                    type: integer
                name:
                    additionalProperties:
                        type: object
                    type: object
                siteId:
                    format: int64
                    type: integer
                sortField:
                    type: string
                userId:
                    format: int64
                    type: integer
            type: object
        DataRecord:
            description:
                https://www.schema.org/DataRecord
            properties:
                dataRecordCollectionId:
                    format: int64
                    type: integer
                dataRecordValues:
                    additionalProperties:
                        type: object
                    type: object
                id:
                    format: int64
                    type: integer
                status:
                    readOnly: true
                    type: integer
        DataRecordCollection:
            description:
                https://www.schema.org/DataRecordCollection
            properties:
                dataDefinitionId:
                    format: int64
                    type: integer
                dataRecordCollectionKey:
                    type: string
                description:
                    additionalProperties:
                        type: object
                    type: object
                id:
                    format: int64
                    type: integer
                name:
                    additionalProperties:
                        type: object
                    type: object
                siteId:
                    format: int64
                    type: integer
            type: object
        DataRule:
            properties:
                actions:
                    items:
                        additionalProperties:
                            type: object
                        type: object
                    type:
                        array
                conditions:
                    items:
                        additionalProperties:
                            type: object
                        type: object
                    type:
                        array
                logicalOperator:
                    type: string
                name:
                    additionalProperties:
                        type: object
                    type: object
            type: object
info:
    description:
        "A Java client JAR is available for use with the group ID 'com.liferay', artifact ID
        'com.liferay.data.engine.rest.client', and version '3.0.14'."
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Data Engine"
    version: v2.0
openapi: 3.0.1
paths:
    "/data-definitions/by-content-type/{contentType}":
        get:
            operationId: getDataDefinitionByContentTypeContentTypePage
            parameters:
                - in: path
                  name: contentType
                  required: true
                  schema:
                      type: string
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataDefinition"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataDefinition"
                                type: array
            tags: ["DataDefinition"]
        post:
            operationId: postDataDefinitionByContentType
            parameters:
                - in: path
                  name: contentType
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataDefinition"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataDefinition"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
            tags: ["DataDefinition"]
    "/data-definitions/data-definition-fields/field-types":
        get:
            operationId: getDataDefinitionDataDefinitionFieldFieldTypes
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                type: string
                        application/xml:
                            schema:
                                type: string
            tags: ["DataDefinition"]
    "/data-definitions/{dataDefinitionId}":
        delete:
            operationId: deleteDataDefinition
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataDefinition"]
        get:
            operationId: getDataDefinition
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
            tags: ["DataDefinition"]
        patch:
            operationId: patchDataDefinition
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataDefinition"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataDefinition"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
            tags: ["DataDefinition"]
        put:
            operationId: putDataDefinition
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataDefinition"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataDefinition"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
            tags: ["DataDefinition"]
    "/data-definitions/{dataDefinitionId}/data-definition-field-links":
        get:
            operationId: getDataDefinitionDataDefinitionFieldLinksPage
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: fieldName
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataDefinitionFieldLink"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataDefinitionFieldLink"
                                type: array
            tags: ["DataDefinitionFieldLink"]
    "/data-definitions/{dataDefinitionId}/data-layouts":
        delete:
            operationId: deleteDataDefinitionDataLayout
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataLayout"]
        get:
            operationId: getDataDefinitionDataLayoutsPage
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataLayout"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataLayout"
                                type: array
            tags: ["DataLayout"]
        post:
            operationId: postDataDefinitionDataLayout
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataLayout"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataLayout"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataLayout"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataLayout"
            tags: ["DataLayout"]
    "/data-definitions/{dataDefinitionId}/data-list-views":
        delete:
            operationId: deleteDataDefinitionDataListView
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataListView"]
        get:
            operationId: getDataDefinitionDataListViewsPage
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataListView"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataListView"
                                type: array
            tags: ["DataListView"]
        post:
            operationId: postDataDefinitionDataListView
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataListView"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataListView"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataListView"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataListView"
            tags: ["DataListView"]
    "/data-definitions/{dataDefinitionId}/data-record-collection":
        get:
            operationId: getDataDefinitionDataRecordCollection
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
            tags: ["DataRecordCollection"]
    "/data-definitions/{dataDefinitionId}/data-record-collections":
        get:
            operationId: getDataDefinitionDataRecordCollectionsPage
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataRecordCollection"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataRecordCollection"
                                type: array
            tags: ["DataRecordCollection"]
        post:
            operationId: postDataDefinitionDataRecordCollection
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataRecordCollection"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataRecordCollection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
            tags: ["DataRecordCollection"]
    "/data-definitions/{dataDefinitionId}/data-records":
        get:
            operationId: getDataDefinitionDataRecordsPage
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: dataListViewId
                  required: false
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataRecord"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataRecord"
                                type: array
            tags: ["DataRecord"]
        post:
            operationId: postDataDefinitionDataRecord
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataRecord"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataRecord"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
            tags: ["DataRecord"]
    "/data-definitions/{dataDefinitionId}/permissions":
        get:
            operationId: getDataDefinitionPermissionsPage
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: roleNames
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataDefinition"]
        put:
            operationId: putDataDefinitionPermissionsPage
            parameters:
                - in: path
                  name: dataDefinitionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataDefinition"]
    "/data-layouts/{dataLayoutId}":
        delete:
            operationId: deleteDataLayout
            parameters:
                - in: path
                  name: dataLayoutId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataLayout"]
        get:
            operationId: getDataLayout
            parameters:
                - in: path
                  name: dataLayoutId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataLayout"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataLayout"
            tags: ["DataLayout"]
        put:
            operationId: putDataLayout
            parameters:
                - in: path
                  name: dataLayoutId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataLayout"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataLayout"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataLayout"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataLayout"
            tags: ["DataLayout"]
    "/data-layouts/{dataLayoutId}/context":
        post:
            operationId: postDataLayoutContext
            parameters:
                - in: path
                  name: dataLayoutId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataLayoutRenderingContext"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataLayoutRenderingContext"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                additionalProperties:
                                    type: object
                                type: object
                        application/xml:
                            schema:
                                additionalProperties:
                                    type: object
                                type: object
            tags: ["DataLayout"]
    "/data-list-views/{dataListViewId}":
        delete:
            operationId: deleteDataListView
            parameters:
                - in: path
                  name: dataListViewId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataListView"]
        get:
            operationId: getDataListView
            parameters:
                - in: path
                  name: dataListViewId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataListView"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataListView"
            tags: ["DataListView"]
        put:
            operationId: putDataListView
            parameters:
                - in: path
                  name: dataListViewId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataListView"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataListView"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataListView"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataListView"
            tags: ["DataListView"]
    "/data-record-collections/{dataRecordCollectionId}":
        delete:
            operationId: deleteDataRecordCollection
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataRecordCollection"]
        get:
            operationId: getDataRecordCollection
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
            tags: ["DataRecordCollection"]
        put:
            operationId: putDataRecordCollection
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataRecordCollection"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataRecordCollection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
            tags: ["DataRecordCollection"]
    "/data-record-collections/{dataRecordCollectionId}/data-records":
        get:
            operationId: getDataRecordCollectionDataRecordsPage
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: dataListViewId
                  required: false
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataRecord"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataRecord"
                                type: array
            tags: ["DataRecord"]
        post:
            operationId: postDataRecordCollectionDataRecord
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataRecord"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataRecord"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
            tags: ["DataRecord"]
    "/data-record-collections/{dataRecordCollectionId}/data-records/export":
        get:
            operationId: getDataRecordCollectionDataRecordExport
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                204:
                    content:
                        application/json:
                            schema:
                                type: string
                        application/xml:
                            schema:
                                type: string
            tags: ["DataRecord"]
    "/data-record-collections/{dataRecordCollectionId}/permissions":
        get:
            operationId: getDataRecordCollectionPermissionsPage
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: roleNames
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataRecordCollection"]
        put:
            operationId: putDataRecordCollectionPermissionsPage
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataRecordCollection"]
    "/data-record-collections/{dataRecordCollectionId}/permissions/by-current-user":
        get:
            operationId: getDataRecordCollectionPermissionByCurrentUser
            parameters:
                - in: path
                  name: dataRecordCollectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                type: string
                        application/xml:
                            schema:
                                type: string
            tags: ["DataRecordCollection"]
    "/data-records/{dataRecordId}":
        delete:
            operationId: deleteDataRecord
            parameters:
                - in: path
                  name: dataRecordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["DataRecord"]
        get:
            operationId: getDataRecord
            parameters:
                - in: path
                  name: dataRecordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
            tags: ["DataRecord"]
        patch:
            operationId: patchDataRecord
            parameters:
                - in: path
                  name: dataRecordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataRecord"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataRecord"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
            tags: ["DataRecord"]
        put:
            operationId: putDataRecord
            parameters:
                - in: path
                  name: dataRecordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataRecord"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataRecord"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecord"
            tags: ["DataRecord"]
    "/sites/{siteId}/data-definitions/by-content-type/{contentType}":
        get:
            operationId: getSiteDataDefinitionByContentTypeContentTypePage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: contentType
                  required: true
                  schema:
                      type: string
                - in: query
                  name: keywords
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataDefinition"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataDefinition"
                                type: array
            tags: ["DataDefinition"]
        post:
            operationId: postSiteDataDefinitionByContentType
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: contentType
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataDefinition"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataDefinition"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
            tags: ["DataDefinition"]
    "/sites/{siteId}/data-definitions/by-content-type/{contentType}/by-data-definition-key/{dataDefinitionKey}":
        get:
            operationId: getSiteDataDefinitionByContentTypeByDataDefinitionKey
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: contentType
                  required: true
                  schema:
                      type: string
                - in: path
                  name: dataDefinitionKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataDefinition"
            tags: ["DataDefinition"]
    "/sites/{siteId}/data-layouts/by-content-type/{contentType}/by-data-layout-key/{dataLayoutKey}":
        get:
            operationId: getSiteDataLayoutByContentTypeByDataLayoutKey
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: contentType
                  required: true
                  schema:
                      type: string
                - in: path
                  name: dataLayoutKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataLayout"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataLayout"
            tags: ["DataLayout"]
    "/sites/{siteId}/data-record-collections/by-data-record-collection-key/{dataRecordCollectionKey}":
        get:
            operationId: getSiteDataRecordCollectionByDataRecordCollectionKey
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: dataRecordCollectionKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataRecordCollection"
            tags: ["DataRecordCollection"]