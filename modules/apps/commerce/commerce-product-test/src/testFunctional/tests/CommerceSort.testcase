@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Shopping Experience";

	setUp {
		CommerceConfiguration.commerceSetUp();
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "COMMERCE-6173. As a buyer, I want to sort products by Name(ascending) using Sort widget and the results should be visible on the Search Results widget"
	@priority = "3"
	test AssertProductsAreSortedByNameAscending {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceAcceleratorsInitializer.changeProductsSorting(sortingType = "Name Ascending");

		AssertTextEquals(
			key_index = "1",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "ABS Sensor");

		AssertTextEquals(
			key_index = "2",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Ball Joints");

		AssertTextEquals(
			key_index = "3",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Bearings");

		AssertTextEquals(
			key_index = "4",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Brake Fluid");

		AssertTextEquals(
			key_index = "5",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Brake Pads");

		AssertTextEquals(
			key_index = "6",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Brake Rotors");
	}

	@description = "COMMERCE-6174. As a buyer, I want to sort products by Name(descending) using Sort widget and the results should be visible on the Search Results widget"
	@priority = "3"
	test AssertProductsAreSortedByNameDescending {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceAcceleratorsInitializer.changeProductsSorting(sortingType = "Name Descending");

		AssertTextEquals(
			key_index = "1",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Wheel Seal - Front");

		AssertTextEquals(
			key_index = "2",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Wheel Bearing Grease");

		AssertTextEquals(
			key_index = "3",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Wear Sensors");

		AssertTextEquals(
			key_index = "4",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Valve Cover Grommets");

		AssertTextEquals(
			key_index = "5",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Universal CV Boot");

		AssertTextEquals(
			key_index = "6",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Universal CV Boot");
	}

	@description = "COMMERCE-6176. As a buyer, I want to sort products by New Items using Sort widget and the results should be visible on the Search Results widget"
	@priority = "3"
	test AssertProductsAreSortedByNewItems {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			productCatalog = "Minium",
			productName = "Simple T-Shirt",
			productType = "Simple");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceAcceleratorsInitializer.changeProductsSorting(sortingType = "New Items");

		AssertTextEquals(
			key_index = "1",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "Simple T-Shirt");
	}

	@description = "COMMERCE-6171. As a buyer, I want to sort products by Price High to Low using Sort widget and the results should be visible on the Search Results widget"
	@priority = "3"
	test AssertProductsAreSortedByPriceHighToLow {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceAcceleratorsInitializer.changeProductsSorting(sortingType = "Price High to Low");

		Pause(locator1 = "3000");

		var indexProductArray = "1;Cams,2;Timing Belt,3;Oil Filter,4;Drive Shafts,5;Differential Ring and Pinion - Universal,6;Pulley Kit";

		for (var i : list "${indexProductArray}") {
			var curr_index = StringUtil.extractFirst("${i}", ";");
			var curr_productName = StringUtil.extractLast("${i}", ";");

			AssertTextEquals(
				key_index = "${curr_index}",
				locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
				value1 = "${curr_productName}");
		}

		var productAndPriceArray = "Cams;$ 695.00,Timing Belt;$ 600.00,Oil Filter;$ 450.00,Drive Shafts;$ 396.00,Differential Ring and Pinion - Universal;$ 211.00,Pulley Kit;$ 201.00";

		for (var i : list "${productAndPriceArray}") {
			var curr_productName = StringUtil.extractFirst("${i}", ";");
			var curr_price = StringUtil.extractLast("${i}", ";");

			AssertTextEquals(
				key_productName = "${curr_productName}",
				locator1 = "CommerceAccelerators#PRODUCT_CARD_PRICE",
				value1 = "${curr_price}");
		}
	}

	@description = "COMMERCE-6172. As a buyer, I want to sort products by Price Low to High using Sort widget and the results should be visible on the Search Results widget"
	@priority = "3"
	test AssertProductsAreSortedByPriceLowToHigh {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceAcceleratorsInitializer.changeProductsSorting(sortingType = "Price Low to High");

		Pause(locator1 = "3000");

		var indexProductArray = "1;Mount,2;Wheel Seal - Front,3;Valve Cover Grommets,4;Exhaust Clamps,5;Piston,6;Transmission Cooler Line Assembly";

		for (var i : list "${indexProductArray}") {
			var curr_index = StringUtil.extractFirst("${i}", ";");
			var curr_productName = StringUtil.extractLast("${i}", ";");

			AssertTextEquals(
				key_index = "${curr_index}",
				locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
				value1 = "${curr_productName}");
		}

		var productAndPriceArray = "Mount;$ 3.00,Wheel Seal - Front;$ 4.00,Valve Cover Grommets;$ 6.00,Exhaust Clamps;$ 9.00,Piston;$ 14.00,Transmission Cooler Line Assembly;$ 15.00";

		for (var i : list "${productAndPriceArray}") {
			var curr_productName = StringUtil.extractFirst("${i}", ";");
			var curr_price = StringUtil.extractLast("${i}", ";");

			AssertTextEquals(
				key_productName = "${curr_productName}",
				locator1 = "CommerceAccelerators#PRODUCT_CARD_PRICE",
				value1 = "${curr_price}");
		}
	}

	@description = "COMMERCE-6175. As a buyer, I want to sort products by Relevance using Sort widget and the results should be visible on the Search Results widget"
	@priority = "3"
	test AssertProductsAreSortedByRelevance {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceProducts.searchProduct(search = "ABS Sensor");

		CommerceNavigator.gotoEntry(entryName = "ABS Sensor");

		Type(
			key_fieldLabel = "Name",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "ABS Sensor 2");

		Button.clickPublish();

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceAcceleratorsInitializer.changeProductsSorting(sortingType = "Relevance");

		AssertTextEquals(
			key_index = "1",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME_BY_INDEX",
			value1 = "ABS Sensor 2");
	}

}