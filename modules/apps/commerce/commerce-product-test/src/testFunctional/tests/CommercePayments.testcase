@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Order Management";

	setUp {
		CommerceConfiguration.commerceSetUp();
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "This is a test for COMMERCE-6219. MoneyOrder Payment Method lifecycle"
	@priority = "3"
	test CancelPayment {
		property portal.acceptance = "false";

		// TODO Review

		PortalSettings.gotoConfiguration(
			configurationCategory = "User Authentication",
			configurationName = "General",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.uncheckStrangersVerifyEmailCheckbox();

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(accountName = "Test Account");

		CommerceAcceleratorsInitializer.inviteNewMemberWithRoleToAccount(
			accountName = "Test Account",
			emailAddress = "buyer@liferay.com",
			role = "Buyer",
			userFirstName = "Buyer",
			userLastName = "User",
			userScreenName = "buyeruser");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Account Users");

		CommerceLogin.editPasswordCP(
			newPassword = "ttest",
			requirePasswordReset = "true",
			userScreenName = "buyeruser");

		User.logoutPG();

		CommerceLogin.miniumLogin(
			newPassword = "test",
			password = "ttest",
			urlAppend = "web/minium",
			userEmailAddress = "buyer@liferay.com");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		Refresh();

		CommerceCheckout.gotoCheckout();

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			productName = "U-Joint",
			productQuantity = "1",
			productUnitPrice = "24",
			shippingMethod = "Standard");

		User.logoutPG();

		CommerceLogin.miniumLogin(
			password = "test",
			urlAppend = "web/minium",
			userEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoPortlet(
			category = "Order Management",
			portlet = "Orders");

		Pause(locator1 = "3000");

		ClickNoError(
			key_orderStatus = "Pending",
			locator1 = "CommerceOrders#ORDER_ELLIPSIS_BY_STATUS");

		CommerceEntry.clickNoError(menuItem = "View");

		CommerceEntry.gotoMenuTab(menuTab = "Payments");

		Click(
			key_index = "Edit",
			locator1 = "WorkflowMetrics#SEARCH_FIELD_MAPPINGS_METRICS_INDEXES");

		SelectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Select(
			key_fieldLabel = "Payment Status",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Cancelled");

		Button.click(button = "Submit");

		Refresh();

		AssertElementPresent(
			key_filterOption = "Cancelled",
			locator1 = "AppBuilder#CHOOSE_APP_SEARCH_FILTER_BY_OPTION");
	}

	@description = "This is a test for COMMERCE-6218. MoneyOrder Payment Method lifecycle"
	@priority = "3"
	test MoneyOrderCheckout {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CommercePayments#MoneyOrderCheckout";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Minium Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(accountName = "Commerce Account");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		CommerceCheckout.gotoCheckout();

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "Italy",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			productName = "U-Joint",
			productQuantity = "1",
			productUnitPrice = "24",
			shippingMethod = "Standard");
	}

}