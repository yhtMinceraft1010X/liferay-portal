@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Shopping Experience";

	setUp {
		CommerceConfiguration.commerceSetUp(minium = "true");
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "This is a test for COMMERCE-8646"
	@priority = "4"
	test VerifyDisplayFrequencies {
		property portal.acceptance = "false";

		var facetValueNameList = "6,12,24,48,112";

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			displayFrequencies = "disable",
			portletName = "Option Facet");

		IFrame.closeFrame();

		for (var facetValueName : list "${facetValueNameList}") {
			AssertElementNotPresent(
				facetValueName = "${facetValueName}",
				locator1 = "Search#FACET_DISPLAY_FREQUENCIES");
		}
	}

	@description = "This is a test for COMMERCE-8646"
	@priority = "4"
	test VerifyDisplayTemplate {
		property portal.acceptance = "false";

		var packageQuantityTagNameList = "6,12,24,48,112";

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			displayTemplate = "Cloud Layout",
			portletName = "Option Facet");

		IFrame.closeFrame();

		for (var tagName : list "${packageQuantityTagNameList}") {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_CLOUD_LAYOUT",
				tagName = "${tagName}");
		}

		CommerceWidget.updateFacetConfiguration(
			displayTemplate = "Compact Layout",
			portletName = "Option Facet");

		IFrame.closeFrame();

		for (var tagName : list "${packageQuantityTagNameList}") {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_COMPACT_LAYOUT",
				tagName = "${tagName}");
		}

		CommerceWidget.updateFacetConfiguration(
			displayTemplate = "Label Layout",
			portletName = "Option Facet");

		IFrame.closeFrame();

		for (var tagName : list "${packageQuantityTagNameList}") {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_LABEL_LAYOUT",
				tagName = "${tagName}");
		}
	}

	@description = "This is a test for COMMERCE-8646"
	@priority = "4"
	test VerifyFrequencyThreshold {
		property portal.acceptance = "false";

		var packageQuantityLabelNameList = "6,12,24,112";

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			frequencyThreshold = "2",
			portletName = "Option Facet");

		IFrame.closeFrame();

		AssertElementPresent(
			key_facetLabel = "48",
			locator1 = "CommerceWidget#FACET_DEFAULT_LABEL");

		for (var facetLabel : list "${warrantyLabelNameList}") {
			AssertElementNotPresent(
				key_facetLabel = "${facetLabel}",
				locator1 = "CommerceWidget#FACET_DEFAULT_LABEL");
		}
	}

	@description = "This is a test for COMMERCE-8646."
	@priority = "3"
	test VerifyMaxTermsFieldValue {
		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			maxTerms = "101",
			portletName = "Option Facet");

		AssertElementPresent(
			errorMessage = "Maximum terms cannot exceed 100.",
			locator1 = "CommerceWidget#MAX_TERMS_ERROR_MESSAGE");
	}

	@description = "This is for COMMERCE-8646."
	test VerifyOptionFacetSetupTab {
		ApplicationsMenu.gotoSite(site = "Minium");

		Portlet.gotoPortletOptions(
			portletName = "Option Facet",
			portletOption = "Configuration");

		IFrame.selectModalFrame();

		AssertElementPresent(
			key_navItem = "Setup",
			locator1 = "NavBar#ACTIVE_NAV_ITEM_LINK");

		AssertElementPresent(locator1 = "Select#DISPLAY_TEMPLATE");

		AssertElementPresent(
			key_fieldName = "maxTerms",
			locator1 = "FormFields#TEXT_FIELD");

		AssertElementPresent(
			key_fieldName = "frequencyThreshold",
			locator1 = "FormFields#TEXT_FIELD");

		IFrame.closeFrame();
	}

	test View100Terms {
		CommerceJSONOptionsAPI._addCommerceProductsWithOptionValues(
			catalogName = "Minium",
			optionKey = "package-quantity");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			maxTerms = "100",
			portletName = "Option Facet");

		IFrame.closeFrame();

		CommerceWidget.assertOptionFacetsCount(
			expectedLabels = "100",
			optionName = "Package Quantity");
	}

}