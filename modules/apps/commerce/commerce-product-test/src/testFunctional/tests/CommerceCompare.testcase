@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Shopping Experience";

	setUp {
		CommerceConfiguration.commerceSetUp();
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "COMMERCE-5912. As a buyer, I want to select an item in Product Details for compare in Product Widget"
	@priority = "3"
	test AddComparisonItemFromProductDetailsPage {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceAcceleratorsInitializer.gotoMiniumProductDetailsPage(productName = "U-Joint");

		Click.clickAtNotVisible(
			checkboxName = "Compare",
			locator1 = "Checkbox#ANY_CHECKBOX");

		AssertElementPresent(locator1 = "CommerceEntry#MINI_COMPARE_ITEM_ACTIVE");
	}

	@description = "COMMERCE-5911. As a buyer, I want to select items in Search Results page for compare and see those items in MiniCompare widget at the bottom pf the page"
	@priority = "3"
	test AssertComparisonItemsAreVisibleOnMiniCompare {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		for (var productName : list "U-Joint,Transmission Cooler Line Assembly,Torque Converters") {
			Check.checkToggleSwitch(
				key_productName = "${productName}",
				locator1 = "CommerceEntry#PRODUCT_CARD_COMPARE_CHECKBOX");
		}

		for (var value : list "1,2,3") {
			AssertElementPresent(
				key_value = "${value}",
				locator1 = "CommerceFrontStore#MINI_COMPARE_ITEM_ACTIVE_N");
		}
	}

	@description = "COMMERCE-5915. As a buyer, I want to see max number of compare items allowed in Compare page"
	@ignore = "true"
	@priority = "3"
	test EditMaxNumberOfComparisonItemsInComparePage {
		property portal.acceptance = "false";

		// TODO COMMERCE-5915 EditMaxNumberOfComparisonItemsInComparePage pending implementation

	}

	@description = "COMMERCE-5916. As a buyer, I want to see max number of compare items allowed in MiniCompare widget"
	@ignore = "true"
	@priority = "3"
	test EditMaxNumberOfComparisonItemsInMiniCompare {
		property portal.acceptance = "false";

		// TODO COMMERCE-5916 EditMaxNumberOfComparisonItemsInMiniCompare pending implementation

	}

	@description = "COMMERCE-5918. As a buyer, I want to deselect a item in Product Compare page"
	@ignore = "true"
	@priority = "3"
	test RemoveComparisonItemFromComparePage {
		property portal.acceptance = "false";

		// TODO COMMERCE-5918 RemoveComparisonItemFromComparePage pending implementation

	}

	@description = "COMMERCE-5913. As a buyer, I want to deselect items in Catalog for compare in MiniCompare widget"
	@priority = "3"
	test RemoveComparisonItemFromMiniCompare {
		property portal.acceptance = "false";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Media");

		CommerceNavigator.gotoEntry(entryName = "Minium_ProductImage_64.png");

		var firstProductFileEntryId = CommerceProductImages.getProductMediaId();

		Click(locator1 = "Icon#BACK");

		CommerceNavigator.searchEntry(entryName = "Transmission Fluid");

		CommerceNavigator.gotoEntry(entryName = "Transmission Fluid");

		CommerceEntry.gotoMenuTab(menuTab = "Media");

		CommerceNavigator.gotoEntry(entryName = "Minium_ProductImage_103.png");

		var secondProductFileEntryId = CommerceProductImages.getProductMediaId();

		ApplicationsMenu.gotoSite(site = "Minium");

		Click.clickAtNotVisible(
			key_productName = "U-Joint",
			locator1 = "CommerceEntry#PRODUCT_CARD_COMPARE_CHECKBOX");

		Click.clickAtNotVisible(
			key_productName = "Transmission Fluid",
			locator1 = "CommerceEntry#PRODUCT_CARD_COMPARE_CHECKBOX");

		Refresh();

		AssertElementPresent(
			key_productMediaId = "${firstProductFileEntryId}",
			locator1 = "CommerceFrontStore#MINI_COMPARE_ITEM_REMOVE_BUTTON");

		AssertElementPresent(
			key_productMediaId = "${secondProductFileEntryId}",
			locator1 = "CommerceFrontStore#MINI_COMPARE_ITEM_REMOVE_BUTTON");

		Click(
			key_productMediaId = "${firstProductFileEntryId}",
			locator1 = "CommerceFrontStore#MINI_COMPARE_ITEM_REMOVE_BUTTON");

		AssertElementNotPresent(
			key_productMediaId = "${firstProductFileEntryId}",
			locator1 = "CommerceFrontStore#MINI_COMPARE_ITEM_CUSTOM_IMAGE");
	}

	@description = "COMMERCE-5914. As a buyer, I want to deselect a item in Product Details for compare in Product Widget"
	@priority = "3"
	test RemoveComparisonItemFromProductDetailsPage {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Media");

		CommerceNavigator.gotoEntry(entryName = "Minium_ProductImage_64.png");

		var firstProductFileEntryId = CommerceProductImages.getProductMediaId();

		Click(locator1 = "Icon#BACK");

		CommerceNavigator.searchEntry(entryName = "Transmission Fluid");

		CommerceNavigator.gotoEntry(entryName = "Transmission Fluid");

		CommerceEntry.gotoMenuTab(menuTab = "Media");

		CommerceNavigator.gotoEntry(entryName = "Minium_ProductImage_103.png");

		var secondProductFileEntryId = CommerceProductImages.getProductMediaId();

		ApplicationsMenu.gotoSite(site = "Minium");

		Click.clickAtNotVisible(
			key_productName = "U-Joint",
			locator1 = "CommerceEntry#PRODUCT_CARD_COMPARE_CHECKBOX");

		Click.clickAtNotVisible(
			key_productName = "Transmission Fluid",
			locator1 = "CommerceEntry#PRODUCT_CARD_COMPARE_CHECKBOX");

		CommerceAcceleratorsInitializer.gotoMiniumProductDetailsPage(productName = "U-Joint");

		AssertElementPresent(
			key_productMediaId = "${firstProductFileEntryId}",
			locator1 = "CommerceFrontStore#MINI_COMPARE_ITEM_CUSTOM_IMAGE");

		AssertElementPresent(
			key_productMediaId = "${secondProductFileEntryId}",
			locator1 = "CommerceFrontStore#MINI_COMPARE_ITEM_CUSTOM_IMAGE");

		AssertChecked.assertCheckedNotVisible(
			checkboxName = "Compare",
			locator1 = "Checkbox#ANY_CHECKBOX_CHECKED");

		Click.clickAtNotVisible(
			checkboxName = "Compare",
			locator1 = "Checkbox#ANY_CHECKBOX");

		AssertElementNotPresent(
			key_productMediaId = "${firstProductFileEntryId}",
			locator1 = "CommerceFrontStore#MINI_COMPARE_ITEM_CUSTOM_IMAGE");
	}

	@description = "COMMERCE-6662. I want to be able to use ADT to render Commerce Comparison Bar widget and I want to be able to select a Display Template and see it applied to the widget"
	@ignore = "true"
	@priority = "3"
	test UseADTInCommerceComparisonBarWidget {
		property portal.acceptance = "false";

		// TODO COMMERCE-6662 UseADTInCommerceComparisonBarWidget pending implementation

	}

	@description = "COMMERCE-6661. I want to be able to use ADT to render Commerce Comparison Table widget and I want to be able to select a Display Template and see it applied to the widget"
	@ignore = "true"
	@priority = "3"
	test UseADTInCommerceComparisonTableWidget {
		property portal.acceptance = "false";

		// TODO COMMERCE-6661 UseADTInCommerceComparisonTableWidget pending implementation

	}

	@description = "COMMERCE-5919. As a buyer, when comparing items in Compare page, I want to view product options and specifications, if set"
	@priority = "3"
	test ViewProductOptionsAndSpecificationsWhenComparingItemsInComparePage {
		property portal.acceptance = "false";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(accountName = "Commerce Account");

		CommerceAcceleratorsInitializer.inviteNewMemberWithRoleToAccount(
			accountName = "Commerce Account",
			emailAddress = "buyer@liferay.com",
			role = "Buyer",
			userFirstName = "Buyer",
			userLastName = "User",
			userScreenName = "buyeruser");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceAcceleratorsInitializer.changeProductsSorting(sortingType = "Name Ascending");

		Check.checkToggleSwitch(
			key_productName = "ABS Sensor",
			locator1 = "CommerceEntry#PRODUCT_CARD_COMPARE_CHECKBOX");

		Check.checkToggleSwitch(
			key_productName = "Brake Fluid",
			locator1 = "CommerceEntry#PRODUCT_CARD_COMPARE_CHECKBOX");

		Button.click(button = "Compare");

		AssertElementPresent(
			key_productName = "ABS Sensor",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		AssertElementPresent(
			key_productName = "Brake Fluid",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");
	}

}