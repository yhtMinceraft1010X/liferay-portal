@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Product Info Management";

	setUp {
		CommerceConfiguration.commerceSetUp(storeFront = "true");
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "This is a test for COMMERCE-6017. CreateAnOptionForAllTheFieldType"
	@priority = "3"
	test CreateAnOptionForAllTheFieldType {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		AppBuilderAdmin.searchByItem(itemName = "ABS Sensor");

		Click(
			key_entryName = "ABS Sensor",
			locator1 = "CommerceEntry#TABLE_LIST_TITLE");

		CommerceEntry.gotoMenuTab(menuTab = "Options");

		var colorName = "Color_";
		var count = "0";

		for (var fieldType : list "Text,Single Selection,Multiple Selection,Date,Numeric,Boolean") {
			Type(
				key_title = "Add Options",
				locator1 = "CommerceEntry#ADD_RELATION_FIELD",
				value1 = "${colorName}${count}");

			Button.click(button = "Create New");

			Refresh();

			AssertElementPresent(
				key_entryName = "${colorName}${count}",
				locator1 = "CommerceNavigation#ENTRY_NAME");

			if ("${count}" == "0") {
				AssertElementPresent(
					key_entryName = "${colorName}${count}",
					key_table = "Select from List",
					locator1 = "CommerceEntry#OPTION_TABLE_CHECK");

				echo("IF STATE (The option ${colorName}${count} is present with type Select From List)");
			}

			Click(
				key_index = "${colorName}${count}",
				locator1 = "WorkflowMetrics#SEARCH_FIELD_MAPPINGS_METRICS_INDEXES");

			SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

			Select(
				key_fieldLabel = "Field Type",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${fieldType}");

			Button.clickSave();

			Click(locator1 = "Icon#CLOSE");

			Refresh();

			AssertElementPresent(
				key_entryName = "${colorName}${count}",
				key_table = "${fieldType}",
				locator1 = "CommerceEntry#OPTION_TABLE_CHECK");

			echo("The option ${colorName}${count} is present with type ${fieldType}");

			var count = ${count} + 1;
		}
	}

	@description = "This is a test for COMMERCE-6019. EditAndRemoveAnOptionWithValues"
	@priority = "3"
	test EditAndRemoveAnOptionWithValues {
		property portal.acceptance = "false";

		// TODO Review

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Options");

		CPCommerceCatalog.newOptionsEntry(
			optionDescription = "Test Description",
			optionFieldType = "Select from List",
			optionName = "Color");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Use in Faceted Navigation",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Required",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "SKU Contributor",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		CPCommerceCatalog.addOptionValues(
			optionEntryName = "Color",
			optionValuesList = "Black:1");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			productCatalog = "Master",
			productName = "Simple T-Shirt",
			productType = "Simple");

		CommerceEntry.gotoMenuTab(menuTab = "Options");

		CommerceRelations.assignSingleRelationToProductsEntry(
			entryName = "Color",
			title = "Add Option");

		CommerceNavigator.gotoEntry(entryName = "Color");

		CommerceNavigator.gotoEntry(entryName = "Black");

		Type(
			key_fieldLabel = "Name",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "Red");

		Type(
			key_fieldLabel = "Key",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "red");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.openURL();

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.gotoEntry(entryName = "Simple T-Shirt");

		CommerceEntry.gotoMenuTab(menuTab = "Options");

		CommerceNavigator.gotoEntry(entryName = "Color");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		AssertTextEquals(
			key_entryName = "Red",
			locator1 = "CommerceNavigation#ENTRY_NAME",
			value1 = "Red");

		Click(
			key_value = "Red",
			locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		CommerceEntry.clickNoError(menuItem = "Delete");

		Alert.viewSuccessMessage();
	}

}