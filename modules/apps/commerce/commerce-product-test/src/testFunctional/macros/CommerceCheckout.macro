definition {

	macro checkout {
		WaitForElementPresent(locator1 = "CommerceAccelerators#CHECKOUT_PORTLET_BODY");

		Type(
			key_fieldName = "Name",
			locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
			value1 = "${newAddressName}");

		Type(
			key_fieldName = "Address",
			locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
			value1 = "${newAddressAddress}");

		Select(
			key_fieldName = "Country",
			locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_SELECT",
			value1 = "${newAddressCountry}");

		Type(
			key_fieldName = "Zip",
			locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
			value1 = "${newAddressZipCode}");

		Type(
			key_fieldName = "City",
			locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
			value1 = "${newAddressCity}");

		if (isSet(guestEmail)) {
			Type(
				locator1 = "CommerceAccelerators#GUEST_CHECKOUT_EMAIL",
				value1 = "${guestEmail}");
		}

		Click(locator1 = "Button#CONTINUE");

		Click(
			key_radioOption = "${shippingMethod}",
			locator1 = "CommerceEntry#RADIO_BUTTON");

		Click(locator1 = "Button#CONTINUE");

		if (isSet(paymentMethod) && (IsElementPresent(key_radioOption = "", locator1 = "CommerceEntry#RADIO_BUTTON"))) {
			Click(
				key_radioOption = "${paymentMethod}",
				locator1 = "CommerceEntry#RADIO_BUTTON");

			Click(locator1 = "Button#CONTINUE");
		}

		Click(locator1 = "Button#CONTINUE");
	}

	macro gotoCheckout {
		CommerceNavigator.gotoMiniCart();

		Button.click(button = "View Details");

		Button.click(button = "Checkout");
	}

	macro gotoCheckoutViaMiniCart {
		ScrollBy(value1 = "0, 1000");

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");
	}

	macro initializersCheckout {
		WaitForElementPresent(locator1 = "CommerceAccelerators#CHECKOUT_PORTLET_BODY");

		if (isSet(newAddressName)) {
			Type(
				key_fieldName = "Name",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
				value1 = "${newAddressName}");

			Type(
				key_fieldName = "Address",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
				value1 = "${newAddressAddress}");

			Select(
				key_fieldName = "Country",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_SELECT",
				value1 = "${newAddressCountry}");

			Type(
				key_fieldName = "Zip",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
				value1 = "${newAddressZipCode}");

			Type(
				key_fieldName = "City",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
				value1 = "${newAddressCity}");

			if (isSet(guestEmail)) {
				Type(
					locator1 = "CommerceAccelerators#GUEST_CHECKOUT_EMAIL",
					value1 = "${guestEmail}");
			}
		}

		Click(locator1 = "Button#CONTINUE");

		var subtotal = ${productUnitPrice} * ${productQuantity};

		if (isSet(singleShippingOption)) {
			if (isSet(shippingMethod)) {
				if ("${shippingMethod}" == "Standard") {
					var total = ${subtotal} + 15;
				}
				else if ("${shippingMethod}" == "Expedited") {
					var total = ${subtotal} + 25;
				}
				else if (isSet(customDeliveryValue)) {
					var total = ${subtotal} + ${customDeliveryValue};
				}
				else {
					var total = "${subtotal}";
				}
			}
			else {
				var total = "${subtotal}";
			}
		}
		else if (isSet(shippingMethod)) {
			if (IsElementPresent(key_label = "Shipping Method", locator1 = "CommerceAccelerators#CHECKOUT_MULTI_STEP_INDICATOR_LABEL")) {
				Click(
					key_radioOption = "${shippingMethod}",
					locator1 = "CommerceEntry#RADIO_BUTTON");

				Click(locator1 = "Button#CONTINUE");
			}

			if ("${shippingMethod}" == "Standard") {
				var total = ${subtotal} + 15;
			}
			else if ("${shippingMethod}" == "Expedited") {
				var total = ${subtotal} + 25;
			}
			else if (isSet(customDeliveryValue)) {
				var total = ${subtotal} + ${customDeliveryValue};
			}
			else {
				var total = "${subtotal}";
			}
		}
		else {
			var total = "${subtotal}";
		}

		if (isSet(paymentMethod) && (IsElementPresent(key_radioOption = "", locator1 = "CommerceEntry#RADIO_BUTTON"))) {
			Click(
				key_radioOption = "${paymentMethod}",
				locator1 = "CommerceEntry#RADIO_BUTTON");

			Click(locator1 = "Button#CONTINUE");
		}

		CommerceCheckout.viewCheckoutOrderSummary(
			addressAddress = "${newAddressAddress}",
			addressCity = "${newAddressCity}",
			addressCountry = "${newAddressCountry}",
			addressName = "${newAddressName}",
			deliveryValue = "${deliveryValue}",
			paymentMethod = "${paymentMethod}",
			productName = "${productName}",
			productPrice = "${productUnitPrice}",
			productQuantity = "${productQuantity}",
			subtotalValue = "${subtotal}",
			totalValue = "${total}");

		Click(locator1 = "Button#CONTINUE");
	}

	macro setAddress {
		WaitForElementPresent(locator1 = "CommerceAccelerators#CHECKOUT_PORTLET_BODY");

		if (isSet(newAddressName)) {
			Type(
				key_fieldName = "Name",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
				value1 = "${newAddressName}");

			Type(
				key_fieldName = "Address",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
				value1 = "${newAddressAddress}");

			Select(
				key_fieldName = "Country",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_SELECT",
				value1 = "${newAddressCountry}");

			Type(
				key_fieldName = "Zip",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
				value1 = "${newAddressZipCode}");

			Type(
				key_fieldName = "City",
				locator1 = "CommerceAccelerators#CHECKOUT_GENERIC_TEXT_INPUT",
				value1 = "${newAddressCity}");

			if (isSet(guestEmail)) {
				Type(
					locator1 = "CommerceAccelerators#GUEST_CHECKOUT_EMAIL",
					value1 = "${guestEmail}");
			}
		}
	}

	macro viewCheckoutOrderSummary {
		if (IsElementPresent(key_label = "Shipping Address", locator1 = "CommerceAccelerators#CHECKOUT_MULTI_STEP_INDICATOR_LABEL")) {
			AssertTextEquals.assertPartialText(
				key_addressInfo = "${addressName}",
				locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_SHIPPING_ADDRESS",
				value1 = "${addressName}");

			AssertTextEquals.assertPartialText(
				key_addressInfo = "${addressAddress}",
				locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_SHIPPING_ADDRESS",
				value1 = "${addressAddress}");

			AssertTextEquals.assertPartialText(
				key_addressInfo = "${addressCity}",
				locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_SHIPPING_ADDRESS",
				value1 = "${addressCity}");

			AssertTextEquals.assertPartialText(
				key_addressInfo = "${addressCountry}",
				locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_SHIPPING_ADDRESS",
				value1 = "${addressCountry}");
		}

		if (isSet(paymentMethod)) {
			AssertTextEquals(
				key_paymentMethod = "${paymentMethod}",
				locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_PAYMENT_METHOD",
				value1 = "${paymentMethod}");
		}

		AssertTextEquals.assertPartialText(
			key_productName = "${productName}",
			locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_PRODUCT_TABLE_PRODUCT",
			value1 = "${productName}");

		AssertTextEquals(
			key_productQuantity = "${productQuantity}",
			locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_PRODUCT_TABLE_QUANTITY",
			value1 = "${productQuantity}");

		AssertTextEquals.assertPartialText(
			key_productPrice = "${productPrice}",
			locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_PRODUCT_TABLE_PRICE",
			value1 = "${productPrice}");

		AssertTextEquals.assertPartialText(
			key_subtotalValue = "${subtotalValue}",
			locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_SUBTOTAL",
			value1 = "${subtotalValue}");

		if (isSet(deliveryValue)) {
			AssertTextEquals.assertPartialText(
				key_deliveryValue = "${deliveryValue}",
				locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_DELIVERY",
				value1 = "${deliveryValue}");
		}

		if (isSet(taxValue)) {
			AssertTextEquals(
				key_taxValue = "${taxValue}",
				locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_TAX",
				value1 = "${taxValue}");
		}

		AssertTextEquals.assertPartialText(
			key_totalValue = "${totalValue}",
			locator1 = "CommerceAccelerators#CHECKOUT_SUMMARY_TOTAL",
			value1 = "${totalValue}");
	}

}