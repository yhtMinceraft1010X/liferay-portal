@component-name = "portal-calendar"
definition {

	property custom.properties = "default.layout.template.id=1_column${line.separator}company.default.time.zone=America/Los_Angeles";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Calendar";

	var pageName = "Calendar Page";
	var portletName = "Calendar";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPage(
			pageName = "Calendar Page",
			sitePageType = "Widget Page");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "Calendar Page",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		Portlet.addPG(
			pageName = "Calendar Page",
			portletName = "Calendar");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Calendar Page");

			if (IsElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_GENERIC")) {
				CalendarEvent.tearDown();
			}

			Calendar.tearDown();

			CalendarConfiguration.tearDown();

			PagesAdmin.tearDownCP();
		}
	}

	@description = "LRQA-72024 - Verify that the calendar has Month view"
	@priority = "3"
	test CalendaHasMonthView {
		CalendarNavigator.gotoView(viewType = "Month");

		CalendarPage.viewTypeOfTableView(tableType = "Month");
	}

	@description = "LRQA-72024 - Verify that the calendar has Agenda view"
	@ignore = "Test Stub"
	@priority = "3"
	test CalendarHasAgendaView {
		CalendarNavigator.gotoView(viewType = "Agenda");

		CalendarPage.viewTypeOfTableView(tableType = "Mont");
	}

	@description = "LRQA-72024 - Verify that the calendar has Day view"
	@priority = "4"
	test CalendarHasDayView {
		CalendarNavigator.gotoView(viewType = "Day");

		CalendarPage.viewTypeOfTableView(tableType = "Day");
	}

	@description = "LRQA-72024 - Verify that the calendar has Week view"
	@priority = "3"
	test CalendarHasWeekView {
		CalendarNavigator.gotoView(viewType = "Week");

		CalendarPage.viewTypeOfTableView(tableType = "Week");
	}

	@description = "LRQA-72024 - Verify that the user can change the color of the Calendar"
	@priority = "3"
	test CanChangeCalendarColor {
		Calendar.tearDownColor();

		Calendar.changeColor(
			calendarType = "My Calendars",
			myCalendarColor = "668CD9",
			user = "Test Test");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.viewColor(
			calendarType = "My Calendars",
			myCalendarColor = "668CD9");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "Test Test",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewEventColor(
			eventBackgroundColorRgb = "(208, 219, 240)",
			eventFontColorRgb = "(104, 142, 217)",
			eventTitle = "Calendar Event Regular Title");
	}

	@description = "LRQA-72024 - Verify that the user can go back and forward on Calendar"
	@ignore = "Test Stub"
	@priority = "3"
	test CanGoBackAndForwardOnCalendar {

		// TODO LRQA-72033 CanGoBackAndForwardOnCalendar pending implementation

	}

	@description = "LRQA-72024 - Verify that the user can hide Events from a specific Calendar"
	@priority = "3"
	test CanHideEvents {
		property portal.upstream = "quarantine";

		CalendarNavigator.gotoAddEventViaMyCalendars(user = "Test Test");

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title1");

		CalendarEvent.publish();

		IFrame.closeFrame();

		CalendarNavigator.gotoAddEventViaCurrentSite(site = "Liferay DXP");

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title2");

		CalendarEvent.publish();

		IFrame.closeFrame();

		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event Title1");

		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event Title2");

		CalendarEvent.disableEventBySiteCalendarName(calendarName = "Liferay DXP");

		CalendarScheduler.viewSpecificEventNotPresent(eventTitle = "Calendar Event Title2");
	}

	@description = "LRQA-72024 - Verify that the user can hide/show the sidebar"
	@priority = "2"
	test CanHideShowSidebar {
		CalendarPage.viewMiniCalendarOnSideBar();

		CalendarPage.clickOnTheCaretLeftIcon();

		CalendarPage.viewNoMiniCalendarOnSideBar();
	}

	@description = "LRQA-72024 - Verify that a mini Calendar is displayed on sidebar"
	@priority = "3"
	test MiniCalendarIsDisplayed {
		CalendarNavigator.gotoView(viewType = "Month");

		CalendarNavigator.gotoToday();

		CalendarPage.viewMiniCalendarOnSideBar();

		CalendarPage.viewCurrentMonthByMiniCalendar();
	}

	@description = "LRQA-72024 - Verify that the Today button brings the user back for the current day"
	@priority = "3"
	test TodayButtonDisplaysCurrentDay {
		CalendarPage.viewCurrentDayForCalendarDay();

		CalendarPage.viewCurrentDayForCalendarWeek();

		CalendarPage.viewCurrentDayForCalendarMonth();

		CalendarPage.viewCurrentDayForCalendarAgenda();
	}

}