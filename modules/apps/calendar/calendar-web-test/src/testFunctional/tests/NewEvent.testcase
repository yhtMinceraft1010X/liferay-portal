@component-name = "portal-calendar"
definition {

	property custom.properties = "default.layout.template.id=1_column${line.separator}company.default.time.zone=America/Los_Angeles";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Calendar";

	var pageName = "Calendar Page";
	var portletName = "Calendar";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPage(
			pageName = "Calendar Page",
			sitePageType = "Widget Page");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "Calendar Page",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		Portlet.addPG(
			pageName = "Calendar Page",
			portletName = "Calendar");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Calendar Page");

			if (IsElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_GENERIC")) {
				CalendarEvent.tearDown();
			}

			Calendar.tearDown();

			Calendar.tearDownColor();

			CalendarResource.tearDown();

			CalendarConfiguration.tearDown();

			PagesAdmin.tearDownCP();

			JSONUser.tearDownNonAdminUsers();

			Site.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-64945."
	@priority = "3"
	test AddAfterClosingModal {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarNavigator.closeModal(modalTitle = "New Event");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Title");
	}

	@priority = "5"
	test AddAllDay {
		property portal.acceptance = "true";

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title");
	}

	@priority = "3"
	test AddAllDayRSVPYes {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewApprovedRSVP(
			eventTitle = "Calendar Event All Day Title",
			rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title");
	}

	@priority = "3"
	test AddAllDayWithRemindersEnabled {
		property portal.release = "false";

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			number1 = "5",
			number2 = "10",
			pageName = "Calendar Page",
			reminders = "true");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title");
	}

	@priority = "3"
	test AddAllDayWithTag {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			optionSet = "true",
			optionSetValue = "tag",
			pageName = "Calendar Page",
			specificOptionSetValue = "tag1");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day");

		CalendarEvent.viewDetailsTags(tagText = "tag1");
	}

	@priority = "3"
	test AddAllDayWithUserInviteAccept {
		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		PagesAdmin.openPagesAdmin(siteURLKey = "guest");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "userfn userln",
			calendarType = "Other Calendars");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn userln",
			user = "userfn userln");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.hideCurrentSiteCalendar();

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event All Day Title",
			rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title");
	}

	@description = "This is a use case for LPS-55163."
	@priority = "4"
	test AddAsPowerUserWhenSiteMemberNoViewPermissions {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.removeViewPermissions(
			calendarName = "${siteName}",
			calendarType = "Current Site Calendars",
			roleTitle = "Site Member",
			site = "${siteName}");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event");

		CalendarEvent.viewAvailableCalendars(availableCalendarList = "userfn userln");

		CalendarEvent.viewUnavailableCalendarsNotPresent(unavailableCalendarList = "Test Test,Liferay");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@description = "This is a use case for LPS-44540."
	@priority = "5"
	test AddEventTwiceViaMyCalendars {
		CalendarNavigator.gotoAddEventViaMyCalendars(user = "Test Test");

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title1");

		CalendarEvent.publish();

		IFrame.closeFrame();

		CalendarEvent.view(eventTitle = "Calendar Event Title1");

		CalendarNavigator.gotoAddEventViaMyCalendars(user = "Test Test");

		CalendarEvent.add(
			eventTitle = "Calendar Event Title2",
			eventType = "Regular",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Title2");
	}

	@priority = "4"
	test AddRegular {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddRegularRSVPYes {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewApprovedRSVP(
			eventTitle = "Calendar Event Regular Title",
			rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddRegularWithRemindersEnabled {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			number1 = "5",
			number2 = "10",
			pageName = "Calendar Page",
			reminders = "true");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewEventWithReminders(eventTitle = "Calendar Event Regular Title");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddRegularWithTag {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "tag",
			pageName = "Calendar Page",
			specificOptionSetValue = "tag1");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular");

		CalendarEvent.viewDetailsTags(tagText = "tag1");
	}

	@priority = "4"
	test AddRegularWithUserInvite {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddRegularWithUserInviteAccept {
		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "userfn userln",
			calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn userln",
			user = "userfn userln");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event Regular Title",
			rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddRepeating {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Repeating Title");

		CalendarNavigator.gotoEventDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating");

		CalendarEvent.viewRepeatingEventViaViewDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1");
	}

	@priority = "5"
	test AddRepeatingMonthly2Times {
		property portal.acceptance = "true";

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Monthly",
			numberOfOccurrences = "2",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			numberOfOccurrences = "2");
	}

	@priority = "3"
	test AddRepeatingRSVPYes {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewApprovedRSVP(
			eventTitle = "Calendar Event Repeating Title",
			rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			frequency = "Daily",
			numberOfOccurrences = "1");
	}

	@priority = "4"
	test AddRepeatingWeekly2Times {
		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.editTimeZonePacific();

		CalendarConfiguration.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Weekly",
			numberOfOccurrences = "2",
			pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			frequency = "Weekly",
			numberOfOccurrences = "2");

		CalendarNavigator.gotoEventDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating");

		CalendarEvent.viewRepeatingEventViaViewDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Weekly",
			numberOfOccurrences = "2");
	}

	@description = "This is a use case for LPS-56337."
	@priority = "3"
	test AddRepeatingWithEndDateBeforeStartDate {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Repeating Event");

		CalendarEvent.setRepeating(
			endOnDate = "10/01/2015",
			endOnDateSummary = "October 1, 2015",
			frequency = "Daily");

		CalendarEvent.viewRepeatingEventErrorMessage();
	}

	@priority = "3"
	test AddRepeatingWithRemindersEnabled {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			number1 = "5",
			number2 = "10",
			numberOfOccurrences = "1",
			pageName = "Calendar Page",
			reminders = "true");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewEventWithReminders(eventTitle = "Calendar Event Repeating Title");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			frequency = "Daily",
			numberOfOccurrences = "1");
	}

	@priority = "3"
	test AddRepeatingWithTag {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			optionSet = "true",
			optionSetValue = "tag",
			pageName = "Calendar Page",
			specificOptionSetValue = "tag1");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating");

		CalendarEvent.viewDetailsTags(tagText = "tag1");
	}

	@priority = "3"
	test AddRepeatingWithUserInviteAccept {
		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "userfn userln",
			calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn userln",
			user = "userfn userln");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event Repeating Title",
			rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			frequency = "Daily",
			numberOfOccurrences = "1");
	}

	@description = "This is a use case for LPS-51402."
	@priority = "4"
	test AddRepeatingYearly {
		property portal.release = "false";

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Repeating Title");

		CalendarEvent.setDates(
			endDate = "02/21/2016",
			startDate = "02/21/2016");

		CalendarEvent.setTimes(
			endDateTime = "02:00 AM",
			startDateTime = "01:00 AM");

		CalendarEvent.setRepeatingYearly(
			frequency = "Yearly",
			yearlyRecurrenceSummary = "Yearly, On The Third Sunday Of February",
			yearlyRecurrenceSummaryPreviousDay = "Yearly, On The Third Saturday Of February");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMonthViaSmallCalendar(dateMonth = "February 2016");

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "2");

		CalendarEvent.viewYearly(eventTitle = "Calendar Event Repeating Title");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.selectSpecificEventNoRefresh(eventTitle = "Calendar Event Repeating Title");

		CalendarScheduler.gotoDetailsViaDialogBox();

		CalendarEvent.viewRepeatingEventViaViewDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Yearly",
			yearlyRecurrenceSummary = "Yearly, on the Third Sunday of February");
	}

	@priority = "4"
	test AddViaScheduler {
		CalendarNavigator.gotoView(viewType = "Day");

		CalendarScheduler.addEventToday(
			eventTitle = "Calendar Event Today Day",
			viewType = "Day");

		CalendarEvent.view(eventTitle = "Calendar Event Today Day");

		CalendarEvent.tearDownNoCloseMessage();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.addEventToday(
			eventTitle = "Calendar Event Today Week",
			viewType = "Week");

		CalendarEvent.view(eventTitle = "Calendar Event Today Week");

		CalendarEvent.tearDownNoCloseMessage();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Month");

		CalendarScheduler.addEventToday(
			eventTitle = "Calendar Event Today Month",
			viewType = "Month");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event Today Month");
	}

	@priority = "4"
	test AddWithRelatedAssetViaAssetPublisher {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPage(
			pageName = "AP Page",
			sitePageType = "Widget Page");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "AP Page",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "AP Page");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoPage(pageName = "AP Page");

		Portlet.addPG(portletName = "Asset Publisher");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		AssetPublisherPortlet.addAsset(assetType = "Calendar Event");

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarEvent.gotoConfigureRelatedAssets();

		RelatedAssets.selectAsset(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry");

		Button.clickSaveAsDraft();

		Alert.viewSuccessMessage();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event Title");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "AP Page");

		CalendarEvent.viewViaAssetPublisher(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event Title");

		AssetPublisherPortlet.viewPG(
			assetContent = "Blogs Entry Content",
			assetTitle = "Blogs Entry Title",
			relatedAssetTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "AP Page");

		AssetPublisherPortlet.viewPG(
			assetContent = "Starts",
			assetTitle = "Calendar Event Title",
			relatedAssetTitle = "Blogs Entry Title");

		CalendarEvent.viewDetailsInPortlet(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event Title",
			relatedAssetTitle = "Blogs Entry Title");
	}

	@description = "Verify that the user can add an Event with a workflow assigned"
	@priority = "4"
	test CanAddEventWithWorkflowAssigned {
		Workflow.openWorkflowProcessBuilderConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Calendar Event");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarEvent.setDatesToday();

		CalendarEvent.setTimes(
			endDateTime = "08:00 PM",
			startDateTime = "07:00 PM");

		Button.clickSubmitForPublication();

		IFrame.closeFrame();

		CalendarEvent.view(eventTitle = "Calendar Event Title");
	}

	@description = "Verify that the user can Approve an Event"
	@priority = "4"
	test CanApproveEvent {
		Workflow.openWorkflowProcessBuilderConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Calendar Event");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarEvent.setDatesToday();

		CalendarEvent.setTimes(
			endDateTime = "08:00 PM",
			startDateTime = "07:00 PM");

		Button.clickSubmitForPublication();

		IFrame.closeFrame();

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEventDetails(eventTitle = "Calendar Event Title");

		CalendarEvent.viewStatusViaDetails(status = "Approved");
	}

	@description = "This is a use case for LPS-45616."
	@priority = "4"
	test CancelRepeatingDialog {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Non-Repeating Event 1");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.gotoRepeatConfiguration();

		KeyPress(
			locator1 = "CalendarEditEvent#REPEAT_ENDS_NEVER_RADIO",
			value1 = "\ESCAPE");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.viewTitle(eventTitle = "Calendar Non-Repeating Event 1");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "${pageName}");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Non-Repeating Event 2");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.gotoRepeatConfiguration();

		CalendarEvent.selectRepeatFrequency(frequency = "Daily");

		KeyPress(
			locator1 = "CalendarEditEvent#REPEAT_ENDS_NEVER_RADIO",
			value1 = "\ESCAPE");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.viewTitle(eventTitle = "Calendar Non-Repeating Event 2");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Non-Repeating Event 3");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.gotoRepeatConfiguration();

		Button.clickCancel();

		CalendarEvent.viewTitle(eventTitle = "Calendar Non-Repeating Event 3");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.publish();
	}

	@description = "LRQA-71887 - Verify that the user can edit the event after it has been published"
	@priority = "4"
	test CanEditEvent {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarEvent.setDatesToday();

		CalendarEvent.setTimes(
			endDateTime = "08:00 PM",
			startDateTime = "07:00 PM");

		Button.clickPublish();

		IFrame.closeFrame();

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		CalendarEvent.addDescription(
			eventTitle = "Calendar Event Title",
			fieldName = "Description",
			fieldValue = "Calendar Event Description");

		Button.clickPublish();

		IFrame.closeFrame();

		CalendarNavigator.gotoEventDetails(eventTitle = "Calendar Event Title");

		CalendarEvent.viewDescription(eventDescription = "Calendar Event Description");
	}

	@description = "LRQA-71887 - Verify that the user can Reject an event"
	@priority = "3"
	test CanRejectEvent {
		Workflow.openWorkflowProcessBuilderConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Calendar Event");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarEvent.setDatesToday();

		CalendarEvent.setTimes(
			endDateTime = "08:00 PM",
			startDateTime = "07:00 PM");

		Button.clickSubmitForPublication();

		IFrame.closeFrame();

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEventDetails(eventTitle = "Calendar Event Title");

		CalendarEvent.viewStatusViaDetails(status = "Pending");
	}

	@description = "LRQA-71887 - Verify that the user can save a new event as Draft"
	@priority = "4"
	test CanSaveAsDraft {
		CalendarNavigator.gotoAddEvent();

		Button.viewPresent(button = "Save as Draft");

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarEvent.setDatesToday();

		CalendarEvent.setTimes(
			endDateTime = "03:00 PM",
			startDateTime = "02:00 PM");

		Button.clickSaveAsDraft();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEventDetails(eventTitle = "Calendar Event Title");

		CalendarEvent.viewStatusViaDetails(status = "Draft");
	}

	@description = "LRQA-71887 - Verify that the user can select Start / End dates from the datepicker component"
	@ignore = "Test Stub"
	@priority = "3"
	test CanSelectStartEndFromDatepicker {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title");

		CalendarEvent.setSpecificDate(
			endDay = "14",
			startDay = "14");

		var displayDateDay = "14";
		var displayDateMonth = DateUtil.getFormattedCurrentDate("MM");
		var displayDateYear = DateUtil.getCurrentYear();
		var displayDate = "${displayDateMonth}/${displayDateDay}/${displayDateYear}";

		CalendarEvent.viewStartsDate(startDate = "${displayDate}");

		CalendarEvent.viewEndsDate(endDate = "${displayDate}");

		Button.clickPublish();

		IFrame.closeFrame();

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "14");

		CalendarEvent.viewEventNotToday(eventTitle = "Calendar Event Title");
	}

	@description = "This is a use case for LPS-46700."
	@priority = "3"
	test InviteAndViewAdditionalUsers {
		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn userln,Test Test");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");

		CalendarEvent.viewUsers(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			usersList = "userfn userln,Test Test");
	}

	@priority = "4"
	test InviteUsersAndViewResponse {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "usersn1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "usersn2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "usersn3@liferay.com",
			userFirstName = "userfn3",
			userLastName = "userln3",
			userScreenName = "usersn3");

		for (var userScreenName : list "usersn1,usersn2,usersn3") {
			ApplicationsMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations");

			User.editPasswordCP(
				userEmailAddress = "${userScreenName}@liferay.com",
				userScreenName = "${userScreenName}");
		}

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn1 userln1,userfn2 userln2,userfn3 userln3");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event Title",
			rsvp = "Maybe");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event Title",
			rsvp = "No");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn3@liferay.com",
			userLoginFullName = "userfn3 userln3");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event Title",
			rsvp = "Yes");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event Title");

		CalendarEvent.viewRSVPAccepted(resourceName = "${siteName}");

		CalendarEvent.viewRSVPAccepted(resourceName = "userfn3 userln3");

		CalendarEvent.viewRSVPDeclined(resourceName = "userfn2 userln2");

		CalendarEvent.viewRSVPMaybe(resourceName = "userfn1 userln1");
	}

}