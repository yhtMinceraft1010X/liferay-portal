@component-name = "portal-lima"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "SEO";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This ensures that the OG preview is updated when the image is changed."
	@priority = "5"
	@refactordone
	test CanPreviewAfterReplacingImage {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			dontSave = "true",
			pageName = "Test Page Name",
			uploadFileName = "Document_1.png");

		Page.viewPreview(
			htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
			key_imageName = "Document_1.png",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			dontSave = "true",
			pageName = "Test Page Name",
			uploadFileName = "Document_2.jpeg");

		Page.viewPreview(
			htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
			key_imageName = "Document_2.jpeg",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.viewNoPreviewImage(imageName = "Document_1.png");

		Button.click(button = "Save");

		Page.viewPreview(
			htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
			key_imageName = "Document_2.jpeg",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.viewNoPreviewImage(imageName = "Document_1.png");
	}

	@description = "This ensures that the OG preview is inherited from the SEO."
	@priority = "5"
	@refactordone
	test CanPreviewInheritedSEO {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "SEO",
			siteURLKey = "test-site-name");

		SERPPreview.addGeneralSettings(
			description = "Page Description",
			htmlTitle = "Page HTML Title");

		Button.clickSave();

		Navigator.gotoNavTab(navTab = "Open Graph");

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - Test Site Name - ${siteName}",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.configureOpenGraph(
			customDescription = "This is a custom description",
			customTitle = "This is a custom title");

		OpenGraph.disableOpenGraphCustomSettings(
			customDescription = "This is a custom description",
			customTitle = "This is a custom title");

		Button.clickSave();

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - Test Site Name - ${siteName}",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''"og:title" content="Page HTML Title - Test Site Name - ${siteName}","og:description" content="Page Description"''');
	}

	@description = "This ensures that escape characters are present correctly in the preview."
	@priority = "3"
	@refactordone
	test CanPreviewWithEscapeCharacters {
		var portalURL = PropsUtil.get("portal.url");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page Name");

		Navigator.openToGroupPagesPortlet(
			groupName = "Guest",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "guest");

		OpenGraph.configureOpenGraph(
			customDescription = '''description@#$%^&amp;*()~`1234567890''',
			customTitle = '''@#$%^&amp;*()~`1234567890title''',
			dontSave = "true");

		Page.viewPreview(
			description = '''description@#$%^&amp;*()~`1234567890''',
			htmlTitle = '''@#$%^&amp;*()~`1234567890title''',
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}");

		Button.click(button = "Save");

		Page.viewPreview(
			description = '''description@#$%^&amp;*()~`1234567890''',
			htmlTitle = '''@#$%^&amp;*()~`1234567890title''',
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}");
	}

	@description = "This test ensures that ellipses are shown in the preview when the text limit is reached."
	@priority = "5"
	@refactordone
	test CanPreviewWithLongInputs {
		property portal.acceptance = "quarantine";

		var portalURL = PropsUtil.get("portal.url");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Long Test Page Name To Check The URL");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Long Test Page Name To Check The URL",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customDescription = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web applications called social applications",
			customTitle = "Liferay Portal provides an excellent platform for building web applications",
			dontSave = "true",
			pageName = "Long Test Page Name To Check The URL");

		Page.viewPreview(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web ap…",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name",
			truncatedHtmlTitle = "true",
			truncatedURL = "true");

		Button.click(button = "Save");

		Page.viewPreview(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web ap…",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name",
			truncatedHtmlTitle = "true",
			truncatedURL = "true");
	}

	@description = "This ensures that the OG preview is returned to default when deselecting the customize checkboxes."
	@priority = "5"
	@refactordone
	test CanReturnToDefault {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customDescription = "This is a custom description",
			customTitle = "This is a custom title");

		OpenGraph.disableOpenGraphCustomSettings(
			customDescription = "This is a custom description",
			customTitle = "This is a custom title");

		Button.clickSave();

		Page.viewPreview(
			htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.viewNoPreviewDescription();
	}

	@description = "This test ensures that a user can preview Open Graph tags with Arabic."
	@priority = "4"
	@refactordone
	test CanViewArabicTranslation {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.changeLocale(
			fieldName = "openGraphTitleBoundingBox",
			locale = "ar-SA");

		OpenGraph.configureOpenGraph(
			customDescription = "وصف الاختبار",
			customTitle = "عنوان الاختبار",
			dontSave = "true");

		Page.viewPreview(
			description = "وصف الاختبار",
			htmlTitle = "عنوان الاختبار",
			locale = "ar-SA",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");
	}

	@description = "This ensures that the user can customize OG tags."
	@priority = "5"
	@refactordone
	test CanViewPreview {
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		OpenGraph.configureOpenGraph(
			customDescription = "Custom Description",
			customImage = "true",
			customTitle = "Custom Title",
			dontSave = "true",
			pageName = "Test Page Name",
			uploadFileName = "Document_1.jpg");

		Page.viewPreview(
			description = "Custom Description",
			htmlTitle = "Custom Title",
			key_imageName = "Document_1.jpg",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		Button.click(button = "Save");

		Page.viewPreview(
			description = "Custom Description",
			htmlTitle = "Custom Title",
			key_imageName = "Document_1.jpg",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");
	}

	@description = "This test covers LPS-106118. It ensures that the special images can be uploaded and previewed."
	@priority = "4"
	@refactordone
	test CanViewSpecialImages {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			portlet = "Open Graph",
			siteURLKey = "test-site-name");

		for (var imageName : list "Document_1.svg,high_resolution_photo.jpg") {
			OpenGraph.configureOpenGraph(
				customImage = "true",
				pageName = "Test Page Name",
				uploadFileName = "${imageName}");

			Page.viewPreview(
				htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
				key_imageName = "${imageName}",
				openGraph = "true",
				portalURL = "${portalURL}",
				siteNameURL = "test-site-name");
		}
	}

	@description = "This test ensures that OG can use the translated language that SEO has saved."
	@priority = "5"
	@refactordone
	test CanViewTranslatedLanguages {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page",
			portlet = "SEO",
			siteURLKey = "test-site-name");

		SERPPreview.addGeneralSettings(
			description = "Page Description",
			htmlTitle = "Page HTML Title");

		OpenGraph.changeLocale(
			fieldName = "titleBoundingBox",
			locale = "ca-ES");

		SERPPreview.addGeneralSettings(
			description = "Descripción de la Prueba",
			htmlTitle = "Título de la Prueba");

		Button.clickSave();

		OpenGraph.changeLocale(
			fieldName = "titleBoundingBox",
			locale = "ja-JP");

		SERPPreview.addGeneralSettings(
			description = "テスト記述",
			htmlTitle = "テストhtmlタイトル");

		Page.viewPreview(
			description = "テスト記述",
			htmlTitle = "テストhtmlタイトル - Test Site Name - ${siteName}",
			locale = "ja-JP",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		Button.clickSave();

		OpenGraph.changeLocale(
			fieldName = "titleBoundingBox",
			locale = "ja-JP");

		Page.viewPreview(
			description = "テスト記述",
			htmlTitle = "テストhtmlタイトル - Test Site Name - ${siteName}",
			locale = "ja-JP",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.changeLocale(
			fieldName = "openGraphTitleBoundingBox",
			locale = "ca-ES");

		Page.viewPreview(
			description = "Descripción de la Prueba",
			htmlTitle = "Título de la Prueba - Test Site Name - ${siteName}",
			locale = "ca-ES",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.changeLocale(
			fieldName = "openGraphTitleBoundingBox",
			locale = "ja-JP");

		Page.viewPreview(
			description = "テスト記述",
			htmlTitle = "テストhtmlタイトル - Test Site Name - ${siteName}",
			locale = "ja-JP",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");
	}

	@description = "This test ensures that OG shows default translated language when switching to unsaved translations."
	@priority = "5"
	@refactordone
	test CanViewUntranslatedLanguage {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		Navigator.openToGroupPagesPortlet(
			groupName = "Test Site Name",
			layoutName = "Test Page",
			portlet = "SEO",
			siteURLKey = "test-site-name");

		SERPPreview.addGeneralSettings(
			description = "Page Description",
			htmlTitle = "Page HTML Title");

		OpenGraph.changeLocale(
			fieldName = "titleBoundingBox",
			locale = "ja-JP");

		SERPPreview.addGeneralSettings(
			description = "テスト記述",
			htmlTitle = "テストhtmlタイトル");

		Button.clickSave();

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.changeLocale(
			fieldName = "openGraphTitleBoundingBox",
			locale = "fr-FR");

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - Test Site Name - ${siteName}",
			locale = "fr-FR",
			openGraph = "true",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");
	}

}