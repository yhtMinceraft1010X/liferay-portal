@component-name = "portal-document-management"
definition {

	property osgi.module.configuration.file.names = "com.liferay.document.library.item.selector.web.internal.configuration.FFFolderItemSelectorGroupSelectorConfiguration.config";
	property osgi.module.configurations = "enabled=B&quot;true&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Site Name");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Documents and Media Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name",
			layoutName = "Documents and Media Page",
			widgetName = "Documents and Media");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.enableActionsMenuOnPortlet();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			Site.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This ensures that a subfolder stored in the asset library folder can be accessed via DM widget on a connected site."
	@priority = "5"
	test CanAccessSubfolderFromSiteWidget {
		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Depot Folder Name",
			groupName = "Test Depot Name");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Subfolder Description",
			dmFolderName = "Depot Subfolder Name",
			groupName = "Test Depot Name",
			parentFolderName = "Depot Folder Name");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "Depot Folder Name");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMNavigator.gotoFolder(dmFolderName = "Depot Subfolder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title");

		DMDocument.viewPG(dmDocumentTitle = "DM Document Title");

		DepotNavigator.openToDMFolder(
			depotName = "Test Depot Name",
			folderName = "Depot Subfolder Name",
			parentFolderName = "Depot Folder Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");
	}

	@description = "This ensures that assets stored in the asset library folder can be edited via DM widget on a connected site."
	@priority = "5"
	test CanEditAssetFromSiteWidget {
		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Depot Folder Name",
			groupName = "Test Depot Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "Depot Folder Name",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "Depot Folder Name");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.editPG(
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.viewPG(dmDocumentTitle = "DM Document Title Edit");

		DepotNavigator.openToDMFolder(
			depotName = "Test Depot Name",
			folderName = "Depot Folder Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title Edit");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title Edit");
	}

	@description = "This ensures that assets stored in the asset library folder will not be displayed in DM widget once the site is disconnected."
	@priority = "5"
	test CannotViewAssetsFromWidgetAfterDisconnecting {
		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Depot Folder Name",
			groupName = "Test Depot Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "Depot Folder Name",
			groupName = "Test Depot Name",
			mimeType = "video/mp4",
			sourceFileName = "Document_1.mp4");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "Depot Folder Name");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.viewPG(dmDocumentTitle = "DM Document Title");

		JSONDepot.disconnectSite(groupName = "Site Name");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		LexiconEntry.viewNoEntry(rowEntry = "DM Document Title");

		DMPortlet.viewInvalidRootFolder();
	}

	@description = "This ensures that assets stored in the asset library folder can be removed via DM widget on a connected site."
	@priority = "5"
	test CanRemoveAssetFromSiteWidget {
		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Depot Folder Name",
			groupName = "Test Depot Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Depot Name",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "Home");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.deletePG(dmDocumentTitle = "DM Document Title");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMFolder.deletePG(dmFolderName = "Depot Folder Name");

		Navigator.openSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMPortlet.viewDefaultPG();

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMDocument.viewDefault();
	}

}