@component-name = "portal-document-management"
definition {

	property osgi.module.configuration.file.names = "com.liferay.document.library.item.selector.web.internal.configuration.FFFolderItemSelectorGroupSelectorConfiguration.config";
	property osgi.module.configurations = "enabled=B&quot;true&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		JSONStaging.enableLocalStaging(
			groupName = "Test Depot Name",
			site = "false");

		JSONStaging.enableLocalStaging(groupName = "Site Name");
	}

	tearDown {
		Staging.disableStagingSite(siteName = "Site Name");

		Depot.disableStagingDepot(depotName = "Test Depot Name");

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");

			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			User.logoutPG();
		}
	}

	@description = "This ensures that an image stored in an asset library can be deleted and republished in Media Gallery when local staging is enabled."
	@priority = "4"
	test CanPublishDeletedImage {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name (Staging)",
			layoutName = "Test Page",
			site = "false",
			widgetName = "Media Gallery");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		JSONDocument.moveToRecycleBin(
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name (Staging)",
			site = "false");

		DepotNavigator.openDepotRecycleBinAdminStaging(depotName = "Test Depot Name");

		RecycleBin.deleteCP(
			assetName = "Document_2.jpg",
			assetType = "Document");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.viewDefault();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.viewDefault();
	}

	@description = "This ensures that an image stored in a DM folder of asset library can be deleted and republished in Media Gallery when local staging is enabled."
	@priority = "4"
	test CanPublishDeletedImageFromFolder {
		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Depot Folder Name",
			groupName = "Test Depot Name-staging");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "Depot Folder Name",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name (Staging)",
			layoutName = "Test Page",
			site = "false",
			widgetName = "Media Gallery");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "Depot Folder Name");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		JSONDocument.moveToRecycleBin(
			dmDocumentTitle = "Document_2.jpg",
			folderName = "Depot Folder Name",
			groupName = "Test Depot Name (Staging)",
			site = "false",
			stagingDepotName = "Test Depot Name");

		DepotNavigator.openDepotRecycleBinAdminStaging(depotName = "Test Depot Name");

		RecycleBin.deleteCP(
			assetName = "Document_2.jpg",
			assetType = "Document");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.viewDefault();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.viewDefault();
	}

	@description = "This ensures that an image stored in an asset library can be edited and republished in Media Gallery when local staging is enabled."
	@priority = "4"
	test CanPublishEditedImage {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name (Staging)",
			layoutName = "Test Page",
			site = "false",
			widgetName = "Media Gallery");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DMDocument.editCP(
			dmDocumentFileEdit = "Document_1.jpg",
			dmDocumentFileNameEdit = "Document_1.jpg",
			dmDocumentTitle = "Document_2.jpg",
			dmDocumentTitleEdit = "Document_1.jpg");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");
	}

	@description = "This ensures that an image stored in a DM folder of asset library can be edited and republished in Media Gallery when local staging is enabled."
	@priority = "4"
	test CanPublishEditedImageFromFolder {
		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Depot Folder Name",
			groupName = "Test Depot Name-staging");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "Depot Folder Name",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name (Staging)",
			layoutName = "Test Page",
			site = "false",
			widgetName = "Media Gallery");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "Depot Folder Name");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		DepotNavigator.openToDMFolder(
			depotName = "Test Depot Name",
			folderName = "Depot Folder Name",
			staging = "true");

		DMDocument.editCP(
			dmDocumentFileEdit = "Document_1.jpg",
			dmDocumentFileNameEdit = "Document_1.jpg",
			dmDocumentTitle = "Document_2.jpg",
			dmDocumentTitleEdit = "Document_1.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");
	}

	@description = "This ensures that an image stored in an asset library can be published in Media Gallery when local staging is enabled."
	@priority = "5"
	test CanPublishImage {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name (Staging)",
			layoutName = "Test Page",
			site = "false",
			widgetName = "Media Gallery");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "true");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");
	}

	@description = "This ensures that the folders stored in different asset libraries can be changed and republished in Media Gallery when local staging is enabled."
	@priority = "4"
	test CanPublishImageAfterChangingDepot {
		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name 2");

		JSONStaging.enableLocalStaging(
			groupName = "Test Depot Name 2",
			site = "false");

		JSONDepot.connectSite(
			depotName = "Test Depot Name 2 (Staging)",
			groupName = "Site Name (Staging)",
			site = "false");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name-staging");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name 2",
			groupName = "Test Depot Name 2-staging");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_1.jpg",
			folderName = "DM Folder Name",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "DM Folder Name 2",
			groupName = "Test Depot Name 2-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name 2");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name (Staging)",
			layoutName = "Test Page",
			site = "false",
			widgetName = "Media Gallery");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "DM Folder Name");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name 2",
			dmRootFolderName = "DM Folder Name 2");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");
	}

	@description = "This ensures that the folders stored in an asset library can be changed and republished in Media Gallery when local staging is enabled."
	@priority = "4"
	test CanPublishImageAfterChangingRootFolder {
		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name-staging");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_1.jpg",
			folderName = "DM Folder Name",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name 2",
			groupName = "Test Depot Name-staging");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "DM Folder Name 2",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name (Staging)",
			layoutName = "Test Page",
			site = "false",
			widgetName = "Media Gallery");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "DM Folder Name");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			breadcrumbName = "Test Depot Name",
			dmRootFolderName = "DM Folder Name 2",
			selectBreadcrumb = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");
	}

	@description = "This ensures that an image stored in a DM folder of asset library can be published in Media Gallery when local staging is enabled."
	@priority = "5"
	test CanPublishImageFromFolder {
		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name-staging");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "DM Folder Name",
			groupName = "Test Depot Name-staging",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name (Staging)",
			layoutName = "Test Page",
			site = "false",
			widgetName = "Media Gallery");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "DM Folder Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");
	}

}