definition {

	macro _gotoPendingFilter {
		Pause(locator1 = "5000");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Pending");
	}

	macro _tearDownWorkflow {
		var noWorkflow = "No Workflow";

		if (IsElementPresent(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS")) {
			LexiconEntry.gotoEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Knowledge Base Article");

			Select(
				key_workflowResourceValue = "Knowledge Base Article",
				locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
				value1 = "${noWorkflow}");

			Button.clickSave();
		}

		for (var workflowResourceValue : list "Blogs Entry,Calendar Event,Comment,Content Page,Knowledge Base Article,Message Boards Message,Page Revision,Web Content Article,Wiki Page") {
			AssertClick.pauseAssertTextClickAt(
				key_rowEntry = "${workflowResourceValue}",
				locator1 = "Button#EDIT_ROW",
				value1 = "Edit");

			var key_workflowResourceValue = "${workflowResourceValue}";

			Select(
				locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
				value1 = "${noWorkflow}");

			AssertClick(
				locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SAVE",
				value1 = "Save");
		}
	}

	macro _viewActivities {
		var key_workflowActivityComment = "${workflowActivityComment}";
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertClick(
			locator1 = "MyWorkflowTasksTask#ACTIVITIES",
			value1 = "Activities");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#ACTIVITIES_LINE",
			value1 = "${workflowActivityComment}");
	}

	macro addAssigneeToRegularRole {
		Role._goToRoleAssigneeType(
			assigneeType = "${assigneeType}",
			roleTitle = "${roleTitle}");

		LexiconEntry.gotoAdd();

		WaitForLiferayEvent.initializeLiferayEventLog();

		SelectFrame(locator1 = "IFrame#SELECT_ASSIGNEES");

		Search.searchCP(searchTerm = "${assigneeName}");

		var key_userScreenName = "${assigneeName}";

		AssertTextEquals(
			locator1 = "RolesAssignMembers#USER_TABLE_SCREEN_NAME",
			value1 = "${assigneeName}");

		var key_assigneeName = "${assigneeName}";

		Check(locator1 = "RolesAssignMembers#ADD_ASSIGNEE_TABLE_CHECKBOX");

		SelectFrameTop(value1 = "relative=top");

		Button.clickAdd();

		Alert.viewSuccessMessage();
	}

	macro addNewDefinition {
		LexiconEntry.gotoAdd();

		PortletEntry.inputTitle(title = "${workflowDefinitionTitle}");
	}

	macro approveTaskByActions {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			multipleTasks = "${multipleTasks}",
			taskPosition = "${taskPosition}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.gotoTaskAssignedToMeActionsCmd(
			multipleTasks = "${multipleTasks}",
			taskPosition = "${taskPosition}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}");

		var menuItem = "Approve";

		if (isSet(workflowDefinitionTask)) {
			var menuItem = "${workflowDefinitionTask}";
		}
		else if (isSet(boardWorkflowTask)) {
			var menuItem = "Approve ${boardWorkflowTask}";
		}

		MenuItem.click(menuItem = "${menuItem}");

		IFrame.selectConfigurationFrame();

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = "${workflowActivityComment}";

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}");
		}

		Workflow.confirmWorkflowAction();

		Pause(locator1 = "1000");

		Workflow.viewCompletedTask(
			completedTask = "${completedTask}",
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			multipleTasks = "${multipleTasks}",
			taskPosition = "${taskPosition}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Pause(locator1 = "1000");

		if (isSet(workflowActivityComment)) {
			Workflow.gotoCompletedFilter();

			if (isSet(workflowOrder)) {
				Workflow.clickRevertSortDirection();

				Pause(locator1 = "1000");
			}

			Workflow._viewActivities(
				workflowActivityComment = "${workflowActivityComment}",
				workflowAssetTitle = "${workflowAssetTitle}");
		}
	}

	macro approveTaskByDetails {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssignedTo = "${workflowAssignedTo}",
			workflowTask = "${workflowTask}");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Approve");

		Workflow.confirmWorkflowAction();

		Pause(locator1 = "1000");

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");
	}

	macro assertInfoItem {
		var taskId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");
		var creationDate = selenium.getText("//td[contains(text(),' AM')]|//td[contains(text(),' PM')]");
		var key_dueDate = "${key_dueDate}";
		var key_itemSubject = "${key_itemSubject}";
		var key_processStep = "${key_processStep}";
		var key_assignee = "${key_assignee}";
		var key_createdBy = "${key_createdBy}";

		AssertElementPresent(
			key_columnName = "ID",
			key_fieldName = "${taskId}",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_TH");

		AssertElementPresent(
			key_columnName = "Due Date",
			key_fieldName = "${key_dueDate}",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");

		AssertElementPresent(
			key_columnName = "Item Subject",
			key_fieldName = "${key_processStep}",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");

		AssertElementPresent(
			key_columnName = "Process Step",
			key_fieldName = "${key_processStep}",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_TH");

		AssertElementPresent(
			key_columnName = "Assignee",
			key_fieldName = "${key_assignee}",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");

		AssertElementPresent(
			key_columnName = "Created By",
			key_fieldName = "${key_createdBy}",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");

		AssertElementPresent(
			key_columnName = "Creation Date",
			key_fieldName = "${creationDate}",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSERT_SPAN");
	}

	macro assignBlogEntriesToUsers {
		var iterator = "1";
		var numberOfBlogInstances = ${numberOfBlogInstances} + 1;
		var numberOfUsers = ${numberOfUsers} + 1;
		var userCount = "1";

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		while ("${iterator}" != "${numberOfBlogInstances}") {
			if ("${userCount}" == "${numberOfUsers}") {
				var userCount = "1";
			}

			Workflow.assignTaskToUser(
				assetTitle = "Blogs Entry Title",
				assetType = "Blogs Entry",
				assigneeName = "${userCount}user (${userCount}user user${userCount})",
				workflowTask = "Review");

			var iterator = ${iterator} + 1;
			var userCount = ${userCount} + 1;
		}
	}

	macro assignByDetails {
		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to...");

		AssertTextEquals(
			locator1 = "IFrame#DIALOG_BOX",
			value1 = "Assign to...");

		IFrame.selectConfigurationFrame();

		Select(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_ASSIGN_TO_SELECT",
			value1 = "${user}");

		if (isSet(comment)) {
			Type(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${comment}");
		}

		Button.clickDone();

		Alert.viewSuccessMessage();

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	macro assignTaskToUser {
		var key_assetTitle = "${assetTitle}";
		var key_assetType = "${assetType}";
		var key_assigneeName = "${assigneeName}";
		var key_workflowTask = "${workflowTask}";

		Workflow.viewPendingTasks(
			workflowAssetTitle = "${assetTitle}",
			workflowAssetType = "${assetType}",
			workflowTask = "${workflowTask}");

		Workflow.assignByDetails(user = "${assigneeName}");
	}

	macro assignToMeTaskByActions {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		WaitForLiferayEvent.initializeLiferayEventLog();

		Workflow.gotoTaskAssignedToMyRolesActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}");

		MenuItem.click(menuItem = "Assign to Me");

		IFrame.selectConfigurationFrame();

		if (isSet(workflowActivityComment)) {
			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}");
		}

		Workflow.confirmWorkflowAction();

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			multipleTasks = "${multipleTasks}",
			taskPosition = "${taskPosition}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		if (isSet(workflowActivityComment)) {
			Workflow._viewActivities(
				workflowActivityComment = "${workflowActivityComment}",
				workflowAssetTitle = "${workflowAssetTitle}");
		}
	}

	macro assignToMeTaskByDetails {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.viewTaskAssignedToMyRolesDetails(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		Click(locator1 = "Icon#ANGLE_LEFT_BACK");

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");
	}

	macro clickRevertSortDirection {
		Click(locator1 = "MyWorkflowTasks#REVERSE_SORT_DIRECTION_BUTTON");
	}

	macro completeWorkflowBlogInstance {
		var key_workflowInstanceTitle = "${workflowInstanceName}";

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "${key_workflowInstanceTitle}",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "${key_workflowInstanceTitle}",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");
	}

	macro configureDMWorkflowViaFolderInfo {
		Click(locator1 = "Icon#INFO");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = "${workflowDefinition}");

		PortletEntry.save();
	}

	macro configureWCWorkflowViaFolderInfo {
		Pause(locator1 = "5000");

		Click.pauseClickAt(locator1 = "Icon#INFO");

		if (IsElementNotPresent(locator1 = "Icon#SIDEBAR_HEADER_ACTION_VERTICAL_ELLIPSIS_BUTTON")) {
			Click.pauseClickAt(locator1 = "Icon#INFO");
		}

		Click(locator1 = "Icon#SIDEBAR_HEADER_ACTION_VERTICAL_ELLIPSIS_BUTTON");

		MenuItem.click(menuItem = "Edit");

		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = "${workflowDefinition}");

		PortletEntry.save();
	}

	macro configureWorkflow {
		var key_workflowResourceValue = "${workflowResourceValue}";

		Search.searchCP(searchTerm = "${workflowResourceValue}");

		AssertClick.pauseAssertTextClickAt(
			key_rowEntry = "${workflowResourceValue}",
			locator1 = "Button#EDIT_ROW",
			value1 = "Edit");

		if (IsNotVisible(locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT")) {
			Refresh();

			WaitForSPARefresh();

			AssertClick.pauseAssertTextClickAt(
				key_rowEntry = "${workflowResourceValue}",
				locator1 = "Button#EDIT_ROW",
				value1 = "Edit");
		}

		Select(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
			value1 = "${workflowDefinition}");

		AssertClick(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SAVE",
			value1 = "Save");

		Alert.viewSuccessMessage();

		Workflow.viewConfigurationSelected(
			workflowDefinition = "${workflowDefinition}",
			workflowResourceValue = "${workflowResourceValue}");
	}

	macro configureWorkflowCancel {
		var key_workflowResourceValue = "${workflowResourceValue}";

		AssertClick.pauseAssertTextClickAt(
			key_rowEntry = "${workflowResourceValue}",
			locator1 = "Button#EDIT_ROW",
			value1 = "Edit");

		if (IsNotVisible(locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT")) {
			Refresh();

			WaitForSPARefresh();

			AssertClick.pauseAssertTextClickAt(
				key_rowEntry = "${workflowResourceValue}",
				locator1 = "Button#EDIT_ROW",
				value1 = "Edit");
		}

		Select(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
			value1 = "${workflowDefinition}");

		AssertClick(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_CANCEL",
			value1 = "Cancel");

		Workflow.viewConfigurationSelected(
			workflowDefinition = "${workflowDefinitionEnd}",
			workflowResourceValue = "${workflowResourceValue}");
	}

	macro configureWorkflowViaPortlet {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Edit");

		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = "${workflowDefinition}");

		PortletEntry.save();
	}

	macro confirmWorkflowAction {
		IFrame.selectConfigurationFrame();

		AssertElementPresent(locator1 = "Button#DONE");

		Click(locator1 = "Button#DONE");
	}

	macro createWorkflowBlogInstance {
		var key_workflowInstanceTitle = "${workflowInstanceName}";

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "",
			entryTitle = "${key_workflowInstanceTitle}");
	}

	macro deleteWorkflowDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertTextEquals(
			locator1 = "IFrame#DIALOG_BOX",
			value1 = "Delete workflow?");

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DIALOG_BOX_BODY",
			value1 = "A deleted workflow cannot be recovered.");

		Button.clickDelete();

		Alert.viewSuccessMessage();

		AssertElementNotPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE");
	}

	macro deleteWorkflowDefinitionExtra {
		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_DEFINITION_UNPUBLISHED_EXTRA_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertTextEquals(
			locator1 = "IFrame#DIALOG_BOX",
			value1 = "Delete workflow?");

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DIALOG_BOX_BODY",
			value1 = "A deleted workflow cannot be recovered.");

		Button.clickDelete();

		Alert.viewSuccessMessage();
	}

	macro duplicateNotPublishedWorkflow {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Click(
			key_workflowDefinitionTitle = "${workflowName}",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Duplicate");

		Button.click(button = "Duplicate");

		PortletEntry.inputTitle(title = "${workflowCopyName}");
	}

	macro duplicateSingleApproverWorkflow {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Click(
			key_workflowDefinitionTitle = "Single Approver",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Duplicate");

		Button.click(button = "Duplicate");

		PortletEntry.inputTitle(title = "${workflowName}");

		ScrollWebElementIntoView(
			key_text = "Update",
			locator1 = "Button#ANY");

		Button.click(button = "Update");
	}

	macro gotoAssetViaTableTitle {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");
	}

	macro gotoCompletedFilter {
		Pause(locator1 = "2000");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Completed");
	}

	macro gotoCompletedTaskAssignedToMePreview {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		Workflow.gotoPreviewView();
	}

	macro gotoEditWorkflowDefinition {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${workflowDefinitionTitle}");
	}

	macro gotoPreviewEdit {
		Click(locator1 = "WorkflowSubmissionsTask#PREVIEW_EDIT");

		var editAsset = "IFrame#EDIT_ASSET";

		if (IsElementPresent(locator1 = "${editAsset}")) {
			SelectFrame(locator1 = "${editAsset}");
		}
	}

	macro gotoPreviewView {
		AssertVisible(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");

		Click(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");

		AssertElementNotPresent(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");
	}

	macro gotoTaskAssignedToMeActionsCmd {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		if ("${multipleTasks}" == "true") {
			var key_position = "${taskPosition}";

			Click(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_SPECIFIC_ACTIONS");
		}
		else {
			Click(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ACTIONS");
		}
	}

	macro gotoTaskAssignedToMyRolesActionsCmd {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Click(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS");
	}

	macro gotoTaskDetails {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");
	}

	macro gotoViewCompletedAssetViaMySubmissions {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		Click(locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");

		Workflow.gotoPreviewView();
	}

	macro openNotifications {
		Navigator.openSpecificURL(url = "/group/control_panel/manage?p_p_id=com_liferay_notifications_web_portlet_NotificationsPortlet&p_p_lifecycle=0&p_p_state=maximized&p_v_l_s_g_id=42619&p_p_auth=1njFlr6I");
	}

	macro openWorkflowAdmin {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_portal_workflow_web_internal_portlet_SiteAdministrationWorkflowPortlet");
	}

	macro openWorkflowListView {
		Navigator.openSpecificURL(url = "/group/control_panel/manage?p_p_id=com_liferay_portal_workflow_web_portlet_ControlPanelWorkflowPortlet&p_p_lifecycle=0&p_p_state=maximized&p_p_mode=view&_com_liferay_portal_workflow_web_portlet_ControlPanelWorkflowPortlet_tab=workflows");
	}

	macro openWorkflowProcessBuilderConfiguration {
		Navigator.openSpecificURL(url = "/group/control_panel/manage?p_p_id=com_liferay_portal_workflow_web_portlet_ControlPanelWorkflowPortlet&p_p_lifecycle=0&p_p_state=maximized&p_p_mode=view&_com_liferay_portal_workflow_web_portlet_ControlPanelWorkflowPortlet_tab=configuration");
	}

	macro permissionsWorkflowDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.click(menuItem = "Permissions");

		AssertElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PERMISSIONS");
	}

	macro processBuilderFilterAndOrder {
		var key_optionOrder = "${optionOrder}";

		Click(locator1 = "AssetWorkflow#PROCESS_BUILDER_FILTER_AND_ORDER_BUTTON");

		Click(locator1 = "AssetWorkflow#PROCESS_BUILDER_FILTER_AND_ORDER_OPTION");
	}

	macro publishExistingWorkflowDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		PortletEntry.publish();
	}

	macro publishInvalidWorkflowDefinition {
		if (isSet(update)) {
			AssertClickNoError(
				locator1 = "Button#UPDATE",
				value1 = "Update");
		}
		else {
			AssertClickNoError(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");
		}

		Alert.viewErrorMessage(errorMessage = "${errorMessage}");
	}

	macro rejectTaskByActions {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}");

		MenuItem.click(menuItem = "Reject");

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = "${workflowActivityComment}";

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}");
		}

		Workflow.confirmWorkflowAction();

		Pause(locator1 = "1000");

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");
	}

	macro rejectTaskByDetails {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssignedTo = "${workflowAssignedTo}",
			workflowTask = "${workflowTask}");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Reject");

		Workflow.confirmWorkflowAction();

		Pause(locator1 = "1000");

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");
	}

	macro resubmitTaskByActions {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}");

		MenuItem.click(menuItem = "Resubmit");

		Button.clickDone();

		Alert.viewSuccessMessage();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");
	}

	macro resubmitTaskByDetails {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssignedTo = "${workflowAssignedTo}",
			workflowTask = "${workflowTask}");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Resubmit");

		Button.clickDone();

		Alert.viewSuccessMessage();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");
	}

	macro saveDefinition {
		if ("${newKaleoDesigner}" == "True") {
			AssertClick(
				locator1 = "KaleoDesigner#SAVE_BUTTON",
				value1 = "Save");
		}
		else {
			AssertClick(
				locator1 = "KaleoDesigner#SAVE_BUTTON",
				value1 = "Save");

			Alert.viewSuccessMessage();
		}
	}

	macro searchFieldPresent {
		Type(
			locator1 = "WorkflowMetricsProcessListView#METRICS_WORKFLOW_SEARCH_BAR",
			value1 = "${fieldName}");

		Click(locator1 = "WorkflowConfiguration#PROCESS_BUILDER_SEARCH_BAR_BUTTON");

		Pause(locator1 = "1000");
	}

	macro setWorkflowToMiniumChannel {
		Select(
			key_title = "Buyer Order Approval Workflow",
			locator1 = "CommerceEntry#CATALOGS_FORM",
			value1 = "${workflowDefinition}");

		Button.clickSave();
	}

	macro tearDownPortalWorkflow {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Schemes");

		Workflow._tearDownWorkflow();

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User");

		Select(
			key_workflowResourceValue = "User",
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
			value1 = "No Workflow");

		Button.clickSave();
	}

	macro tearDownSiteWorkflow {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow._tearDownWorkflow();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Web Content");

		Workflow.configureWCWorkflowViaFolderInfo(workflowDefinition = "No Workflow");
	}

	macro tearDownSpecificWorkflowDefinition {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		while (IsElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS")) {
			Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "${workflowDefinitionTitle}");

			ApplicationsMenu.gotoPortlet(
				category = "Workflow",
				panel = "Applications",
				portlet = "Process Builder");

			Workflow.deleteWorkflowDefinition(workflowDefinitionTitle = "${workflowDefinitionTitle}");
		}
	}

	macro tearDownWorkflowDefinitions {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		while (IsElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_EXTRA")) {
			if (IsElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_DEFINITION_EXTRA_ELLIPSIS")) {
				Workflow.unpublishWorkflowDefinitionExtra();
			}

			Workflow.deleteWorkflowDefinitionExtra();
		}
	}

	macro unpublishWorkflowDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Unpublish");

		Alert.viewSuccessMessage();
	}

	macro unpublishWorkflowDefinitionExtra {
		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_DEFINITION_EXTRA_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Unpublish");

		Alert.viewSuccessMessage();
	}

	macro updateDefinition {
		PortletEntry.inputTitle(title = "${workflowDefinitionTitle}");

		Button.click(button = "Update");
	}

	macro updateDueDateAssignedToMeTaskByActions {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}");

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		MenuItem.click(menuItem = "Update Due Date");

		SelectFrame(locator1 = "MyWorkflowTasks#IFRAME_UPDATE_DUE_DATE");

		var currentYear = DateUtil.getCurrentYear();
		var futureYear = ${currentYear} + 1;

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE",
			value1 = "4/11/${futureYear}");

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE_TIME",
			value1 = "${workflowDueDateTime}");

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = "${workflowActivityComment}";

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}");
		}

		Button.clickDone();

		Alert.viewSuccessMessage();

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE",
			value1 = "Within");
	}

	macro updateDueDateTaskByActions {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");

		Workflow.gotoTaskAssignedToMyRolesActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}");

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		MenuItem.click(menuItem = "Update Due Date");

		SelectFrame(locator1 = "MyWorkflowTasks#IFRAME_UPDATE_DUE_DATE");

		var currentYear = DateUtil.getCurrentYear();
		var futureYear = ${currentYear} + 1;

		SelectFrame(locator1 = "WorkflowDefinition#DIALOG_BOX_BODY");

		SelectFrame(locator1 = "IFrame#IFRAME");

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE",
			value1 = "4/11/${futureYear}");

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE_TIME",
			value1 = "${workflowDueDateTime}");

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = "${workflowActivityComment}";

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}");
		}

		Workflow.confirmWorkflowAction();

		Pause(locator1 = "1000");

		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}");
	}

	macro uploadDefinition {
		Workflow.addNewDefinition(workflowDefinitionTitle = "${workflowDefinitionTitle}");

		if (IsElementPresent(locator1 = "KaleoDesignerEditWorkflow#SOURCE_KALEO_XML_TAB")) {
			KaleoDesigner.viewSourceXMLTab();
		}

		UploadDependencyFile.uploadFile(fileName = "${workflowDefinitionFile}");

		Alert.viewSuccessMessageText(successMessage = "Definition imported successfully.");

		if (isSet(errorMessage)) {
			AssertClickNoError(
				locator1 = "Button#PUBLISH",
				value1 = "Publish");

			Alert.viewErrorMessage(errorMessage = "${errorMessage}");
		}
		else {
			PortletEntry.publish();

			AssertTextEquals.assertPartialText(
				locator1 = "Portlet#HEADER",
				value1 = "${workflowDefinitionTitle}");

			Navigator.gotoBack();
		}
	}

	macro viewAssignedToMyRolesTasksCP {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow._gotoPendingFilter();

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = "${workflowTask}");

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		var key_workflowAssetType = "${workflowAssetType}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS");
	}

	macro viewCannotRejectTaskByActions {
		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}");

		AssertElementNotPresent(locator1 = "MyWorkflowTasksTask#MENU_REJECT");
	}

	macro viewCannotWithdrawTaskByActions {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE",
			value1 = "${workflowDefinition}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowTask}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");

		AssertElementNotPresent(locator1 = "//div[@id='_158_workflowInstancesSearchContainer']//tr[contains(.,'${key_workflowAssetTitle}')]/td[7]/span/a[contains(@id,'menu_withdraw-submission')]/span");

		AssertTextNotPresent(value1 = "Withdraw Submission");
	}

	macro viewCompletedSubmission {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowStatus}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE",
			value1 = "${workflowDefinition}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");
	}

	macro viewCompletedTask {
		Workflow.gotoCompletedFilter();

		if ("${workflowAssetType}" == "Translation") {
			var key_workflowAssetTitle = "Translation";
		}
		else {
			var key_workflowAssetTitle = "${workflowAssetTitle}";
		}

		var key_workflowTask = "${workflowTask}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = "${workflowTask}");

		if ("${workflowAssetType}" == "Translation") {
			AssertTextEquals.assertPartialText(
				locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
				value1 = "Translation");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
				value1 = "${workflowAssetTitle}");
		}

		if ("${multipleTasks}" == "true") {
			AssertTextEquals(
				key_position = "${taskPosition}",
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_SPECIFIC_TYPE",
				value1 = "${workflowAssetType}");
		}
		else {
			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
				value1 = "${workflowAssetType}");
		}

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		if ("${completedTask}" == "viewDetails") {
			AssertClick(
				key_workflowAssetTitle = "${workflowAssetTitle}",
				locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
				value1 = "${workflowAssetTitle}");

			AssertTextEquals.assertPartialText(
				locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
				value1 = "${workflowAssetTitle}");
		}
	}

	macro viewCompletedTasksTaskNotPresentCP {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK");

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE");

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE");
	}

	macro viewConfigurationSelected {
		var key_workflowResourceValue = "${workflowResourceValue}";

		AssertTextEquals(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_WORKFLOW",
			value1 = "${workflowDefinition}");
	}

	macro viewDefaultMySubmissionsCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no publications requested by me.");
	}

	macro viewDefaultMyWorkflowTasksCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no tasks assigned to you.");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no tasks assigned to your roles.");
	}

	macro viewDefaultWorkflowSubmissions {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no publication requests.");
	}

	macro viewDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		if (isSet(workflowDefinitionTitle)) {
			AssertTextEquals(
				locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
				value1 = "${workflowDefinitionTitle}");
		}
		else {
			var key_workflowDefinitionTitle = "${workflowDefinitionName}";

			AssertTextEquals(
				locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
				value1 = "${workflowDefinitionName}");
		}
	}

	macro viewDefinitionNotPresent {
		AssertElementNotPresent(
			key_workflowDefinitionTitle = "${workflowDefinitionTitle}",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE");
	}

	macro viewDefinitionPublicationStatus {
		AssertTextEquals(
			locator1 = "WorkflowDefinition#PUBLICATION_STATUS",
			value1 = "${status}");
	}

	macro viewDefinitionPublished {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PUBLISHED",
			value1 = "${workflowDefinitionTitle}");
	}

	macro viewDefinitionUnpublished {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_UNPUBLISHED",
			value1 = "${workflowDefinitionTitle}");
	}

	macro viewMySubmissions {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowTask}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");
	}

	macro viewMySubmissionsTaskPreview {
		AssertTextEquals(
			locator1 = "WorkflowSubmissionsTask#PREVIEW",
			value1 = "Preview of ${workflowAssetType}");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_CONTENT",
			value1 = "${workflowAssetContent}");

		Portlet.viewTitle(portletName = "${workflowSubmissionTitle}");
	}

	macro viewNoDuplicateTaskAssignedToMyRoles {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow._gotoPendingFilter();

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE_DUPLICATE");
	}

	macro viewNotPresentWorkflowStatus {
		AssertElementNotPresent(
			key_status = "${statusNotPresent}",
			locator1 = "CommerceEntry#WORKFLOW_STATUS");
	}

	macro viewPendingTasks {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = "${workflowTask}");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	macro viewRejectedTask {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "Update";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "Update");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	macro viewSecondAssetEntryContent {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TITLE_2",
			value1 = "${workflowAssetTitle}");

		WorkflowAsset.previewViewContent(
			fieldLabel = "${fieldLabel}",
			fieldValue = "${fieldValue}");
	}

	macro viewSubmissionNotPresent {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");
	}

	macro viewTaskAssignedToMe {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Navigator.gotoNavTab(navTab = "Assigned to Me");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_ACTIVE");

		Workflow._gotoPendingFilter();

		while (IsElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK") && (maxIterations = "10")) {
			Refresh();

			Workflow._gotoPendingFilter();

			Pause(locator1 = "1000");
		}

		if ("${multipleTasks}" == "true") {
			var key_position = "${taskPosition}";

			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_SPECIFIC_TASK",
				value1 = "${workflowTask}");

			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_SPECIFIC_TYPE",
				value1 = "${workflowAssetType}");
		}
		else {
			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
				value1 = "${workflowTask}");

			AssertTextEquals(
				locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
				value1 = "${workflowAssetType}");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	macro viewTaskAssignedToMeDetails {
		Navigator.gotoNavTab(navTab = "Assigned to Me");

		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick.assertPartialTextClickAt(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		if (isSet(workflowAssignedTo)) {
			AssertTextEquals.assertText(
				locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
				value1 = "${workflowAssignedTo}");
		}
		else {
			AssertTextEquals.assertText(
				locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
				value1 = "Test Test");
		}

		var key_workflowTask = "${workflowTask}";

		AssertTextEquals.assertText(
			locator1 = "MyWorkflowTasksTask#STATE",
			value1 = "${workflowTask}");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_CONTENT",
			value1 = "${workflowAssetContent}");
	}

	macro viewTaskAssignedToMyRoles {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		while (IsElementNotPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_LAST_ACTIVITY_DATE") && (maxIterations = "10")) {
			Navigator.gotoNavTab(navTab = "Assigned to Me");

			Navigator.gotoNavTab(navTab = "Assigned to My Roles");

			Pause(locator1 = "1000");
		}

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = "${workflowTask}");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS");
	}

	macro viewTaskAssignedToMyRolesDetails {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		AssertClick.assertPartialTextClickAt(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
			value1 = "Nobody");

		AssertTextEquals(
			locator1 = "MyWorkflowTasksTask#STATE",
			value1 = "${workflowTask}");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = "${workflowAssetTitle}");
	}

	macro viewTaskHeaderTitle {
		AssertTextEquals(
			locator1 = "Portlet#H2_HEADER",
			value1 = "${workflowTask}: ${kfProcessName}");
	}

	macro viewWebContentWithWorkflowCP {
		WebContentNavigator.gotoViewStatus(
			webContentStatus = "PENDING",
			webContentTitle = "${webContentTitle}");

		AssertTextEquals(
			key_status = "Pending",
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Pending");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "${webContentTitle}");
	}

	macro viewWebContentWithWorkflowStatus {
		AssertTextEquals(
			key_status = "${webContentStatus}",
			locator1 = "WCEditWebContent#WORKFLOW_STATUS",
			value1 = "${webContentStatus}");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "${webContentTitle}");
	}

	macro viewWorkflowDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		Click(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "View");
	}

	macro viewWorkflowStatus {
		AssertTextEquals(
			key_status = "${status}",
			locator1 = "CommerceEntry#WORKFLOW_STATUS",
			value1 = "${status}");
	}

	macro webContentGoToAddCP {
		Pause(locator1 = "3000");

		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Basic Web Content");

		WaitForElementPresent(locator1 = "TextInput#TITLE");

		AssertVisible(locator1 = "TextInput#TITLE");

		while (IsElementNotPresent(locator1 = "WCEditWebContent#SIDEBAR")) {
			Pause(locator1 = "1000");
		}
	}

	macro withdrawTaskByActions {
		Workflow.viewMySubmissions(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowDefinition = "${workflowDefinition}",
			workflowTask = "${workflowTask}");

		Workflow._gotoPendingFilter();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Withdraw Submission");

		Alert.viewSuccessMessage();
	}

	macro withdrawTaskByDetails {
		Workflow.viewMySubmissions(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowDefinition = "${workflowDefinition}",
			workflowTask = "${workflowTask}");

		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		Workflow.viewMySubmissionsTaskPreview(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowSubmissionTitle = "${workflowSubmissionTitle}");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Withdraw Submission");

		Alert.viewSuccessMessage();
	}

	macro withdrawTaskCompletedNoByDetails {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE",
			value1 = "${workflowDefinition}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}");

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowTask}");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}");

		Workflow.viewMySubmissionsTaskPreview(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowSubmissionTitle = "${workflowSubmissionTitle}");

		AssertElementNotPresent(locator1 = "WorkflowSubmissionsTask#MENU_WITHDRAW_SUBMISSION");

		AssertTextNotPresent(value1 = "Withdraw Submission");
	}

}