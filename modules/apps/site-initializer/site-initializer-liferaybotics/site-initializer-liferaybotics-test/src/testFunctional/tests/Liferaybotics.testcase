@component-name = "portal-liferay-online"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Liferaybotics";

	var testSiteName = "Test Liferaybotics Name";
	var testSiteURL = "test-liferaybotics-name";
	var testNewsArticleName1 = " All New Series of TX Robotic Machine";
	var testNewsArticleName2 = " Easier to operate than never before";
	var testNewsArticleName3 = " Grab the best deals this June";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Liferaybotics Site") {
			Liferaybotics.addLiferayboticsSite(siteName = "${testSiteName}");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");

			CommerceJSONChannelsAPI._deleteAllCommerceChannels();
		}
	}

	@description = "This is a test for LPS-150999. User Can create a Lifebotics Site"
	@ignore = "true"
	@priority = "5"
	test AddLiferayboticsSite {
		property portal.acceptance = "true";

		task ("Go to Liferaybotics Site") {
			ApplicationsMenu.gotoSite(site = "${testSiteName}");
		}

		task ("Assert the Liferaybotics Welcome Page is present") {
			AssertElementPresent(
				key_title = "Robotics power the future",
				locator1 = "Liferaybotics#HOME_TITLE");
		}
	}

	@description = "This is a test for LPS-150999. User can navigate to a Dashboard Page after Lifebotics site is created"
	@ignore = "true"
	@priority = "4"
	test LiferayboticsDashboardPage {
		property portal.acceptance = "true";

		task ("Go to Liferaybotics Site") {
			ApplicationsMenu.gotoSite(site = "${testSiteName}");
		}

		task ("Go to  Dashboard Page on Liferaybotics Site") {
			Click(
				labelOption = "Dashboard",
				locator1 = "Liferaybotics#MENU_LABEL_NAME");
		}

		task ("Assert the Dashboard Page is present") {
			AssertElementPresent(
				key_title = "Latest News",
				locator1 = "Liferaybotics#DASHBOARD_TITLE");
		}
	}

	@description = "This is a test for LPS-150999. User can navigate to a Home Page after Lifebotics site is created"
	@ignore = "true"
	@priority = "4"
	test LiferayboticsHomePage {
		property portal.acceptance = "true";

		task ("Go to Liferaybotics Site") {
			ApplicationsMenu.gotoSite(site = "${testSiteName}");
		}

		task ("Go to  Home Page on Liferaybotics Site") {
			Click(
				labelOption = "Home",
				locator1 = "Liferaybotics#MENU_LABEL_NAME");
		}

		task ("Assert the Home Page is present") {
			AssertElementPresent(
				key_title = "Robotics power the future",
				locator1 = "Liferaybotics#HOME_TITLE");
		}
	}

	@description = "This is a test for LPS-150999. Verify all the links present in the Dashboard Page related with News redirect to their respective pages"
	@ignore = "true"
	@priority = "4"
	test VerifyTheLinksRedirectsToItsPage {
		task ("Go to Liferaybotics Site") {
			ApplicationsMenu.gotoSite(site = "${testSiteName}");
		}

		task ("Go to  Dashboard Page on Liferaybotics Site") {
			Click(
				labelOption = "Dashboard",
				locator1 = "Liferaybotics#MENU_LABEL_NAME");
		}

		task ("Click in The 'All New Series of TX Robotic Machine' link and assert it redirects to Blog Page") {
			Click(
				key_title = "${testNewsArticleName1}",
				locator1 = "Liferaybotics#NEWS_LINK");
		}

		task ("Assert the Article Page is present") {
			AssertElementPresent(
				key_title = "${testNewsArticleName1}",
				locator1 = "Liferaybotics#NEWS_TITLE");
		}

		task ("Click in Back icon to return to Dashboard Page") {
			Click(locator1 = "Liferaybotics#NEWS_BACK_ICON");
		}

		task ("Click in The 'Easier to operate than never before' link and assert it redirects to Blog Page") {
			Click(
				key_title = "${testNewsArticleName2}",
				locator1 = "Liferaybotics#NEWS_LINK");
		}

		task ("Assert the Article Page is present") {
			AssertElementPresent(
				key_title = "${testNewsArticleName2}",
				locator1 = "Liferaybotics#NEWS_TITLE");
		}

		task ("Click in Back icon to return to Dashboard Page") {
			Click(locator1 = "Liferaybotics#NEWS_BACK_ICON");
		}

		task ("Click in The 'Grab the best deals this June' link and assert it redirects to Blog Page") {
			Click(
				key_title = "${testNewsArticleName3}",
				locator1 = "Liferaybotics#NEWS_LINK");
		}

		task ("Assert the Article Page is present") {
			AssertElementPresent(
				key_title = "${testNewsArticleName3}",
				locator1 = "Liferaybotics#NEWS_TITLE");
		}

		task ("Click in Back icon to return to Dashboard Page") {
			Click(locator1 = "Liferaybotics#NEWS_BACK_ICON");
		}
	}

	@description = "This is a test for LPS-150999. Verify Product Publisher contained a Warranty product"
	@ignore = "true"
	@priority = "4"
	test VerifyTheProductPublisherContainsWarrantyProduct {
		task ("Go to Liferaybotics Site") {
			ApplicationsMenu.gotoSite(site = "${testSiteName}");
		}

		task ("Go to  Dashboard Page on Liferaybotics Site") {
			Click(
				labelOption = "Dashboard",
				locator1 = "Liferaybotics#MENU_LABEL_NAME");
		}

		task ("Assert the Latest Products title is present") {
			AssertElementPresent(
				key_title = "Latest Products",
				locator1 = "Liferaybotics#DASHBOARD_TITLE");
		}

		task ("Assert Product Publisher widget is present") {
			AssertElementPresent(locator1 = "Liferaybotics#PRODUCT_PUBLISHER");
		}

		// TO-DO:Update when Warranty Page is working - LPS-152264

		task ("Assert Warrany product is on Dashboard Page") {
			AssertTextPresent(value1 = "Warranty");
		}
	}

}