@component-name = "portal-workflow-ee"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Workflow Metrics";

	setUp {
		TestCase.setUpPortalInstance();

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		User.firstLoginPG();

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Verify that an administrator user that it's not asset creator can reassign and transition the task"
	@ignore = "Test Stub"
	@priority = "5"
	test AdministratorUserCanReassignAndTransitionAnyTasks {

		// TODO AdministratorUserCanReassignAndTransitionAnyTasks pending implementation

	}

	@description = "Verify that any user with administrator role can reassign allowed tasks"
	@ignore = "Test Stub"
	@priority = "5"
	test AdministratorUserCanReassignAnyTasks {

		// TODO AdministratorUserCanReassignAnyTasks pending implementation

	}

	@description = "Verify that an administrator user that it's not asset creator can reassign multiple already assigned tasks to different users"
	@ignore = "Test Stub"
	@priority = "5"
	test AdministratorUserCanReassignMultipleTasksAssignedToOtherUsers {

		// TODO AdministratorUserCanReassignMultipleTasksAssignedToOtherUsers pending implementation

	}

	@description = "Verify that the Asset Creator user can resubmit the task after a administrator that it's not asset creator reject a task assigned to him"
	@ignore = "Test Stub"
	@priority = "5"
	test AssetCreatorCanResubmitTaskRejectedByOtherAdministratorUser {

		// TODO AssetCreatorCanResubmitTaskRejectedByOtherAdministratorUser pending implementation

	}

	@description = "LPS-98517 - Verify that the Assignee dropdown options are listed in alphabetical order"
	@priority = "3"
	test AssigneeOptionsAreListedInAlphabeticalOrder {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		JSONUser.addUser(
			userEmailAddress = "AUser@liferay.com",
			userFirstName = "A User",
			userLastName = "A Userl",
			userScreenName = "Auser_");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Power User",
			userScreenName = "auser_");

		JSONUser.addUser(
			userEmailAddress = "BUser@liferay.com",
			userFirstName = "B User",
			userLastName = "B Userl",
			userScreenName = "Buser_");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Power User",
			userScreenName = "buser_");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry A",
			entrySubtitle = "Subtitle",
			entryTitle = "First Blogs Entry Title");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry B",
			entrySubtitle = "Subtitle",
			entryTitle = "Second Blogs Entry Title");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry C",
			entrySubtitle = "Subtitle",
			entryTitle = "Third Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		AssertElementPresent(
			key_instanceInfo = "Blogs Entry: First Blogs Entry Title",
			locator1 = "WorkflowMetrics#METRICS_ALL_ITEMS_TABLE_INSTANCE");

		AssertElementPresent(
			key_instanceInfo = "Blogs Entry: Second Blogs Entry Title",
			locator1 = "WorkflowMetrics#METRICS_ALL_ITEMS_TABLE_INSTANCE");

		AssertElementPresent(
			key_instanceInfo = "Blogs Entry: Third Blogs Entry Title",
			locator1 = "WorkflowMetrics#METRICS_ALL_ITEMS_TABLE_INSTANCE");
	}

	@description = "Verify that the user is able to click on the Current Node link and the node will be in evidence"
	@priority = "3"
	test CanClickCurrentNodeLink {
		Workflow.openWorkflowListView();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();

		WorkflowMetrics.goToCurrentNode(currentNode = "Review");
	}

	@description = "Verify that the users are able to identify the current node of the instance in the workflow"
	@priority = "4"
	test CanIdentifyCurrentNode {
		Workflow.openWorkflowListView();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();

		WorkflowMetrics.viewCurrentNode(currentNode = "Review");

		WorkflowMetrics.viewCurrentNodeCircleIcon(currentNode = "Review");

		WorkflowMetrics.viewCurrentNodeCircleNotPresent(currentNode = "Created");

		WorkflowMetrics.viewCurrentNodeCircleNotPresent(currentNode = "Update");

		WorkflowMetrics.viewCurrentNodeCircleNotPresent(currentNode = "Approved");
	}

	@description = "Verify that the users are able to identify the current nodes of the instance in the workflow, when there is multiple statuses"
	@priority = "4"
	test CanIdentifyMultipleCurrentNode {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#CanIdentifyMultipleCurrentNode";

		Workflow.openWorkflowListView();

		Workflow.addNewDefinition(workflowDefinitionTitle = "Multi Task Process");

		ProcessBuilderKaleoDesignerReact.uploadDefinition(workflowDefinitionFile = "multi-task-process-workflow-definition.xml");

		ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();

		Button.clickPublish();

		Navigator.gotoBack();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Multi Task Process",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Multi Task Process");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();

		WorkflowMetrics.viewCurrentNode(currentNode = "task1, task2, task3");

		WorkflowMetrics.viewCurrentNodeCircleIcon(currentNode = "task1");

		WorkflowMetrics.viewCurrentNodeCircleIcon(currentNode = "task2");

		WorkflowMetrics.viewCurrentNodeCircleIcon(currentNode = "task3");

		WorkflowMetrics.viewCurrentNodeCircleNotPresent(currentNode = "Join");
	}

	@description = "Verify that the users are able to identify the past stages that the workflow instance has already passed by"
	@ignore = "Test Stub"
	@priority = "3"
	test CanIdentifyPastStagesOnWorkflow {

		// TODO LRQA-72393 CanIdentifyPastStagesOnWorkflow pending implementation

	}

	@description = "LPS-92052 - Verify that the user is able to click on the table header Assignee to choose the items order (A-Z / Z-A)"
	@priority = "5"
	test CanOrderByAssignee {
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#CanOrderByAssignee";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		WorkflowMetrics.createUsersAndAssignInstancesWithGroovy(
			numberOfBlogInstances = "3",
			numberOfUsers = "3",
			site = "${siteName}");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSIGNEE_HEADER");

		AssertTextEquals(
			key_entryIndex = "1",
			key_itemIndex = "3",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_BY_INDEXES",
			value1 = "3user user3");

		AssertTextEquals(
			key_entryIndex = "2",
			key_itemIndex = "3",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_BY_INDEXES",
			value1 = "2user user2");

		AssertTextEquals(
			key_entryIndex = "3",
			key_itemIndex = "3",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_BY_INDEXES",
			value1 = "1user user1");

		Click(locator1 = "//span[contains(@data-title,'Assignee')]");

		AssertTextEquals(
			key_entryIndex = "1",
			key_itemIndex = "3",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_BY_INDEXES",
			value1 = "1user user1");

		AssertTextEquals(
			key_entryIndex = "2",
			key_itemIndex = "3",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_BY_INDEXES",
			value1 = "2user user2");

		AssertTextEquals(
			key_entryIndex = "3",
			key_itemIndex = "3",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_BY_INDEXES",
			value1 = "3user user3");
	}

	@description = "LPS-130218 - Verify that the user is able to click on the table header Created by to choose the items order (A-Z / Z-A)."
	@priority = "5"
	test CanOrderByCreatedBy {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry");

		JSONUser.addUser(
			userEmailAddress = "user1@liferay.com",
			userFirstName = "user1",
			userLastName = "user1",
			userScreenName = "user1");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "user1@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "user1@liferay.com");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		PortalSettings.gotoConfiguration(
			configurationCategory = "User Authentication",
			configurationName = "General",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.uncheckStrangersVerifyEmailCheckbox();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "People",
			panel = "Site Administration",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "user1",
			userLastName = "user1",
			userScreenName = "user1");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user1@liferay.com",
			userLoginFullName = "user1 user1");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Second Blogs Entry");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		Click(
			key_orderBy = "Created By",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ORDER_BY");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: Second Blogs Entry",
			keyCompare = "Blogs Entry: Blogs Entry",
			rowNumber = "1");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: Blogs Entry",
			keyCompare = "Blogs Entry: Second Blogs Entry",
			rowNumber = "2");

		Click(
			key_orderBy = "Created By",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ORDER_BY");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: Blogs Entry",
			keyCompare = "Blogs Entry: Second Blogs Entry",
			rowNumber = "1");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: Second Blogs Entry",
			keyCompare = "Blogs Entry: Blogs Entry",
			rowNumber = "2");
	}

	@description = "Verify that the user is able to see the label of the transitions of a specific node while hovering it"
	@priority = "4"
	test CanSeeTransitionsLabelOnHoverNode {
		Workflow.openWorkflowListView();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();

		WorkflowMetrics.viewTrackWorkflowModal();

		WorkflowMetrics.viewNameHoverTransition(
			nameOverTransition = "REVIEW",
			nodesTrackWorkflow = "Created");

		WorkflowMetrics.viewNameHoverTransition(
			nameOverTransition = "APPROVE",
			nodesTrackWorkflow = "Review");

		WorkflowMetrics.viewNameHoverTransition(
			nameOverTransition = "REJECT",
			nodesTrackWorkflow = "Review");
	}

	@description = "Verify that there is a Track Approval link on the instance detail modal"
	@priority = "5"
	test CanSelectTrackApprovalLinkOnDetailModal {
		Workflow.openWorkflowListView();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.viewTrackWorkflowLink();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();
	}

	@description = "Verify that there is a Track Approval option on the kebab menu"
	@priority = "4"
	test CanSelectTrackApprovalOnKebabMenu {
		Workflow.openWorkflowListView();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetrics.viewKebabMenuOptionsIsAvailable(dropdownItem = "Track Workflow");
	}

	@description = "LPS-92053 - Verify that, at the items table, users should be able to click on process ID column and open a modal for the respective item details"
	@priority = "3"
	test ClickOnProcessIdColumnToSeeItemDetailsPage {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "COMPLETED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "Single Approver");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_ASSET_TITLE");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_ASSET_TYPE");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_CREATED_BY");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_CREATION_DATE");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_PROCESS_STATUS");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_MESSAGE");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_TITLE");
	}

	@description = "LPS-86652 - Verify that every column displays the correct info for a item"
	@priority = "5"
	test ColumnsDiplayCorrectInfo {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Content",
			entryTitle = "Blogs Title 1");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		Workflow.assertInfoItem(
			key_assignee = "Unassigned",
			key_createdBy = "Test Test",
			key_dueDate = "-",
			key_itemSubject = "Blogs Entry: Blogs Title 1",
			key_processStep = "Review");
	}

	@description = "LPS-86652 - Validate that the correct number of entries is showed when user chooses 4, 8, 20, 40, 60"
	@priority = "3"
	test CorrectNumberOfEntriesDisplayedWhenPaginationEdited {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		for (var blogNumber : list "1,2,3,4,5,6,7,8") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry Title ${blogNumber}");
		}

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetricsProcessListView.changePagination(itemsPerPage = "4 Entries");

		for (var orderNumber : list "1,2,3,4") {
			AssertElementPresent(
				key_order = "${orderNumber}",
				key_processStep = "Review",
				locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ORDER");
		}

		AssertElementNotPresent(
			key_order = "5",
			key_processStep = "Review",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ORDER");

		Click(locator1 = "WorkflowMetricsProcessListView#METRICS_WORKFLOW_PAGINATION_NEXT_BUTTON");

		for (var orderNumber : list "1,2,3,4") {
			AssertElementPresent(
				key_order = "${orderNumber}",
				key_processStep = "Review",
				locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ORDER");
		}

		AssertElementNotPresent(
			key_order = "5",
			key_processStep = "Review",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ORDER");
	}

	@description = "LPS-130218 - Verify that once the order/sorting is made by the user, this definition should be preserved when the user change pagination number"
	@priority = "3"
	test CreatedBySortIsPreservedWhenChangesPagination {
		JSONUser.addUser(
			userEmailAddress = "user2@liferay.com",
			userFirstName = "user2",
			userLastName = "user2",
			userScreenName = "user2");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "user2@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "user2@liferay.com");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		PortalSettings.gotoConfiguration(
			configurationCategory = "User Authentication",
			configurationName = "General",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.uncheckStrangersVerifyEmailCheckbox();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "People",
			panel = "Site Administration",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "user2",
			userLastName = "user2",
			userScreenName = "user2");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content 1",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content 2",
			entryTitle = "Blogs Entry Title 2");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content 3",
			entryTitle = "Blogs Entry Title 3");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user2@liferay.com",
			userLoginFullName = "user2 user2");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content 4",
			entryTitle = "Blogs Entry Title 4");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content 5",
			entryTitle = "Blogs Entry Title 5");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		Click(locator1 = "//span[@class='text-truncate title'][contains(.,'Created By')]");

		WorkflowMetrics.changePaginationAllItems(itemsPerPage = "8 Entries");

		WorkflowMetrics.viewCreatedBySort(position = "down");

		Click(locator1 = "//span[@class='text-truncate title'][contains(.,'Created By')]");

		WorkflowMetrics.changePaginationAllItems(itemsPerPage = "20 Entries");

		WorkflowMetrics.viewCreatedBySort(position = "up");
	}

	@description = "LPS-130217 - Verify that the header title Creation Date is underline and bold on mouse hover"
	@priority = "2"
	test CreationDateTitleIsUnderlineAndBold {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		MouseOver(locator1 = "WorkflowMetrics#METRICS_ALL_ITEMS_TABLE_CREATION_DATE");

		AssertElementPresent(locator1 = "WorkflowMetrics#METRICS_ALL_ITEMS_TABLE_CREATION_DATE_UNDERLINE");

		AssertCssValue(
			locator1 = "WorkflowMetrics#METRICS_ALL_ITEMS_TABLE_CREATION_DATE_UNDERLINE",
			locator2 = "color",
			value1 = "rgba(39, 40, 51, 1)");
	}

	@description = "LPS-130217 - Verify that once the order/sorting is made by the user, this definition should be preserved when the user change pagination number"
	@priority = "3"
	test DefinitionIsPreservedWhenChangesPagination {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		var count = "1";

		while ("${count}" != "6") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry",
				entryTitle = "Blogs Entry ${count}");

			var count = ${count} + 1;
		}

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_UNTRACKED_ITEMS_TITLE");

		WorkflowMetricsProcessListView.changePagination(itemsPerPage = "4 Entries");

		Click(
			itemName = "Item Subject",
			locator1 = "ACSettings#ITEM_ON_LIST");

		Click(
			key_pageNumber = "2",
			locator1 = "WorkflowMetricsProcessListView#METRICS_WORKFLOW_PAGINATION_NUMBER_BUTTON");

		AssertElementPresent(
			key_value = "down",
			locator1 = "WorkflowMetricsProcessListView#ANY_ARROW_ORDER");
	}

	@description = "LPS-86652 - Verify that the correct columns are displayed ID, Due Date, Item Subject, Process Step, Assignee, Created By, Creation Date"
	@priority = "5"
	test DisplayColumns {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test content",
			entryTitle = "Test Blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ID");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ITEM_SUBJECT");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_PROCESS_STEP");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ASSIGNEE");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_CREATE_BY");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_CREATION_DATE");
	}

	@description = "LPS-92043 - Verify that the Due Date is displayed with a hyphen if a SLA didn't start counting"
	@ignore = "Test Stub"
	@priority = "4"
	test DisplayDueDateWithHyphenWhenSLANotStarted {

		// TODO LRQA-67729 DisplayDueDateWithHyphenWhenSLANotStarted pending implementation

	}

	@description = "LPS-92043 - Verify that the Due Date displays the next SLA in line when a SLA didn't start counting"
	@priority = "3"
	test DisplayNextSLAInLineWhenSLANotStarted {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:05",
			slaDefinitionName = "SLA Definition 1",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Leaves Task: Update",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Definition 2",
			slaDefinitionStart = "Enters Task: Update");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		Pause(locator1 = "60000");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		var getInstanceId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		WorkflowMetrics.validateInstanceDetailsSLA(
			openNumber = "1",
			slaNames = "SLA Definition 1");

		WorkflowMetrics.validateInstanceDetailsSLA(
			notStartedNumber = "1",
			slaNames = "SLA Definition 2");
	}

	@description = "Verify that the component displays the entire workflow that the instance is in"
	@priority = "5"
	test DisplaysEntireWorkflow {
		Workflow.openWorkflowListView();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();

		WorkflowMetricsAllItemsList.viewNodesDisplayed(nodesTrackWorkflow = "Created,Review,Update,Approved");
	}

	@description = "LPS-92053 - Verify that, in the item detail modal, the Due Date by SLA will group SLAs into Open or Resolved"
	@ignore = "Test Stub"
	@priority = "3"
	test DueDateBySlaGroupsSlaIntoOpenOrResolved {

		// TODO LRQA-67743 DueDateBySlaGroupsSlaIntoOpenOrResolved pending implementation

	}

	@description = "LPS-92053 - Verify that, in the item detail modal, the Due Date by SLA will provide a summary for the total number of entries for each group next to the section title"
	@priority = "3"
	test DueDateBySlaProvidesSummaryForTotalNumberOfEntries {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Definition 1",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Definition 2",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		Pause(locator1 = "50000");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		WorkflowMetrics.validateInstanceDetailsSLA(
			openNumber = "2",
			slaNames = "SLA Definition 1,SLA Definition 2");
	}

	@description = "LPS-92053 - Verify that, in the item detail modal, Resolved each due date has an icon according to the status On Time or Overdue, SLA name, due date and resolution status resolved on time or overdue"
	@priority = "4"
	test DueDateHasIconSlaNameDueDateAndResolutionStatus {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:02",
			slaDefinitionName = "SLA Name",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry ${blogNumber} Content",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry ${blogNumber} Content",
			entryTitle = "Blogs Entry Title 2");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 2",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Pause(locator1 = "60000");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "COMPLETED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "Single Approver");

		WorkflowMetrics.validateDueDateBySLADetails(
			itemName = "Blogs Entry: Blogs Entry Title 1",
			resolutionStatus = "(Resolved on Time)",
			slaName = "SLA Name",
			statusResult = "success");

		Navigator.openURL();

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		Click(
			locator1 = "WorkflowAllItems#KEBAB_DROPDOWN",
			task = "1");

		Click(locator1 = "WorkflowAllItems#APPROVE_DROPDOWN");

		Button.click(button = "Done");

		Pause(locator1 = "60000");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "COMPLETED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "Single Approver");

		WorkflowMetrics.validateDueDateBySLADetails(
			itemName = "Blogs Entry: Blogs Entry Title 2",
			resolutionStatus = "(Resolved Overdue)",
			slaName = "SLA Name",
			statusResult = "danger");
	}

	@description = "LPS-130167 - Verify that the table entries should be ordered by Due Date, from older to the most recent date"
	@priority = "3"
	test EntriesAreOrderedByDueDate {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0000",
			slaDefinitionName = "SLAName",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		for (var addBlogs : list "1,2") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content ${addBlogs}",
				entryTitle = "Blogs Entry Title ${addBlogs}");
		}

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		AssertElementPresent(
			key_value = "up",
			locator1 = "WorkflowMetricsProcessListView#ANY_ARROW_ORDER");
	}

	@description = "LPS-94146 - Verify that user can close the filters shown as tags clicking on x and the result is applied on items list"
	@priority = "4"
	test FiltersCanBeClosedAndResultAppliedOnList {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title 2");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WorkflowMetrics.viewItemFilterByOnAllItemsPage(
			allItemsFilterName = "Process Status",
			assigneeName = "Unassigned",
			filterValueName = "Pending",
			isNotPresent = "Blogs Entry Title 1,N/A",
			isPresent = "Blogs Entry Title 2",
			taskName = "Review");

		WorkflowMetrics.clearAllFilter();

		WorkflowMetrics.verifyFiltersFromDashboardNotPresent(isNotPresent = "Pending");

		WorkflowMetrics.assertAllItemsValues(
			assigneeName = "N/A",
			isPresent = "Blogs Entry Title 1",
			taskName = "Completed");
	}

	@description = "LPS-87571 - Verify that when user reaches the page through Dashboard tab, the filter options are: SLA Status, Process Status, Process Step and Assignee"
	@priority = "3"
	test FiltersDisplayedWhenReachingPageThroughDashboardTab {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_VALUE");

		AssertElementPresent(
			key_allItemsFilterName = "SLA Status",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertElementPresent(
			key_allItemsFilterName = "Process Status",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertElementPresent(
			key_allItemsFilterName = "Process Step",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertElementPresent(
			key_allItemsFilterName = "Assignee",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");
	}

	@description = "LPS-87571 - Verify that when user reaches the page through Performance tab, the filter options are: SLA Status, Process Status, Process Step, Completion Time and Assignee"
	@priority = "3"
	test FiltersDisplayedWhenReachingPageThroughPerformanceTab {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		Click(locator1 = "WorkflowMetrics#PERFORMANCE_TOTAL_COMPLETED_ITEMS_VALUE");

		AssertElementPresent(
			key_allItemsFilterName = "SLA Status",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertElementPresent(
			key_allItemsFilterName = "Process Status",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertElementPresent(
			key_allItemsFilterName = "Completion Period",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertElementPresent(
			key_allItemsFilterName = "Process Step",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertElementPresent(
			key_allItemsFilterName = "Assignee",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");
	}

	@description = "LPS-86652 - Verify that hovering the cursor on a ellipsis text will display a tooltip that contains the rest of the text"
	@priority = "3"
	test HoveringCursorDisplayTooltip {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry  Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		MouseOver(
			key_workflowInstanceName = "Blogs Entry Title",
			locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_NAME");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#TOOLTIP",
			value1 = "Blogs Entry: Blogs Entry Title");
	}

	@description = "Verify that, in the item detail modal, when an item is completed with No SLA, the icon on modal title will keep informing the SLA status but styled in grey color"
	@priority = "3"
	test IconOnModalTitleIsGreyWhenItemIsCompletedNoSLA {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "COMPLETED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "Single Approver");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#NO_SLA_RECORDS_MESSAGE");

		AssertCssValue(
			locator1 = "WorkflowAllItems#MODAL_TITLE_ICON",
			locator2 = "color",
			value1 = "rgba(107, 108, 126, 1)");
	}

	@description = "LPS-92053 - Verify that, in the item detail modal, when an item is completed On Time, the icon on modal title will keep informing the SLA status but styled in grey color"
	@priority = "3"
	test IconOnModalTitleIsGreyWhenItemIsCompletedOnTime {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:05",
			slaDefinitionName = "SLA Definition",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.waitForSLA(
			key_expectedValue = "0",
			key_status = "ONTIME");

		Workflow.completeWorkflowBlogInstance(key_workflowInstanceTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		Click(
			key_index = "2",
			locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_COMPLETED_ITEMS_BUTTON");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertCssValue(
			locator1 = "WorkflowAllItems#MODAL_TITLE_ICON",
			locator2 = "color",
			value1 = "rgba(107, 108, 126, 1)");
	}

	@description = "LPS-92053 - Verify that, in the item detail modal, when an item is completed Overdue, the icon on modal title will keep informing the SLA status but styled in grey color "
	@priority = "3"
	test IconOnModalTitleIsGreyWhenItemIsCompletedOverdue {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Definition",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.waitForSLA(
			key_expectedValue = "0",
			key_status = "OVERDUE");

		Workflow.completeWorkflowBlogInstance(key_workflowInstanceTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		Pause(locator = "120000");

		Refresh();

		Click(
			key_index = "4",
			locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_COMPLETED_ITEMS_BUTTON");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Refresh();

		Pause(locator1 = "10000");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(
			key_status = "Overdue",
			locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_DEFINITION_RESOLVED");

		AssertCssValue(
			locator1 = "WorkflowAllItems#MODAL_TITLE_ICON",
			locator2 = "color",
			value1 = "rgba(107, 108, 126, 1)");
	}

	@description = "LPS-92053 - Verify that an item is considered overdue if it has at least one SLA overdue, regardless if it is resolved or open"
	@priority = "4"
	test ItemIsConsideredOverdueWhenItHasOneSlaOverdue {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		AssertElementPresent(locator1 = "WorkflowMetrics#METRICS_NO_SLA_MESSAGE");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "Test 1 Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0001",
			slaDefinitionName = "Test 1",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "Test 2 Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0000",
			slaDefinitionName = "Test 2",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content 1",
			entryTitle = "Test Blog 1");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.waitForSLA(
			key_expectedValue = "0",
			key_status = "OVERDUE");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		var getInstanceId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(
			key_slaStatusTitle = "OPEN",
			locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_STATUS_TITLE");

		AssertElementPresent(
			key_slaInfo = "Overdue",
			key_slaName = "Test 1",
			locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_STATUS_INFO");

		Click(locator1 = "WorkflowAllItems#DETAIL_PAGE_CLOSE");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Test Blog 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Test Blog 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		Click(locator1 = "WorkflowMetrics#PERFORMANCE_TOTAL_COMPLETED_ITEMS_VALUE");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		while (IsElementPresent(key_slaStatusTitle = "OPEN", locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_STATUS_TITLE") && (maxIterations = "24")) {
			echo("Waiting 5 seconds to recheck");

			Click(locator1 = "WorkflowAllItems#DETAIL_PAGE_CLOSE");

			Pause(locator1 = "5000");

			Refresh();

			Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");
		}

		AssertElementPresent(
			key_slaStatusTitle = "RESOLVED",
			locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_STATUS_TITLE");

		AssertElementPresent(
			key_slaInfo = "Resolved Overdue",
			key_slaName = "Test 1",
			locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_STATUS_INFO");
	}

	@description = "LPS-92053 - Verify that the item modal places an icon before the modal title referring to the SLA status: No SLA"
	@priority = "3"
	test ItemModalPlacesIconReferringToSlaStatusNoSla {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_VALUE");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_SLA_STATUS_BEFORE_TITLE");
	}

	@description = "LPS-92053 - Verify that the item modal places an icon before the modal title referring to the SLA status: On Time"
	@priority = "3"
	test ItemModalPlacesIconReferringToSlaStatusOnTime {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0100",
			slaDefinitionName = "SLAName",
			slaDefinitionPause = "On Task: Update",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		JSONBlog.addEntry(
			entryContent = "Blogs Content",
			entryTitle = "Blogs Title 1");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		Pause(locator1 = "60000");

		Refresh();

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(
			key_status = "check",
			locator1 = "WorkflowAllItems#DETAIL_SLA_STATUS");
	}

	@description = "LPS-92053 - Verify that the item modal places an icon before the modal title referring to the SLA status: Overdue"
	@priority = "3"
	test ItemModalPlacesIconReferringToSlaStatusOverdue {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0001",
			slaDefinitionName = "SLAName",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		JSONBlog.addEntry(
			entryContent = "Blogs Content",
			entryTitle = "Blogs Title 1");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.waitForSLA(
			key_expectedValue = "0",
			key_status = "OVERDUE");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(
			key_status = "exclamation",
			locator1 = "WorkflowAllItems#DETAIL_SLA_ICON");
	}

	@description = "LPS-130216 - Verify that once the order/sorting is made by the user, this definition should be preserved when the user change pagination number."
	@priority = "3"
	test ItemOrdetationIsPreservedWhenChangesPagination {
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#ItemOrdetationIsPreservedWhenChangesPagination";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		for (var webContentNumber : list "1,2,3,4") {
			JSONWebcontent.addWebContent(
				content = "WC Content",
				groupName = "Guest",
				title = "Web Content Title ${webContentNumber}");
		}

		for (var blogNumber : list "5,6,7,8") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry Title ${blogNumber}");
		}

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetricsAllItemsList.orderByCreationDateAsc();

		WorkflowMetricsProcessListView.changePagination(itemsPerPage = "8 Entries");

		for (var orderNumber : list "1,2,3,4") {
			AssertElementPresent(
				key_itemSubject = "Web Content Article: Web Content Title ${orderNumber}",
				key_order = "${orderNumber}",
				locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ITEM_ORDER");
		}

		for (var orderNumber : list "5,6,7,8") {
			AssertElementPresent(
				key_itemSubject = "Blogs Entry: Blogs Entry Title ${orderNumber}",
				key_order = "${orderNumber}",
				locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ITEM_ORDER");
		}

		WorkflowMetricsProcessListView.changePagination(itemsPerPage = "20 Entries");

		for (var orderNumber : list "1,2,3,4") {
			AssertElementPresent(
				key_itemSubject = "Web Content Article: Web Content Title ${orderNumber}",
				key_order = "${orderNumber}",
				locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ITEM_ORDER");
		}

		for (var orderNumber : list "5,6,7,8") {
			AssertElementPresent(
				key_itemSubject = "Blogs Entry: Blogs Entry Title ${orderNumber}",
				key_order = "${orderNumber}",
				locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ITEM_ORDER");
		}
	}

	@description = "LPS-86652 - Verify that long texts will display ellipsis"
	@priority = "3"
	test LongTextsDisplayEllipsis {
		property portal.upstream = "quarantine";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		JSONWebcontent.addWebContent(
			content = "WebContent Content",
			groupName = "Guest",
			title = "WebContent Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetricsAndTotalCompleted(workflowProcessName = "Single Approver");

		WorkflowMetrics.viewTableSizeInTheAllItems(
			itemTable = "Web Content Article: WebContent Title",
			itemTableSize = "106.887px");
	}

	@description = "LPS-98517 - Verify that the long usernames in the result table do not break into different lines"
	@priority = "3"
	test LongUserNameDisplaysEllipsis {
		property portal.upstream = "quarantine";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONUser.addUser(
			userEmailAddress = "buyerbuyer@liferay.com",
			userFirstName = "buyerbuyerbuyerbuyerbuyer",
			userLastName = "buyerbuyerbuyerbuyerbuyer",
			userScreenName = "buyerbuyerbuyerbuyerbuyer");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Administrator",
			userScreenName = "buyerbuyerbuyerbuyerbuyer");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.assignTaskToUser(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry",
			assigneeName = "buyerbuyerbuyerbuyerbuyer (buyerbuyerbuyerbuyerbuyer buyerbuyerbuyerbuyerbuyer)",
			workflowTask = "Review");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetrics.viewTableSizeInTheAllItems(
			itemTable = "buyerbuyerbuyerbuyerbuyer",
			itemTableSize = "106.887px");
	}

	@description = "LPS-98517 - Verify that a long username that exceeds 240px in the assignee dropdown option is placed in more than one line, respecting the alignment of the field"
	@priority = "3"
	test LongUserNameIsDisplayedInMoreThanOneLineInDropdown {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONUser.addUser(
			userEmailAddress = "test2@liferay.com",
			userFirstName = "testtesttesttesttesttesttesttest",
			userLastName = "testtesttesttesttesttesttesttest",
			userScreenName = "testtesttesttesttesttesttesttesttesttesttesttesttesttesttest");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "test2@liferay.com");

		JSONBlog.addEntry(
			entryContent = "Blogs Content",
			entryTitle = "Blogs Title 1");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.assignTaskToUser(
			assetTitle = "Blogs Title 1",
			assetType = "Blogs Entry",
			assigneeName = "testtesttesttesttesttesttesttesttesttesttesttesttesttesttest (testtesttesttesttesttesttesttest testtesttesttesttesttesttesttest)",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_UNTRACKED_ITEMS_TITLE");

		Click(
			key_allItemsFilterName = "Assignee",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertCssValue(
			key_workflowStep = "testtesttesttesttesttesttesttest",
			locator1 = "WorkflowMetrics#METRICS_WORKLOAD_BY_ASSIGNEE_CARD_FILTER_OPTION2",
			locator2 = "font-weight",
			value1 = "400");
	}

	@description = "Verify that users with different roles then administrator can't reassign tasks"
	@ignore = "Test Stub"
	@priority = "4"
	test NonAdministratorUsersCantReassignTasks {

		// TODO NonAdministratorUsersCantReassignTasks pending implementation

	}

	@description = "LPS-92053 - Verify that the Go to submission page button opens the submission page in another tab"
	@priority = "4"
	test OpenSubmissionPageInAnotherTab {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#BUTTON_GO_TO_SUBMISSION_PAGE");

		Pause(locator1 = "3000");
	}

	@description = "LPS-130167 - Verify that the ordination icon is displayed next to the column title to be ordered"
	@priority = "3"
	test OrdinationIconIsDisplayedNextToDueDateColumn {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Content 1",
			entrySubtitle = "Subtitle 1",
			entryTitle = "Blogs Entry 1");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowAllItems#DUE_DATE_COLUMN");

		AssertElementPresent(locator1 = "WorkflowAllItems#DUE_DATE_ICON");
	}

	@description = "LPS-130166 - Verify that popover for Due Date will display up to 2 SLAs and the order should be from the most to the least critical SLA"
	@priority = "3"
	test PopoverDisplaysUpTo2SlasOrderFromMostToLeastCritical {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "Test Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "01:00",
			slaDefinitionName = "Test1",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "Test Description 2",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:00",
			slaDefinitionName = "Test2",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "Test Description 3",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:30",
			slaDefinitionName = "Test3",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry");

		Pause(locator1 = "60000");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "ONTIME",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetrics.assertDueDatePopoverInfo(
			itemPosition = "3",
			rowNumber = "1",
			slaName = "Test3",
			slaPosition = "1");

		WorkflowMetrics.assertDueDatePopoverInfo(
			itemPosition = "3",
			rowNumber = "1",
			slaName = "Test1",
			slaPosition = "2");
	}

	@description = "LPS-130166 - Verify that the popover is not displayd when hovering untracked items on Due Date column item"
	@priority = "3"
	test PopoverIsNotDisplayedForUntrackedItems {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		AssertElementPresent(
			key_workflowInstanceName = "Blogs Entry Title",
			locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_NAME");

		MouseOver(
			key_workflowInstanceName = "Blogs Entry Title",
			locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_NAME");

		MouseOver(locator1 = "WorkflowMetricsAllItemsList#DUE_DATE_BUTTON_ALL_ITEMS_LIST");

		AssertElementNotPresent(locator1 = "WorkflowDefinition#DIALOG_BOX_BODY");
	}

	@description = "LPS-130217 - Verify that user is able to click on the table header title to order items by Creation Date: old-new / new-old"
	@priority = "4"
	test ReorderEntriesClickingCreationDateColumn {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 1");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 2");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "COMPLETED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "Single Approver");

		WorkflowMetrics.clearAllFilter();

		AssertElementPresent(
			key_order = "1",
			key_processStep = "Completed",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ORDER");

		AssertElementPresent(
			key_order = "2",
			key_processStep = "Review",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ORDER");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_BUTTON_CREATION_DATE");

		AssertElementPresent(
			key_order = "1",
			key_processStep = "Review",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ORDER");

		AssertElementPresent(
			key_order = "2",
			key_processStep = "Completed",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ORDER");
	}

	@description = "LPS-130167 - Verify that the user is able to reorder entries by clicking the Due Date column title"
	@priority = "3"
	test ReorderEntriesClickingDueDateColumn {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Name",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		JSONBlog.addEntry(
			entryContent = "Blogs Entry  Content",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry  Content",
			entryTitle = "Blogs Entry Title 2");

		Pause(locator1 = "60000");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: Blogs Entry Title 1",
			keyCompare = "Blogs Entry: Blogs Entry Title 2",
			rowNumber = "1");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: Blogs Entry Title 2",
			keyCompare = "Blogs Entry: Blogs Entry Title 1",
			rowNumber = "2");

		Pause(locator1 = "60000");

		Click(
			key_orderBy = "Due Date",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ORDER_BY");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: Blogs Entry Title 2",
			keyCompare = "Blogs Entry: Blogs Entry Title 1",
			rowNumber = "1");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: Blogs Entry Title 1",
			keyCompare = "Blogs Entry: Blogs Entry Title 2",
			rowNumber = "2");
	}

	@description = "LPS-98517 - Verify that if Assignee dropdown menu is higher than 496px a search bar is added on it as specified on Figma"
	@priority = "3"
	test SearchBarIsAddedOnAssigneeDropdownMenuWhenItIsHigherThan496px {
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#SearchBarIsAddedOnAssigneeDropdownMenuWhenItIsHigherThan496px";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		WorkflowMetrics.createUsersAndAssignInstances(
			numberOfBlogInstances = "13",
			numberOfUsers = "13",
			site = "${siteName}");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		Click(
			key_allItemsFilterName = "Assignee",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_ASSIGNEE_DROPDOWN_SEARCHBAR");

		Type(
			locator1 = "WorkflowAllItems#WORKFLOW_ASSIGNEE_DROPDOWN_SEARCHBAR",
			value1 = "5user user5");

		AssertElementPresent(
			key_userName = "5user user5",
			locator1 = "WorkflowAllItems#WORKFLOW_ASSIGNEE_DROPDOWN_SEARCHBAR_OPTION");
	}

	@description = "LPS-92053 - Verify that, in the item detail modal, when one of the sections has no entries, the section title is completely removed"
	@priority = "4"
	test SectionIsRemovedWhenItHasNoEntries {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_CURRENT_STEP");

		Navigator.gotoBack();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "COMPLETED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "Single Approver");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementNotPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_CURRENT_STEP");
	}

	@description = "LPS-92052 - Verify that when the task has multiple assignees, the sort considers the first one displayed on the row"
	@priority = "3"
	test SortConsidersOnlyTheFirstAssignee {
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#SortConsidersOnlyTheFirstAssignee";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		for (var orderNumber : list "1,2,3") {
			var key_order = "${orderNumber}";
			var key_title = "Blogs Entry: Blogs Entry Title ${orderNumber}";

			JSONUser.addUser(
				userEmailAddress = "user${orderNumber}@liferay.com",
				userFirstName = "user${orderNumber}",
				userLastName = "user${orderNumber}",
				userScreenName = "user${orderNumber}");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "user${orderNumber}@liferay.com");

			JSONRole.assignRoleToUser(
				roleTitle = "Administrator",
				userEmailAddress = "user${orderNumber}@liferay.com");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "People",
			panel = "Site Administration",
			portlet = "Memberships");

		for (var orderNumber : list "1,2,3") {
			var key_order = "${orderNumber}";

			Site.assignUserAsMemberCP(
				userFirstName = "user${orderNumber}",
				userLastName = "user${orderNumber}",
				userScreenName = "user${orderNumber}");
		}

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "Similar Single Approver Process");

		ProcessBuilderKaleoDesignerReact.uploadDefinition(workflowDefinitionFile = "similar-single-approver-workflow-definition.xml");

		ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();

		Button.clickPublish();

		Navigator.gotoBack();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Similar Single Approver Process",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title 2");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Similar Single Approver Process");

		WorkflowMetrics.goToBulkReassignSelectTasks();

		WorkflowMetrics.selectReassignTasks(taskList = "task1");

		AssertElementPresent(locator1 = "WorkflowReassignModal#PERMISSION_TOOLTIP");

		AssertElementPresent(locator1 = "WorkflowReassignModal#NEXT_BUTTON_DISABLED");

		WorkflowMetrics.selectNewAssignee(
			nameOfAssignee = "user1 user1",
			taskList = "task1");

		WorkflowMetrics.goToBulkReassignSelectTasks();

		WorkflowMetrics.selectReassignTasks(taskList = "task2");

		AssertElementPresent(locator1 = "WorkflowReassignModal#PERMISSION_TOOLTIP");

		AssertElementPresent(locator1 = "WorkflowReassignModal#NEXT_BUTTON_DISABLED");

		WorkflowMetrics.selectNewAssignee(
			nameOfAssignee = "user2 user2",
			taskList = "task2");

		WorkflowMetrics.goToBulkReassignSelectTasks();

		WorkflowMetrics.selectReassignTasks(taskList = "task3");

		AssertElementPresent(locator1 = "WorkflowReassignModal#PERMISSION_TOOLTIP");

		AssertElementPresent(locator1 = "WorkflowReassignModal#NEXT_BUTTON_DISABLED");

		WorkflowMetrics.selectNewAssignee(
			nameOfAssignee = "user3 user3",
			taskList = "task3");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Similar Single Approver Process");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ASSIGNEE_HEADER");

		AssertElementPresent(
			key_assigneeName = "user1 user1, user2 user2, user3 user3",
			key_order = "1",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_ASSIGNEE_ORDER");
	}

	@description = "LPS-130216 - Verify that the Item Subject sort will only use the Asset Type information for sorting."
	@priority = "4"
	test SortOnlyUseAssetTypeInformation {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "AA");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "CC");

		JSONWebcontent.addWebContent(
			content = "WC Content",
			groupName = "Guest",
			title = "BB");

		JSONWebcontent.addWebContent(
			content = "WC Content",
			groupName = "Guest",
			title = "DD");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		Click(
			key_orderBy = "Item Subject",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_ORDER_BY");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Web Content Article: BB",
			keyCompare = "Blogs Entry: AA",
			rowNumber = "1");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Web Content Article: DD",
			keyCompare = "Blogs Entry: CC",
			rowNumber = "2");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: AA",
			keyCompare = "Web Content Article: BB",
			rowNumber = "3");

		WorkflowMetrics.assertTableOrder(
			itemTitle = "Blogs Entry: CC",
			keyCompare = "Web Content Article: DD",
			rowNumber = "4");
	}

	@description = "LPS-92053 - Verify that, in the item detail modal, when an item is completed, the summary section should hide the info Current Step and replace it with End Date"
	@priority = "3"
	test SummarySectionDisplaysEndDateInsteadOfCurrentStep {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		var getInstanceId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_CURRENT_STEP");

		Click(locator1 = "WorkflowAllItems#DETAIL_PAGE_CLOSE");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Test Blog",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Test Blog",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_COMPLETED_ITEMS_TITLE");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementNotPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_CURRENT_STEP");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_END_DATE");
	}

	@description = "LPS-86652 - Verify that hovering the cursor on the process step, when it contains more than 1 option, the toolip will display a bullet list"
	@priority = "3"
	test TooltipDisplaysStepsListWhenMultipleItems {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#TooltipDisplaysBulletListWhenMultipleItems";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "Multi Task Process");

		ProcessBuilderKaleoDesignerReact.uploadDefinition(workflowDefinitionFile = "multi-task-process-workflow-definition.xml");

		ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();

		Button.clickPublish();

		Navigator.gotoBack();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Multi Task Process",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Multi Task Process");

		WorkflowMetricsAllItemsList.assertProcessStepTooltipMessage(workflowInstanceName = "task1, task2, task3");
	}

	@description = "LPS-92053 - Verify that the Go to submission page button, on hover, displays a tooltip saying Open page in new tab"
	@priority = "3"
	test TooltipIsDisplayedWhenHoveringButton {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		MouseOver(locator1 = "WorkflowAllItems#DETAIL_PAGE_GO_TO_SUBMISSION_PAGE");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_GO_TO_SUBMISSION_PAGE_TOOLTIP");
	}

	@description = "Verify that when the user make changes in the Workflow, the Track Approval displays the correct version"
	@priority = "4"
	test TrackApprovalDisplayCorrectVersionAfterChange {
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#TrackApprovalDisplayCorrectVersionAfterChange";

		Workflow.openWorkflowListView();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();

		WorkflowMetricsAllItemsList.viewNodesDisplayed(nodesTrackWorkflow = "Created,Review,Update,Approved");

		Workflow.openWorkflowListView();

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		WorkflowMetricsAllItemsList.selectAndChangeNodeName(
			nodeLabel = "review",
			nodeName = "Review changed",
			nodeType = "task",
			update = "true");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();

		WorkflowMetricsAllItemsList.viewNodesDisplayed(nodesTrackWorkflow = "created,Review changed,update,approved");
	}

	@description = "Verify that when the user clicks the link in the detail modal, the Workflow in use is displayed"
	@priority = "5"
	test TrackApprovalDisplayWorkflowInUse {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#TrackApprovalDisplayWorkflowInUse";

		Workflow.openWorkflowListView();

		Workflow.addNewDefinition(workflowDefinitionTitle = "Multi Task Process");

		ProcessBuilderKaleoDesignerReact.uploadDefinition(workflowDefinitionFile = "multi-task-process-workflow-definition.xml");

		ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();

		Button.clickPublish();

		Navigator.gotoBack();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Multi Task Process",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Multi Task Process");

		WorkflowMetricsAllItemsList.viewDetailsModal();

		WorkflowMetricsAllItemsList.goToTrackWorkflowlink();

		WorkflowMetricsAllItemsList.viewNodesDisplayed(nodesTrackWorkflow = "start,task1,task2,task3,end");
	}

	@description = "LPS-108138 - Verify that, in All Items page, when the users select an instance that can't be transitioned by them, the option to transition is not available to be selected"
	@priority = "4"
	test TransitionOptionIsNotAvailableWhenUserCanNotTransitionInstance {
		JSONUser.addUser(
			userEmailAddress = "user@liferay.com",
			userFirstName = "user",
			userLastName = "user",
			userScreenName = "user");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "user@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "user@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Power User",
			userEmailAddress = "user@liferay.com");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		PortalSettings.gotoConfiguration(
			configurationCategory = "User Authentication",
			configurationName = "General",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.uncheckStrangersVerifyEmailCheckbox();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "People",
			panel = "Site Administration",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "user",
			userLastName = "user",
			userScreenName = "user");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.assignTaskToUser(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry",
			assigneeName = "user (user user)",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		MouseOver.mouseOverNotVisible(locator1 = "WorkflowAllItems#WORKFLOW_DROPDOWN_DISABLED");
	}

	@description = "LPS-98517 - Verify that the usernames in the result table are separated by a comma when there is more than one assignee per item"
	@priority = "3"
	test UsernamesAreSeparatedByComma {
		property portal.acceptance = "true";

		// TODO LRQA-67751 UsernamesAreSeparatedByComma pending implementation

	}

	@description = "LPS-98517 - Verify that, in the item detail modal, the usernames are separated by a comma when there is more than one assignee per item under the Process Details section"
	@priority = "3"
	test UsernamesAreSeparatedByCommaInItemDetailModal {
		property test.name.skip.portal.instance = "WorkflowMetricsAllItemsList#UsernamesAreSeparatedByCommaInItemDetailModal";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "Multi Task Process");

		ProcessBuilderKaleoDesignerReact.uploadDefinition(workflowDefinitionFile = "multi-task-process-workflow-definition.xml");

		ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();

		Button.clickPublish();

		Navigator.gotoBack();

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Multi Task Process",
			workflowResourceValue = "Blogs Entry");

		JSONUser.addUser(
			userEmailAddress = "user1@liferay.com",
			userFirstName = "User",
			userLastName = "User",
			userScreenName = "User1");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "user1@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "user1@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Power User",
			userEmailAddress = "user1@liferay.com");

		JSONBlog.addEntry(
			entryContent = "Test Content 1",
			entryTitle = "Test Blog 1");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Multi Task Process");

		WorkflowMetrics.goToBulkReassignSelectTasks();

		WorkflowMetrics.selectReassignTasks(taskList = "task1");

		WorkflowMetrics.selectNewAssignee(
			nameOfAssignee = "User User",
			taskList = "task1");

		WorkflowMetrics.goToBulkReassignSelectTasks();

		WorkflowMetrics.selectReassignTasks(taskList = "task3");

		Click(locator1 = "WorkflowReassignModal#NEXT_BUTTON");

		WorkflowMetrics.selectNewAssignee(
			nameOfAssignee = "Test Test",
			taskList = "task3");

		while (IsElementNotPresent(key_workflowInstanceAssignee = "Test Test, Unassigned, User User", key_workflowInstanceName = "Blogs Entry", locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_TABLE_CURRENT_ASSIGNEE_VALUE") && (maxIterations = "20")) {
			Pause(locator1 = "3000");

			Refresh();
		}

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(
			locator1 = "WorkflowAllItems#DETAIL_PAGE_CURRENT_ASSIGNEE",
			value1 = "Test Test, Unassigned, User User");
	}

	@description = "This is a use case for LPS-98825."
	@priority = "5"
	test ViewMyWorkflowTasksOrderResults {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		for (var webContentNumber : list "1,2,3") {
			JSONWebcontent.addWebContent(
				content = "WC Content",
				groupName = "Guest",
				title = "Web Content Title ${webContentNumber}");
		}

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		ContentDashboard.orderByModificationDate(filterOption = "Last Activity Date");

		for (var rowNumber : list "1,2,3") {
			AssertElementPresent(
				key_rowNumber = "${rowNumber} + 1",
				locator1 = "WorkflowAllItems#METRICS_PROCESS_NAME_TABLE_ROW",
				value1 = "Web Content Title ${rowNumber}");
		}

		Workflow.clickRevertSortDirection();

		for (var rowNumber : list "3,2,1") {
			AssertElementPresent(
				key_rowNumber = "5 - ${rowNumber}",
				locator1 = "WorkflowAllItems#METRICS_PROCESS_NAME_TABLE_ROW",
				value1 = "Web Content Title ${rowNumber}");
		}
	}

	@description = "LPS-92053 - Verify that, in the item detail modal, Pause instead of due date, the UI will inform SLA Paused sentence next to the SLA name"
	@priority = "4"
	test WhenSlaIsPausedSlaPausedIsDisplayedInsteadOfDueDate {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLAName",
			slaDefinitionPause = "On Task: Update",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Pause(locator1 = "60000");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		var getInstanceId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_PAUSED");
	}

	@description = "LPS-92053 - Verify that, in the item detail modal, Open when an SLA is paused, the SLA status will be related to the moment when it triggered the pause timer"
	@priority = "4"
	test WhenSlaIsPausedSlaStatusIsRelatedToThePauseTimer {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Definition 1",
			slaDefinitionPause = "On Task: Review",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		Pause(locator1 = "60000");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_PAUSED");
	}

}