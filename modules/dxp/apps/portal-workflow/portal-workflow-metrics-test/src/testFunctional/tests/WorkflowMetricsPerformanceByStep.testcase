@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Workflow Metrics";

	setUp {
		TestCase.setUpPortalInstance();

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		User.firstLoginPG();

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-130215 - Verify that the filter offers an option for each existing version"
	@ignore = "Test Stub"
	@priority = "5"
	test CanChooseEspecifcVersionOnPage {
		Workflow.openWorkflowListView();

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		Workflow.updateDefinition(workflowDefinitionTitle = "Single Approver Updated");

		KaleoDesigner.deleteNode(nodeNodeLabel = "update");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver Update");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepTooltip();

		WorkflowMetricsPerformanceByStep.clickViewAllSteps(
			stepsNumber = "1",
			valueSteps = "View All Steps (1)");

		Click(
			key_dateRange = "Process Version",
			key_title = "",
			locator1 = "WorkflowMetrics#METRICS_DATE_RANGE_DROPDOWN_BY_TITLE");

		AssertElementPresent(
			key_dateRange = "1.0",
			locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");

		AssertElementPresent(
			key_dateRange = "2.0",
			locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");

		AssertElementPresent(
			key_dateRange = "3.0",
			locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");
	}

	@description = "LPS-101075 - Verify that the filter offers an option for each existing version"
	@ignore = "Test Stub"
	@priority = "5"
	test CanFilterByEachExistingVersion {
		Workflow.openWorkflowListView();

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		Workflow.updateDefinition(workflowDefinitionTitle = "Single Approver Updated");

		KaleoDesigner.deleteNode(nodeNodeLabel = "update");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver Update");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepTooltip();

		Click(
			key_dateRange = "All Versions",
			key_title = "",
			locator1 = "WorkflowMetrics#METRICS_DATE_RANGE_DROPDOWN_BY_TITLE");

		AssertElementPresent(
			key_dateRange = "1.0",
			locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");

		AssertElementPresent(
			key_dateRange = "2.0",
			locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");

		AssertElementPresent(
			key_dateRange = "3.0",
			locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");
	}

	@description = "LPS-101075 - Verify that the filter is available on the card in the Performance tab"
	@priority = "5"
	test CanFilterTopStepsByWorkflowVersion {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetricsPerformanceByStep.goToPerformanceTab();

		AssertElementPresent(
			key_title = "All Versions",
			locator1 = "WorkflowMetricsPerformanceByStep#PROCESS_VERSION_TITLE");
	}

	@description = "LPS-100674 - Verify that the user can not insert a future date"
	@priority = "2"
	test CannotInsertFutureDate {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		var displayDateYear = DateUtil.getCurrentYear();
		var displayDateYear = ${displayDateYear} + 1;

		WorkflowMetrics.selectDateRange(
			completionVelocityDateRange = "Custom Range",
			dateRange = "Last 30 Days",
			endDateRange = "01/01/${displayDateYear}",
			startDateRange = "02/01/2021",
			title = "Performance by Step");

		WorkflowMetrics.viewDateRangeErrorMessage(errorMessage = "Please enter a valid date.");
	}

	@description = "LPS-130215 - Verify that the user is not able so select more than one version"
	@ignore = "Test Stub"
	@priority = "3"
	test CanNotSelectMoreThanOneVersion {
		Workflow.openWorkflowProcessBuilderConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Workflow.openWorkflowListView();

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		Workflow.updateDefinition(workflowDefinitionTitle = "Single Approver Updated");

		KaleoDesigner.deleteNode(nodeNodeLabel = "update");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		WorkflowMetricsPerformanceByStep.clickViewAllSteps(
			stepsNumber = "1",
			valueSteps = "View All Steps (1)");

		WorkflowMetricsPerformanceByStep.selectProcessVersion(versionOption = "1.0");

		WorkflowMetricsPerformanceByStep.selectProcessVersion(versionOption = "2.0");

		AssertElementPresent(
			key_versionOption = "2.0",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PROCESS_VERSION_DROPDOWN_SELECTED");

		AssertElementNotPresent(
			key_versionOption = "1.0",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PROCESS_VERSION_DROPDOWN_SELECTED");
	}

	@description = "LPS-101075 - Verify that the filter offers an option to see all version together"
	@priority = "4"
	test CanSeeAllVersionsTogether {
		property test.name.skip.portal.instance = "WorkflowMetricsPerformanceByStep#CanSeeAllVersionsTogether";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry 1");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetricsPerformanceByStep.goToPerformanceTab();

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "1min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Update");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		WorkflowMetricsAllItemsList.selectAndChangeNodeID(
			nodeID = "review2",
			nodeLabel = "review",
			nodeType = "task",
			update = "true");

		WorkflowMetricsAllItemsList.selectAndChangeNodeID(
			nodeID = "update2",
			nodeLabel = "update",
			nodeType = "task",
			update = "true");

		Button.clickUpdate();

		Navigator.gotoBack();

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry 2");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry 2",
			workflowAssetType = "Blogs Entry",
			workflowTask = "review2");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry 2",
			workflowAssetType = "Blogs Entry",
			workflowTask = "review2");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetricsPerformanceByStep.goToPerformanceTab();

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "1min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "1min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "review2");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "update2");
	}

	@description = "LPS-130215 - Verify that the filter allows to see all version together"
	@priority = "5"
	test CanSeeAllVersionsTogetherOnPage {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetricsPerformanceByStep.goToPerformanceTab();

		Click(
			key_stepsNumber = "2",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

		Click(
			key_title = "Process Version",
			locator1 = "WorkflowMetricsPerformanceByStep#PROCESS_VERSION_TITLE");

		AssertElementPresent(
			key_option = "All Versions",
			locator1 = "WorkflowMetricsPerformanceByStep#PROCESS_VERSION_DROPDOWN_OPTION");
	}

	@description = "LPS-101075 - Verify that when a specific version is chosen, the card only considers closed instances that are in the version chosen"
	@priority = "4"
	test CardConsidersClosedInstancesInChosenVersion {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetricsPerformanceByStep.goToPerformanceTab();

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Update");

		Click(
			key_title = "All Versions",
			locator1 = "WorkflowMetricsPerformanceByStep#PROCESS_VERSION_TITLE");

		Click(
			key_option = "1.0",
			locator1 = "WorkflowMetricsPerformanceByStep#PROCESS_VERSION_DROPDOWN_OPTION");

		AssertElementPresent(locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_NO_RESULTS");
	}

	@description = "LPS-100674 - Verify that the card Performance by Step has no more than 10 entries displayed"
	@priority = "3"
	test CardDoesNotDisplayMoreThan10Entries {
		property test.name.skip.portal.instance = "WorkflowMetricsPerformanceByStep#CardDoesNotDisplayMoreThan10Entries";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "11 Transitions Definition");

		ProcessBuilderKaleoDesignerReact.uploadDefinition(workflowDefinitionFile = "11-transitions-workflow-definition.xml");

		ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();

		PortletEntry.publish();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "11 Transitions Definition");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		AssertElementNotPresent(
			key_rowNumber = "11",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ROW");
	}

	@description = "LPS-100674 - Verify that the card Performance by Steps works as designed when the portal is set to a non-en-US locale"
	@priority = "3"
	test CardWorksAsDesignedWhenPortalIsSetToNonEnUsLocale {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		WorkflowMetrics.assertChartTotalValuePerformanceByStep(
			avgCompletionTime = "0min",
			rowName = "Review",
			slaBreachedValue = "0 (0%)");

		User.openUsersAdmin();

		User.editDisplaySettingsCP(
			languageName = "español (España)",
			userScreenName = "Test Test");

		ApplicationsMenu.gotoPortlet(
			category = "Flujo de trabajo",
			panel = "Aplicaciones",
			portlet = "Métricas");

		Click(
			key_workflowProcessName = "Aprobador único",
			locator1 = "WorkflowMetrics#METRICS_WORKFLOW_PROCESS_NAME");

		Navigator.gotoNavItem(navItem = "Eficiencia");

		WorkflowMetrics.assertChartTotalValuePerformanceByStep(
			avgCompletionTime = "0min",
			rowName = "Revisión",
			slaBreachedValue = "0 (0%)");

		WorkflowMetrics.assertChartTotalValuePerformanceByStep(
			avgCompletionTime = "0min",
			rowName = "Modificar",
			slaBreachedValue = "0 (0%)");

		Click(
			key_viewStepsNumber = "Ver todos los pasos (2)",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS_TRANSLATION");

		AssertElementPresent(
			key_value = "Aprobador único: Rendimiento por paso",
			locator1 = "WorkflowAllItems#WORKFLOW_HEADER_TITLE");
	}

	@description = "LPS-101075 - Verify that the default value for the filter is All Versions"
	@priority = "4"
	test DefalutFilterValueIsAllVersions {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetricsPerformanceByStep.goToPerformanceTab();

		AssertElementPresent(
			key_title = "All Versions",
			locator1 = "WorkflowMetricsPerformanceByStep#PROCESS_VERSION_TITLE");
	}

	@description = "LPS-100674 - Verify that the default date format for en-US in Custom Range filter is MM/DD/YYYY"
	@priority = "3"
	test DefaultDateFormatIsMMDDYYYY {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		Click(
			key_dateRange = "Last 30 Days",
			key_title = "Performance by Step",
			locator1 = "WorkflowMetrics#METRICS_DATE_RANGE_DROPDOWN_BY_TITLE");

		Click(
			completionVelocityDateRange = "Custom Range",
			locator1 = "WorkflowMetrics#METRICS_COMPLETION_VELOCITY_DATE_RANGE_DROPDOWN_OPTION");

		AssertElementPresent(
			key_dateFormat = "Default date format is MM/DD/YYYY.",
			locator1 = "WorkflowMetricsCompletionVelocity#DEFAULT_DATE_FORMAT_MESSAGE");
	}

	@description = "LPS-101075 - Verify that the All Versions filter considers only the steps touched by the task"
	@priority = "4"
	test FilterConsidersStepsTouchedByTaks {
		property test.name.skip.portal.instance = "WorkflowMetricsPerformanceByStep#FilterConsidersStepsTouchedByTaks";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetricsPerformanceByStep.goToPerformanceTab();

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "1min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Update");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		WorkflowMetricsAllItemsList.selectAndChangeNodeID(
			nodeID = "review2",
			nodeLabel = "review",
			nodeType = "task",
			update = "true");

		WorkflowMetricsAllItemsList.selectAndChangeNodeID(
			nodeID = "update2",
			nodeLabel = "update",
			nodeType = "task",
			update = "true");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetricsPerformanceByStep.goToPerformanceTab();

		AssertElementNotPresent(
			key_stepName = "Update",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");
	}

	@description = "LPS-130215 - Verify that, selecting all versions, the filter considers only the steps touched by the task"
	@priority = "4"
	test FilterConsidersStepsTouchedByTaksOnPage {
		property test.name.skip.portal.instance = "WorkflowMetricsPerformanceByStep#FilterConsidersStepsTouchedByTaksOnPage";

		task ("Configure Single Approver Workflow to Blogs Entry") {
			ApplicationsMenu.gotoPortlet(
				category = "Workflow",
				panel = "Applications",
				portlet = "Process Builder");

			Navigator.gotoNavItem(navItem = "Configuration");

			Workflow.configureWorkflow(
				workflowDefinition = "Single Approver",
				workflowResourceValue = "Blogs Entry");
		}

		task ("Create blog entry and approve it") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				panel = "Site Administration",
				portlet = "Blogs");

			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry 1");

			UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

			Workflow.assignToMeTaskByActions(
				workflowAssetTitle = "Blogs Entry 1",
				workflowAssetType = "Blogs Entry",
				workflowTask = "Review");

			Workflow.approveTaskByActions(
				workflowAssetTitle = "Blogs Entry 1",
				workflowAssetType = "Blogs Entry",
				workflowTask = "Review");
		}

		task ("Edit Single Approver Workflow") {
			ApplicationsMenu.gotoPortlet(
				category = "Workflow",
				panel = "Applications",
				portlet = "Process Builder");

			Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

			WorkflowMetricsAllItemsList.selectAndChangeNodeID(
				nodeID = "review2",
				nodeLabel = "review",
				nodeType = "task",
				update = "true");

			WorkflowMetricsAllItemsList.selectAndChangeNodeID(
				nodeID = "update2",
				nodeLabel = "update",
				nodeType = "task",
				update = "true");

			Button.clickUpdate();
		}

		Navigator.gotoBack();

		task ("Create blog entry and approve it") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry 2");

			UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

			Workflow.assignToMeTaskByActions(
				workflowAssetTitle = "Blogs Entry 2",
				workflowAssetType = "Blogs Entry",
				workflowTask = "review2");

			Workflow.approveTaskByActions(
				workflowAssetTitle = "Blogs Entry 2",
				workflowAssetType = "Blogs Entry",
				workflowTask = "review2");
		}

		task ("Assert that the step Update is not displayed on Performance by Step page") {
			WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

			WorkflowMetricsPerformanceByStep.goToPerformanceTab();

			Click(
				key_stepsNumber = "3",
				locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

			AssertElementNotPresent(
				key_stepName = "Update",
				locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");
		}
	}

	@description = "LPS-130215 - Verify that the Process Version filter is available on the Performance by Step page"
	@priority = "5"
	test FilterIsAvailableOnPage {
		task ("Go to Performance by Step Page") {
			WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

			WorkflowMetricsPerformanceByStep.goToPerformanceTab();

			Click(
				key_stepsNumber = "2",
				locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");
		}

		task ("Assert that the Process Version filter is present") {
			AssertElementPresent(locator1 = "WorkflowMetricsPerformanceByStep#PROCESS_VERSION_DROPDOWN");
		}
	}

	@description = "LPS-100674 - Verify that when the user selects Last 7 Days time period, the result and filter options displayed in accordance with reference"
	@priority = "4"
	test FilterItemsFromLast7Days {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		var key_dateRange = "Last 7 Days";

		Click(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN");

		AssertElementPresent(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");
	}

	@description = "LPS-100674 - Verify that when the user selects Last 90 Days time period the result and filter options displayed in accordance with reference"
	@priority = "4"
	test FilterItemsFromLast90Days {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		var key_dateRange = "Last 90 Days";

		Click(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN");

		AssertElementPresent(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");
	}

	@description = "LPS-100674 - Verify that when the user selects Last 180 Days time period the result and filter options are displayed in accordance with reference"
	@priority = "4"
	test FilterItemsFromLast180Days {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		var key_dateRange = "Last 180 Days";

		Click(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN");

		AssertElementPresent(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");
	}

	@description = "LPS-100674 - Verify that when the user selects Last Year time period the result and filter options displayed in accordance with reference"
	@priority = "4"
	test FilterItemsFromLastYear {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		var key_dateRange = "Last Year";

		Click(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN");

		AssertElementPresent(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");
	}

	@description = "LPS-100674 - Verify that when the user selects Today time period the result and filter options are displayed in accordance with reference"
	@priority = "4"
	test FilterItemsFromToday {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		var key_dateRange = "Today";

		Click(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN");

		AssertElementPresent(locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");
	}

	@description = "LPS-100679 - Verify that users are able to filter the Performance by Step page by period: Today, Yesterday, Last 7 Days, Last 30 Days, Last 90 Days, Last 180 Days, Last Year, Custom Range"
	@priority = "3"
	test FilterPerformanceByStepPagePerTimeRange {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		Click(
			key_stepsNumber = "2",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Today");

		AssertElementPresent(
			key_allItemsFilterName = "Today",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Yesterday");

		AssertElementPresent(
			key_allItemsFilterName = "Yesterday",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Last 7 Days");

		AssertElementPresent(
			key_allItemsFilterName = "Last 7 Days",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Last 30 Days");

		AssertElementPresent(
			key_allItemsFilterName = "Last 30 Days",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Last 90 Days");

		AssertElementPresent(
			key_allItemsFilterName = "Last 90 Days",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Last 180 Days");

		AssertElementPresent(
			key_allItemsFilterName = "Last 180 Days",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Last Year");

		AssertElementPresent(
			key_allItemsFilterName = "Last Year",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");

		WorkflowMetrics.selectDateRange(
			completionVelocityDateRange = "Custom Range",
			dateRange = "Last Year",
			endDateRange = "06/15/2021",
			startDateRange = "06/14/2021",
			title = "");

		AssertElementPresent(
			key_allItemsFilterName = "Jun 14, 2021 - Jun 15, 2021",
			locator1 = "WorkflowAllItems#WORKFLOW_ALL_ITEMS_FILTER_BY");
	}

	@description = "LPS-100674 - Verify that the fields From and To are required"
	@priority = "3"
	test FromAndToAreRequiredFields {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.viewPerformanceByStepFromAndToAreRequiredFields(
			completionVelocityDateRange = "Custom Range",
			endDateRange = " ",
			startDateRange = " ");
	}

	@description = "LPS-100674 - Verify that hovering the info icon next to Performance by Step card will display a tooltip"
	@priority = "2"
	test InfoIconDisplaysMessageOnHover {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetricsProcessListView.assertTooltipMessage(
			sectionName = "Performance by Step",
			tooltipMessage = "View the average completion time and percentage of SLA breaches over the selected time period for each step of the workflow process");
	}

	@description = "LPS-100674 - Verify that at the custom range modal, the oldest date accepted is 1970"
	@priority = "2"
	test OldestDataAcceptedIs1970 {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetrics.selectDateRange(
			completionVelocityDateRange = "Custom Range",
			dateRange = "Last 30 Days",
			endDateRange = "06/22/2021",
			startDateRange = "01/01/1969",
			title = "Performance by Step");

		WorkflowMetrics.viewDateRangeErrorMessage(errorMessage = "The date cannot be earlier than 1970.");

		Refresh();

		WorkflowMetrics.selectDateRange(
			completionVelocityDateRange = "Custom Range",
			dateRange = "Last 30 Days",
			endDateRange = "06/22/2021",
			startDateRange = "01/01/1970",
			title = "Performance by Step");

		AssertElementPresent(
			completionVelocityDateRange = "Jan 01, 1970 - Jun 22, 2021",
			locator1 = "WorkflowMetrics#METRICS_COMPLETION_VELOCITY_DATE_RANGE_DROPDOWN_OPTION");
	}

	@description = "LPS-130215 - Verify that when a specific version is chosen, the page only considers closed instances that are in the version chosen"
	@priority = "4"
	test PageConsidersClosedInstancesInChosenVersion {
		property test.name.skip.portal.instance = "WorkflowMetricsPerformanceByStep#PageConsidersClosedInstancesInChosenVersion";

		var documentTitle1 = "Blogs Entry Title 1";
		var documentTitle2 = "Blogs Entry Title 2";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "${documentTitle1}");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "${documentTitle1}",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "${documentTitle1}",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "Single Approver Updated");

		ProcessBuilderKaleoDesignerReact.uploadDefinition(workflowDefinitionFile = "single-approver-updated-workflow-definition.xml");

		ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();

		PortletEntry.publish();

		Navigator.openURL();

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "${documentTitle2}");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "${documentTitle2}",
			workflowAssetType = "Blogs Entry",
			workflowTask = "review2");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "${documentTitle2}",
			workflowAssetType = "Blogs Entry",
			workflowTask = "review2");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver Updated");

		Navigator.gotoNavItem(navItem = "Performance");

		Click(
			key_stepsNumber = "3",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

		for (var stepName : list "Review,review2,update2") {
			AssertElementPresent(
				key_stepName = "${stepName}",
				locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");
		}

		WorkflowMetricsPerformanceByStep.assertStepNameByProcessVersion(
			rowName = "Review",
			rowNumber = "1",
			version = "1.0");

		WorkflowMetricsPerformanceByStep.assertStepNameByProcessVersion(
			rowName = "review2",
			rowNumber = "1",
			version = "2.0");
	}

	@description = "LPS-101075 - Verify that when the user clicks on View All Steps the Performance by Step page displays the same steps displayed in the card"
	@ignore = "Test Stub"
	@priority = "4"
	test PageDisplaysSameStepsAsCard {
		Workflow.openWorkflowProcessBuilderConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.openWorkflowListView();

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		KaleoDesigner.selectNode(nodeNodeLabel = "update");

		KaleoDesigner.editNodeName(nodeName = "update2");

		KaleoDesigner.selectNode(nodeNodeLabel = "review");

		KaleoDesigner.editNodeName(nodeName = "review2");

		Button.click(button = "Update");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		Click(
			key_stepsNumber = "3",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

		AssertElementPresent(
			key_stepName = "Review",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");

		AssertElementPresent(
			key_stepName = "review2",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");

		AssertElementPresent(
			key_stepName = "update2",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");

		Navigator.gotoBack();

		Click(locator1 = "WorkflowMetricsPerformanceByStep#ALL_VERSIONS_DROPDOWN");

		Click(
			key_versionOption = "1.0",
			locator1 = "WorkflowMetricsPerformanceByStep#ALL_VERSIONS_DROPDOWN_OPTION");

		Click(
			key_stepsNumber = "1",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

		AssertElementPresent(
			key_stepName = "Review",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");

		AssertElementNotPresent(
			key_stepName = "review2",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");

		AssertElementNotPresent(
			key_stepName = "update2",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");
	}

	@description = "LPS-100677 - Verify that the search is an approximate match aka LIKE search type or character by character comparison"
	@priority = "3"
	test SearchIsAnApproximateMatch {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		Click(
			key_stepsNumber = "2",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

		WorkflowMetricsPerformanceByStep.searchForStep(stepName = "view");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "Update",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.searchForStep(stepName = "date");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "Review",
			slaBreachedValue = "0 (0%)",
			stepName = "Update");
	}

	@description = "LPS-101075 - Verify that, when a task do not touch the workflow task, the step is not displayed for the specific version"
	@priority = "5"
	test StepIsNotDisplayedForSpecificVersion {
		property test.name.skip.portal.instance = "WorkflowMetricsPerformanceByStep#StepIsNotDisplayedForSpecificVersion";

		task ("Configure Single Approver Workflow to Blogs Entry") {
			ApplicationsMenu.gotoPortlet(
				category = "Workflow",
				panel = "Applications",
				portlet = "Process Builder");

			Navigator.gotoNavItem(navItem = "Configuration");

			Workflow.configureWorkflow(
				workflowDefinition = "Single Approver",
				workflowResourceValue = "Blogs Entry");
		}

		Navigator.openURL();

		task ("Create blog entry and approve it") {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				panel = "Site Administration",
				portlet = "Blogs");

			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry 1");

			UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

			Workflow.assignToMeTaskByActions(
				workflowAssetTitle = "Blogs Entry 1",
				workflowAssetType = "Blogs Entry",
				workflowTask = "Review");

			Workflow.approveTaskByActions(
				workflowAssetTitle = "Blogs Entry 1",
				workflowAssetType = "Blogs Entry",
				workflowTask = "Review");
		}

		task ("Assert that the steps displayed on Performance by Step card are Review and Update") {
			WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

			WorkflowMetricsPerformanceByStep.goToPerformanceTab();

			WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
				avgCompletionTimeValue = "1min",
				isNotPresent = "",
				slaBreachedValue = "0 (0%)",
				stepName = "Review");

			WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
				avgCompletionTimeValue = "0min",
				isNotPresent = "",
				slaBreachedValue = "0 (0%)",
				stepName = "Update");
		}

		task ("Edit Single Approver Workflow") {
			ApplicationsMenu.gotoPortlet(
				category = "Workflow",
				panel = "Applications",
				portlet = "Process Builder");

			Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

			WorkflowMetricsAllItemsList.selectAndChangeNodeName(
				nodeLabel = "review",
				nodeName = "review2",
				nodeType = "task",
				update = "true");

			WorkflowMetricsAllItemsList.selectAndChangeNodeName(
				nodeLabel = "update",
				nodeName = "update2",
				nodeType = "task",
				update = "true");

			Button.clickUpdate();
		}

		task ("On Performance by Step card, select Version 1.0") {
			WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

			WorkflowMetricsPerformanceByStep.goToPerformanceTab();

			Click(
				key_dateRange = "All Version",
				key_title = "Performance by Step",
				locator1 = "WorkflowMetrics#METRICS_DATE_RANGE_DROPDOWN_BY_TITLE");

			Click(
				key_dateRange = "1.0",
				locator1 = "WorkflowMetricsPerformanceByStep#DATE_RANGE_DROPDOWN_OPTION");
		}

		task ("Assert that the Update step is not displayed on Performance by Step card") {
			AssertElementNotPresent(
				key_stepName = "Update",
				locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");
		}
	}

	@description = "LPS-97667 - Verify that when there are tasks with average time smaller than 1 minute the average completion time is displayed"
	@priority = "4"
	test TasksWithAverageTimeSmallerThan1MinAreDisplayed {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0000",
			slaDefinitionName = "Test SLA",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 2");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 3");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 2",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 2",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 3",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 3",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		AssertElementPresent(
			key_stepName = "Review",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_AVG_COMPLETION_TIME_VALUE",
			value1 = "1min");
	}

	@description = "LPS-100674 - Verify that the To date is greater than the From date"
	@priority = "3"
	test ToDateMustBeGreaterThanFromDate {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetrics.selectDateRange(
			completionVelocityDateRange = "Custom Range",
			dateRange = "Last 30 Days",
			endDateRange = "01/01/2021",
			startDateRange = "02/01/2021",
			title = "Performance by Step");

		WorkflowMetrics.viewDateRangeErrorMessage(errorMessage = "The start date cannot be later than the end date.");

		WorkflowMetrics.viewDateRangeErrorMessage(errorMessage = "The end date cannot be earlier than the start date.");
	}

	@description = "LPS-100677 - Verify that searching steps containing non-ascii chars is possible"
	@priority = "3"
	test UserCanSearchNonAsciiChars {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetricsPerformanceByStep#UserCanSearchNonAsciiChars";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "11 Transitions Update");

		ProcessBuilderKaleoDesignerReact.uploadDefinition(workflowDefinitionFile = "11-transitions-update-workflow-definition.xml");

		ProcessBuilderKaleoDesignerReact.diagramSourceSwitchView();

		Button.clickPublish();

		Navigator.gotoBack();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "11 Transitions Update");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		Click(
			key_stepsNumber = "11",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

		WorkflowMetricsPerformanceByStep.searchForStep(stepName = "新");

		AssertElementPresent(
			key_stepName = "更新",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_TABLE_STEP_NAME");
	}

	@description = "LPS-100674 - Verify that when an SLA is deleted, the data in Performance by Step is still part of the average calculation"
	@priority = "4"
	test WhenSlaIsDeletedDataInCardIsStillPartOfTheCalculation {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "Test",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetrics.assertChartTotalValuePerformanceByStep(
			avgCompletionTime = "1min",
			rowName = "Review",
			slaBreachedValue = "0 (0%)");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		WorkflowMetrics.goToDeleteSLA(slaName = "Test");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetrics.assertChartTotalValuePerformanceByStep(
			avgCompletionTime = "1min",
			rowName = "Review",
			slaBreachedValue = "0 (0%)");
	}

}