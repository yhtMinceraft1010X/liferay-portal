@component-name = "portal-workflow-ee"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Workflow Metrics";

	setUp {
		TestCase.setUpPortalInstance();

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		User.firstLoginPG();

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-89082 - Verify that a blocked SLA can be fixed"
	@priority = "5"
	test BlockedSLACanBeFixed {
		property test.name.skip.portal.instance = "WorkflowMetricsSLA#BlockedSLACanBeFixed";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Leaves Task: Update",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Name",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "Liferay DXP");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test content",
			entryTitle = "Test blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		ProcessBuilderKaleoDesignerReact.selectNodeByLabel(nodeLabel = "update");

		ProcessBuilderKaleoDesignerReact.deleteNodeOrConnection(title = "Delete Task Node");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.assertWarningBlockedSlaPresent(warningMessage = "1 SLA is blocked. Fix the SLA configuration to resume accurate reporting.");

		Click(
			key_slaWarning = "Set Up SLAs",
			locator1 = "WorkflowMetricsSLA#SLA_SETUP_WARNING_BUTTON");

		WorkflowMetrics.goToEditSLA(slaName = "SLA Name");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Leaves Task: Review",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Name");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.assertWarningBlockedSlaNotPresent(warningMessage = "1 SLA is blocked. Fix the SLA configuration to resume accurate reporting.");
	}

	@description = "LPS-89014 - Verify the system allow users to navigate between fields and buttons by pressing tab key considering the following order: Name > Description > Start > Pause > Stop > Days > Hours > Save button > Cancel button"
	@ignore = "Test Stub"
	@priority = "2"
	test CanNavigateByTabKeyBetweenFields {

		// TODO LRQA-67863 CanNavigateByTabKeyBetweenFields pending implementation

	}

	@description = "LPS-89014 - Verify that creating a SLA will not be reflected in completed instances"
	@priority = "4"
	test CreatingSLANotReflectCompletedInstances {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "Test Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "Test1",
			slaDefinitionStart = "Process Begins");

		WorkflowMetrics.goToWorkflowAllItemsByStatus(
			completedItemStatus = "Total Completed",
			workflowProcessName = "Single Approver");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		var getInstanceId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#NO_SLA_RECORDS_MESSAGE");
	}

	@description = "LPS-89014 - Verify that deleting a SLA will not be reflected in all completed instances"
	@priority = "4"
	test DeletingSLANotReflectCompletedInstances {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "Test Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "Test",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Pause(locator1 = "60000");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetrics.checkCompletedWorkflowValues(
			key_completed = "1",
			key_ontime = "1",
			key_overdue = "0",
			key_untracked = "0");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		WorkflowMetrics.goToDeleteSLA(slaName = "Test");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetrics.checkCompletedWorkflowValues(
			key_completed = "1",
			key_ontime = "1",
			key_overdue = "0",
			key_untracked = "0");
	}

	@description = "LPS-89014 - Verify that deleting a SLA will be reflected in all instances In Progress"
	@priority = "5"
	test DeletingSLAReflectInProgressInstances {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0100",
			slaDefinitionName = "SLA Name",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Pause(locator1 = "60000");

		Refresh();

		WorkflowMetrics.checkPendingWorkflowValues(
			key_ontime = "1",
			key_overdue = "0",
			key_pending = "1",
			key_untracked = "0");

		Click(locator1 = "WorkflowMetricsSLA#METRICS_MENU_SLA");

		Click(locator1 = "WorkflowMetricsSLA#METRICS_SLA_SETTINGS");

		WorkflowMetrics.goToDeleteSLA(slaName = "SLA Name");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#SLA_EMPTY_MESSAGE");

		Navigator.gotoBack();

		WorkflowMetrics.checkPendingWorkflowValues(
			key_ontime = "0",
			key_overdue = "0",
			key_pending = "1",
			key_untracked = "1");
	}

	@description = "LPS-89082 - Verify that the error alert will be displayed again when user enters the metrics page again after closing it"
	@priority = "2"
	test ErrorAlertIsDisplayedAgainWhenClosed {
		property test.name.skip.portal.instance = "WorkflowMetricsProcessListView#CanOrderByOnTimeItems";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Leaves Task: Update",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "Test",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Test Entry",
			entryTitle = "Test Blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		ProcessBuilderKaleoDesignerReact.selectNodeByLabel(nodeLabel = "update");

		ProcessBuilderKaleoDesignerReact.deleteNodeOrConnection(title = "Delete Task Node");

		Button.clickUpdate();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Pause(locator1 = "50000");

		Refresh();

		AssertElementPresent(locator1 = "WorkflowMetrics#WARNING_SLA_BLOCKED");

		Click(locator1 = "Icon#TIMES");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		AssertElementPresent(locator1 = "WorkflowMetrics#WARNING_SLA_BLOCKED");
	}

	@description = "LPS-89082 - Verify and click (if possible) the error messages (at metrics, SLA list, and SLA defintion page) when SLA is blocked due to workflow changes"
	@priority = "4"
	test ErrorMessagesAreDisplayedAndClickableWhenSLABlocked {
		property test.name.skip.portal.instance = "WorkflowMetricsSLA#ErrorMessagesAreDisplayedAndClickableWhenSLABlocked";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Leaves Task: Update",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Name",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "Liferay DXP");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test content",
			entryTitle = "Test blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		ProcessBuilderKaleoDesignerReact.selectNodeByLabel(nodeLabel = "update");

		ProcessBuilderKaleoDesignerReact.deleteNodeOrConnection(title = "Delete Task Node");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.assertWarningBlockedSlaPresent(warningMessage = "1 SLA is blocked. Fix the SLA configuration to resume accurate reporting.");

		Click(
			key_slaWarning = "Set Up SLAs",
			locator1 = "WorkflowMetricsSLA#SLA_SETUP_WARNING_BUTTON");

		WorkflowMetrics.assertErrorSlaPresent(errorMessage = "Fix blocked SLAs to resume accurate reporting.");

		Click(
			key_slaTitle = "SLA Name",
			locator1 = "WorkflowMetricsSLA#SLA_RECORD_TITLE");

		WorkflowMetrics.assertErrorSlaPresent(errorMessage = "The time frame options changed in the workflow definition. Please select new time frames.");
	}

	@description = "LPS-89014 - Verify that the field Name should be in focus at the SLA page when the user selects to edit or to create a new SLA"
	@priority = "3"
	test FieldNameInFocusAtSLAPage {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#SLA_TITLE_FOCUS");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "Test",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		WorkflowMetrics.goToEditSLA(slaName = "Test");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#SLA_TITLE_FOCUS");
	}

	@description = "LPS-89015 - Verify that the multi-select-fields allow to hit enter key to select an option from the dropdown list"
	@priority = "2"
	test MultiSelectFieldsAllowHitEnterKeyToSelectOption {
		var key_testSlaDefinitionDays = "1";
		var key_testSlaDefinitionHours = "00:00";
		var key_testSlaDefinitionDescription = "SLA Description";
		var key_testSlaDefinitionEnd = "Process Ends: Approved";
		var key_testSlaDefinitionName = "SLA Name";
		var key_testSlaDefinitionStart = "Process Begins";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "${key_testSlaDefinitionDays}",
			slaDefinitionDescription = "${key_testSlaDefinitionDescription}",
			slaDefinitionEnd = "${key_testSlaDefinitionEnd}",
			slaDefinitionHours = "${key_testSlaDefinitionHours}",
			slaDefinitionName = "${key_testSlaDefinitionName}",
			slaDefinitionStart = "${key_testSlaDefinitionStart}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_NAME",
			value1 = "${key_testSlaDefinitionName}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_DESCRIPTION",
			value1 = "${key_testSlaDefinitionDescription}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_STEPS_START",
			value1 = "${key_testSlaDefinitionStart}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_STEPS_STOP",
			value1 = "${key_testSlaDefinitionEnd}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_DAYS",
			value1 = "${key_testSlaDefinitionDays}");
	}

	@description = "LPS-89015 - Verify that the multi-select-fields allow to navigate from the input field to the dropdown list vertically by using up/down keys"
	@priority = "2"
	test MultiSelectFieldsAllowNavigationByUpDownKeys {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_START");

		KeyPress.keyDown(
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START",
			value1 = "\COMMAND");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_STOP");

		KeyPress.keyDown(
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP",
			value1 = "\COMMAND");

		KeyPress.keyUp(
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP",
			value1 = "\COMMAND");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		KeyPress.keyDown(
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE",
			value1 = "\COMMAND");

		KeyPress.keyUp(
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE",
			value1 = "\COMMAND");
	}

	@description = "LPS-89015 - Verify that the multi-select-fields filter the dropdown list according to search terms"
	@priority = "4"
	test MultiSelectFieldsFilterDropdownListAccordingSearchTerms {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_START");

		AssertElementPresent(
			key_slaDefinitionStart = "Enters Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START_OPTION");

		AssertElementPresent(
			key_slaDefinitionStart = "Leaves Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START_OPTION");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_START");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		AssertElementPresent(
			key_slaDefinitionPause = "On Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE_OPTION");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_STOP");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_START");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		AssertElementPresent(
			key_slaDefinitionEnd = "Process Ends: Approved",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP_OPTION");
	}

	@description = "LPS-89015 - Verify that the multi-select-fields provide feedback when typing terms that doesn't exist"
	@priority = "3"
	test MultiSelectFieldsProvideFeedbackWhenTypingNotExistentTerms {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_START");

		Type(
			locator1 = "WorkflowMetricsSLA#SLA_INPUT_START",
			value1 = "Start SLA Counting");

		AssertElementPresent(
			key_slaDefinitionStart = "No results were found.",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START_OPTION");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		Type(
			locator1 = "WorkflowMetricsSLA#SLA_INPUT_PAUSE",
			value1 = "Pause SLA Counting");

		AssertElementPresent(
			key_slaDefinitionPause = "No results were found.",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE_OPTION");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_STOP");

		Type(
			locator1 = "WorkflowMetricsSLA#SLA_INPUT_STOP",
			value1 = "Stop SLA Counting");

		AssertElementPresent(
			key_slaDefinitionEnd = "No results were found.",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP_OPTION");
	}

	@description = "LPS-89015 - Verify that once an order option is made by the user, this definition should be saved by the system during the user stay in the Metrics context, even when the user makes a search query, reloads the page"
	@priority = "2"
	test MultiSelectFieldsProvideFocusWhenFieldActive {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_START");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_START");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_STOP");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_STOP");
	}

	@description = "LPS-89015 - Verify the option for pause field is: On task: [task-name]"
	@priority = "4"
	test PauseFieldOptions {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		AssertElementPresent(
			key_slaDefinitionPause = "On Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE_OPTION");

		AssertElementPresent(
			key_slaDefinitionPause = "On Task: Update",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE_OPTION");
	}

	@description = "LPS-89014 - Verify that the popover is displayed when hovering the pointer on the add button"
	@priority = "2"
	test PopoverIsDisplayedWhenHoveringAddButton {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#METRICS_MENU_SLA");

		Click(locator1 = "WorkflowMetricsSLA#METRICS_SLA_SETTINGS");

		MouseOver(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		AssertVisible(locator1 = "WorkflowMetricsSLA#SLA_MESSAGE_NEW_SLA");
	}

	@description = "LPS-89416 - Verity the propagating info alert when updating a SLA"
	@priority = "3"
	test PropagatingInfoAlertDisplayedWhenUpdatingSLA {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		AssertElementPresent(locator1 = "WorkflowMetrics#METRICS_NO_SLA_MESSAGE");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0005",
			slaDefinitionName = "SLAName",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#METRICS_MENU_SLA");

		Click(locator1 = "WorkflowMetricsSLA#METRICS_SLA_SETTINGS");

		WorkflowMetrics.goToEditSLA(slaName = "SLAName");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionHours = "0000",
			slaDefinitionName = "SLAName");

		Button.clickUpdate();

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#SLA_UPDATE_MESSAGE");
	}

	@description = "LPS-89015 - Verify that the same option can't be selected in Start and Stop fields simultaneously"
	@priority = "5"
	test SameOptionCantBeSelectedInStartStopFields {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:03",
			slaDefinitionName = "SLA Name",
			slaDefinitionStart = "Process Begins");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_STOP");

		AssertElementNotPresent(
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP_OPTION",
			slaDefinitionEnd = "Process Begins");
	}

	@description = "LPS-89015 - Verify that the same task can't be selected in Start or Stop and Pause fields simultaneously"
	@priority = "5"
	test SameTaskCantBeSelectedInStartStopPauseFields {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "Test",
			slaDefinitionStart = "Enters Task: Update");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		AssertElementNotPresent(
			key_slaDefinitionPause = "On Task: Update",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE_OPTION");

		AssertElementPresent(
			key_slaDefinitionPause = "On Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE_OPTION");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "Test",
			slaDefinitionStart = "Enters Task: Review");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_PAUSE");

		AssertElementNotPresent(
			key_slaDefinitionPause = "On Task: Update",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE_OPTION");

		AssertElementNotPresent(
			key_slaDefinitionPause = "On Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_PAUSE_OPTION");
	}

	@description = "LPS-89014 - Verify that the SLA infos are correctly displayed on the table view"
	@priority = "5"
	test SLAInfosAreCorrectlyDisplayed {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Definition",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		AssertElementPresent(
			key_slaName = "SLA Definition",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_SLA_NAME");

		AssertElementPresent(
			key_columnName = "Description",
			key_fieldName = "SLA Description",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_SLA_INFO");

		AssertElementPresent(
			key_columnName = "Status",
			key_fieldName = "Running",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_SLA_INFO");

		AssertElementPresent(
			key_columnName = "Duration",
			key_fieldName = "1min",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_SLA_INFO");
	}

	@description = "LPS-89082 - Verify that the SLA list should group SLAs into Blocked and Running sections when there is at least 1 blocked SLA"
	@priority = "4"
	test SLAListIsGroupedWhenSLABlocked {
		property test.name.skip.portal.instance = "WorkflowMetricsSLA#SLAListIsGroupedWhenSLABlocked";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0000",
			slaDefinitionName = "SLA1",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "SLA Description2",
			slaDefinitionEnd = "Leaves Task: Update",
			slaDefinitionHours = "0000",
			slaDefinitionName = "SLA2",
			slaDefinitionStart = "Enters Task: Update");

		Button.clickSave();

		Click(locator1 = "Icon#BACK");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		ProcessBuilderKaleoDesignerReact.selectNodeByLabel(nodeLabel = "update");

		ProcessBuilderKaleoDesignerReact.deleteNodeOrConnection(title = "Delete Task Node");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.assertWarningBlockedSlaPresent(warningMessage = "1 SLA is blocked.");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		AssertElementPresent(
			key_columnName = "Status",
			key_fieldName = "Blocked",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_SLA_INFO");

		AssertElementPresent(
			key_columnName = "Status",
			key_fieldName = "Running",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_SLA_INFO");
	}

	@description = "LPS-94760 - Verify that date format abbreviates the month and doesn't show year. (Example: Apr 25)"
	@ignore = "Test Stub"
	@priority = "3"
	test SLAProcessingDateAbbreviatesMonth {

		// TODO LRQA-67848 SLAProcessingDateAbbreviatesMonth pending implementation

	}

	@description = "LPS-94760 - Verify that when there is an alert message on the page, the update date should be displayed below it"
	@ignore = "true"
	@priority = "3"
	test SLAProcessingDateIsDisplayedUnderAlertMessage {
		property test.name.skip.portal.instance = "WorkflowMetricsSLA#SLAProcessingDateIsDisplayedUnderAlertMessage";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Leaves Task: Update",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Name",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		KaleoDesigner.selectNode(nodeNodeLabel = "update");

		KaleoDesigner.deleteNode(nodeNodeLabel = "update");

		Button.click(button = "Update");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.assertSLAProcessingDate(warningMessage = "1 SLA is blocked. Fix the SLA configuration to resume accurate reporting.");
	}

	@description = "LPS-94760 - Verify that when there is no SLA defined to the process, the message is not displayed"
	@priority = "3"
	test SLAProcessingDateIsNotDisplayedWhenNoSLA {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		AssertVisible(
			key_warningMessage = "No SLAs are defined for this process.",
			locator1 = "Message#WARNING_SPECIFIC");
	}

	@description = "LPS-94760 - Verify that the time format is following the system language (Example: 03:34 PM for en_US and 15:34 for pt)"
	@priority = "3"
	test SLAProcessingTimeFormatIsFollowingSystemLanguage {
		var slaName = "SLAName";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0000",
			slaDefinitionName = "${slaName}",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content",
			entryTitle = "Test Blog");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_TITLE");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		var getInstanceId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		while (IsElementNotPresent(key_slaName = "${slaName}", locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_ENGLISH_HOUR_FORMAT")) {
			Click(locator1 = "WorkflowAllItems#DETAIL_PAGE_CLOSE");

			Pause(locator1 = "2000");

			Refresh();

			Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");
		}

		AssertElementPresent(
			key_slaName = "${slaName}",
			locator1 = "WorkflowAllItems#DETAIL_PAGE_SLA_ENGLISH_HOUR_FORMAT");

		Click(locator1 = "WorkflowAllItems#DETAIL_PAGE_CLOSE");

		UserBar.gotoDropdownItem(dropdownItem = "Account Settings");

		MyAccount.changeUserLanguage(
			languageName = "português (Brasil)",
			saveButton = "Save");

		ApplicationsMenu.gotoPortlet(
			category = "Fluxo de trabalho",
			panel = "Aplicativos",
			portlet = "Métricas");

		Click(
			key_workflowProcessName = "Aprovador Único",
			locator1 = "WorkflowMetrics#METRICS_WORKFLOW_PROCESS_NAME");

		Click(
			locator1 = "WorkflowMetrics#NEW_LANGUAGE_DASHBOARD_TOTAL_PENDING_ITEMS_TITLE",
			newLanguageCardName = "Total pendente");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");
	}

	@description = "LPS-89014 - Verify that the table view of SLAs are ordered by last modified (Desc)"
	@priority = "3"
	test SLAsAreOrderedByLasModifiedDesc {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:02",
			slaDefinitionName = "SLA Name 1",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Name 2",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		WorkflowMetrics.assertSlaPosition(
			slaPosition = "1",
			slaTitle = "SLA Name 2");

		WorkflowMetrics.goToEditSLA(slaName = "SLA Name 1");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description Updated",
			slaDefinitionHours = "00:02",
			slaDefinitionName = "SLA Name 1");

		Button.clickUpdate();

		WorkflowMetrics.assertSlaPosition(
			slaPosition = "1",
			slaTitle = "SLA Name 1");
	}

	@description = "LPS-89014 - Verify that the SLA settings is available when accessing the metrics page of a process"
	@priority = "5"
	test SLASettingsAvailableOnMetricsPage {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		AssertElementPresent(locator1 = "WorkflowMetricsSLA#SLA_ELLIPSIS_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#SLA_ELLIPSIS_BUTTON");
	}

	@description = "LPS-89015 - Verify the options for start field are: Process begins, Enters task: [task-name], and Leaves task: [task-name]"
	@priority = "4"
	test StartFieldOptions {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_START");

		AssertElementPresent(
			key_slaDefinitionStart = "Process Begins",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START_OPTION");

		AssertElementPresent(
			key_slaDefinitionStart = "Enters Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START_OPTION");

		AssertElementPresent(
			key_slaDefinitionStart = "Leaves Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START_OPTION");

		AssertElementPresent(
			key_slaDefinitionStart = "Enters Task: Update",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START_OPTION");

		AssertElementPresent(
			key_slaDefinitionStart = "Leaves Task: Update",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_START_OPTION");
	}

	@description = "LPS-89015 - Verify the options for stop field are: Process ends: [task-name], Enters task: [task-name], and Leaves task: [task-name]"
	@priority = "4"
	test StopFieldOptions {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_STOP");

		AssertElementPresent(
			key_slaDefinitionEnd = "Enters Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP_OPTION");

		AssertElementPresent(
			key_slaDefinitionEnd = "Enters Task: Update",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP_OPTION");

		AssertElementPresent(
			key_slaDefinitionEnd = "Leaves Task: Review",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP_OPTION");

		AssertElementPresent(
			key_slaDefinitionEnd = "Leaves Task: Update",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP_OPTION");

		AssertElementPresent(
			key_slaDefinitionEnd = "Process Ends: Approved",
			locator1 = "WorkflowMetricsSLA#SLA_DROPDOWN_STOP_OPTION");
	}

	@description = "LPS-89014 - Verify the successful message when creating a SLA"
	@priority = "2"
	test SuccessfulMessageDisplayedWhenCreatingSLA {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = " SLA Test",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		WorkflowMetrics.viewSLASuccessMessage();
	}

	@description = "LPS-89014 - Verify the successful message when deleting a SLA"
	@priority = "2"
	test SuccessfulMessageDisplayedWhenDeletingSLA {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "SLA Definition",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		Click(locator1 = "WorkflowMetricsSLA#SLA_ELLIPSIS_BUTTON");

		Click(locator1 = "WorkflowMetricsSLA#DELETE_SLA_BUTTON");

		AssertElementPresent(locator1 = "WorkflowMetricsProcessListView#DELETE_SLA_MESSAGE");

		Click(locator1 = "WorkflowMetricsSLA#SLA_REMOVE_CONFIRMATION_BUTTON");

		Alert.viewSuccessMessage();

		AssertElementNotPresent(
			locator1 = "WorkflowMetricsSLA#SLA_TABLE",
			value1 = "SLA Definition");
	}

	@description = "LPS-89416 - Verify that updating a SLA will not be reflected in completed instances"
	@priority = "4"
	test UpdatingSLANotReflectCompletedInstances {
		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "1",
			slaDefinitionDescription = "Test Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0000",
			slaDefinitionName = "Test",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetrics.checkCompletedWorkflowValues(
			key_completed = "1",
			key_ontime = "1",
			key_overdue = "0",
			key_untracked = "0");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		WorkflowMetrics.goToEditSLA(slaName = "Test");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "Test Description",
			slaDefinitionHours = "0001",
			slaDefinitionName = "Test");

		Button.clickUpdate();

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Navigator.gotoNavItem(navItem = "Performance");

		WorkflowMetrics.checkCompletedWorkflowValues(
			key_completed = "1",
			key_ontime = "1",
			key_overdue = "0",
			key_untracked = "0");
	}

	@description = "LPS-89416 - Verify that updating a SLA will recalculate time for all instances In Progress"
	@priority = "5"
	test UpdatingSLARecalculateTimeInProgressInstances {
		property portal.upstream = "quarantine";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "Test Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "00:01",
			slaDefinitionName = "Test",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Blogs");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Pause(locator1 = "50000");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		WaitForElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		var getInstanceId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		WorkflowMetrics.validateDueDateBySLA(
			daysLeft = "0",
			hoursLeft = "00",
			minutesLeft = "00");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		WorkflowMetrics.goToEditSLA(slaName = "Test");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "Test Description",
			slaDefinitionHours = "01:00",
			slaDefinitionName = "Test");

		Button.clickUpdate();

		Pause(locator1 = "35000");

		WorkflowMetrics.goToWorkflowAllItems(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		WorkflowMetrics.validateDueDateBySLA(
			daysLeft = "0",
			hoursLeft = "00",
			minutesLeft = "58");
	}

}